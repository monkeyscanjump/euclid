{"version":3,"file":"constants.js","sourceRoot":"","sources":["../../src/utils/constants.ts"],"names":[],"mappings":"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","sourcesContent":["// Chain identifiers\nexport const CHAIN_UIDS = {\n  ETHEREUM: 'ethereum',\n  POLYGON: 'polygon',\n  ARBITRUM: 'arbitrum',\n  OPTIMISM: 'optimism',\n  COSMOS_HUB: 'cosmoshub-4',\n  OSMOSIS: 'osmosis-1',\n  JUNO: 'juno-1',\n  STARGAZE: 'stargaze-1',\n} as const;\n\n// Wallet types\nexport const WALLET_TYPES = {\n  METAMASK: 'metamask',\n  KEPLR: 'keplr',\n  WALLET_CONNECT: 'walletconnect',\n  COINBASE: 'coinbase',\n  OTHER: 'other',\n} as const;\n\n// Transaction types\nexport const TRANSACTION_TYPES = {\n  SWAP: 'swap',\n  ADD_LIQUIDITY: 'add_liquidity',\n  REMOVE_LIQUIDITY: 'remove_liquidity',\n  TRANSFER: 'transfer',\n} as const;\n\n// Transaction statuses\nexport const TRANSACTION_STATUS = {\n  PENDING: 'pending',\n  SUCCESS: 'success',\n  FAILED: 'failed',\n} as const;\n\n// API endpoints\nexport const API_ENDPOINTS = {\n  CHAINS: '/api/chains',\n  TOKENS: '/api/tokens',\n  POOLS: '/api/pools',\n  ROUTES: '/api/routes',\n  BALANCES: '/api/balances',\n  TRANSACTIONS: '/api/transactions',\n  GRAPHQL: '/graphql',\n} as const;\n\n// Local storage keys\nexport const STORAGE_KEYS = {\n  WALLET_PREFERENCES: 'euclid_wallet_preferences',\n  THEME: 'euclid_theme',\n  SLIPPAGE: 'euclid_slippage',\n  TRANSACTION_HISTORY: 'euclid_transaction_history',\n} as const;\n\nimport { env } from './env';\n\n// Default configuration values (now sourced from environment)\nexport const DEFAULTS = {\n  SLIPPAGE: env.ui.defaultSlippage,\n  ROUTE_REFRESH_INTERVAL: env.refreshIntervals.routes,\n  MARKET_DATA_REFRESH_INTERVAL: env.refreshIntervals.marketData,\n  BALANCE_REFRESH_INTERVAL: env.refreshIntervals.balances,\n  TRANSACTION_TIMEOUT: env.transactionTimeout,\n} as const;\n\n// UI constants (now sourced from environment)\nexport const UI = {\n  MODAL_Z_INDEX: env.ui.zIndex.modal,\n  TOOLTIP_Z_INDEX: env.ui.zIndex.tooltip,\n  DROPDOWN_Z_INDEX: env.ui.zIndex.dropdown,\n  ANIMATION_DURATION: env.ui.animationDuration,\n} as const;\n\n// Validation regex patterns\nexport const PATTERNS = {\n  ETH_ADDRESS: /^0x[a-fA-F0-9]{40}$/,\n  COSMOS_ADDRESS: /^[a-z0-9]{39,59}$/,\n  DECIMAL_NUMBER: /^\\d*\\.?\\d*$/,\n  POSITIVE_NUMBER: /^[+]?([0-9]*[.])?[0-9]+$/,\n} as const;\n\n// Error messages\nexport const ERROR_MESSAGES = {\n  WALLET_NOT_CONNECTED: 'Wallet not connected',\n  INSUFFICIENT_BALANCE: 'Insufficient balance',\n  INVALID_AMOUNT: 'Invalid amount',\n  NO_ROUTE_FOUND: 'No route found for this swap',\n  TRANSACTION_FAILED: 'Transaction failed',\n  NETWORK_ERROR: 'Network error occurred',\n  TIMEOUT: 'Request timeout',\n} as const;\n\n// Success messages\nexport const SUCCESS_MESSAGES = {\n  WALLET_CONNECTED: 'Wallet connected successfully',\n  TRANSACTION_SUBMITTED: 'Transaction submitted',\n  TRANSACTION_CONFIRMED: 'Transaction confirmed',\n  LIQUIDITY_ADDED: 'Liquidity added successfully',\n  LIQUIDITY_REMOVED: 'Liquidity removed successfully',\n} as const;\n\n// Feature flags (now sourced from environment)\nexport const FEATURES = {\n  SERVICE_WORKER: env.features.serviceWorker,\n  DARK_MODE: env.features.darkMode,\n  ADVANCED_ROUTING: env.features.advancedRouting,\n  TRANSACTION_HISTORY: env.features.transactionHistory,\n  PRICE_ALERTS: env.features.priceAlerts,\n  LIMIT_ORDERS: env.features.limitOrders,\n} as const;\n"]}