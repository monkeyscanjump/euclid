{"file":"p-a3yxdMSu.js","mappings":"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","names":[],"sources":["src/utils/env.ts","src/utils/constants.ts"],"sourcesContent":["/**\n * Environment Configuration Utility\n * Browser-compatible configuration without process.env dependency\n */\n\ninterface EnvironmentConfig {\n  // API Configuration\n  euclidGraphqlEndpoint: string;\n  euclidRestEndpoint: string;\n  apiTimeout: number;\n\n  // Development Configuration\n  devServerPort: number;\n  devServerHost: string;\n  nodeEnv: 'development' | 'production' | 'test';\n\n  // Feature Flags\n  features: {\n    serviceWorker: boolean;\n    darkMode: boolean;\n    advancedRouting: boolean;\n    transactionHistory: boolean;\n    priceAlerts: boolean;\n    limitOrders: boolean;\n  };\n\n  // Performance Settings\n  refreshIntervals: {\n    routes: number;\n    marketData: number;\n    balances: number;\n  };\n  transactionTimeout: number;\n\n  // UI Configuration\n  ui: {\n    defaultSlippage: number;\n    animationDuration: number;\n    zIndex: {\n      modal: number;\n      tooltip: number;\n      dropdown: number;\n    };\n  };\n\n  // Chain Configuration\n  defaultChain: string;\n  supportedChains: string[];\n\n  // Wallet Configuration\n  defaultWallet: string;\n  supportedWallets: string[];\n\n  // Logging & Debug\n  logLevel: 'error' | 'warn' | 'info' | 'debug';\n  debugMode: boolean;\n  enablePerformanceMonitoring: boolean;\n}\n\n// Direct configuration - this works in browser environments\nexport const env: EnvironmentConfig = {\n  // API Configuration - using the values from your .env file\n  euclidGraphqlEndpoint: 'https://testnet.api.euclidprotocol.com/graphql',\n  euclidRestEndpoint: 'https://testnet.api.euclidprotocol.com/api/v1',\n  apiTimeout: 10000,\n\n  // Development Configuration\n  devServerPort: 3333,\n  devServerHost: 'localhost',\n  nodeEnv: 'development',\n\n  // Feature Flags\n  features: {\n    serviceWorker: true,\n    darkMode: true,\n    advancedRouting: true,\n    transactionHistory: true,\n    priceAlerts: false,\n    limitOrders: false,\n  },\n\n  // Performance Settings\n  refreshIntervals: {\n    routes: 30000,\n    marketData: 300000,\n    balances: 60000,\n  },\n  transactionTimeout: 300000,\n\n  // UI Configuration\n  ui: {\n    defaultSlippage: 0.5,\n    animationDuration: 250,\n    zIndex: {\n      modal: 1000,\n      tooltip: 1070,\n      dropdown: 1000,\n    },\n  },\n\n  // Chain Configuration\n  defaultChain: 'osmosis-1',\n  supportedChains: ['cosmoshub-4', 'osmosis-1', 'juno-1', 'stargaze-1', 'ethereum', 'polygon', 'arbitrum', 'optimism'],\n\n  // Wallet Configuration\n  defaultWallet: 'keplr',\n  supportedWallets: ['keplr', 'metamask', 'walletconnect', 'coinbase'],\n\n  // Logging & Debug\n  logLevel: 'info',\n  debugMode: false,\n  enablePerformanceMonitoring: false,\n};\n\n// Utility functions for common environment checks\nexport const isDevelopment = () => env.nodeEnv === 'development';\nexport const isProduction = () => env.nodeEnv === 'production';\nexport const isFeatureEnabled = (feature: keyof typeof env.features) => env.features[feature];\n\n// Export individual configurations for convenience\nexport const apiConfig = {\n  graphqlEndpoint: env.euclidGraphqlEndpoint,\n  restEndpoint: env.euclidRestEndpoint,\n  timeout: env.apiTimeout,\n};\n\nexport const uiConfig = env.ui;\nexport const featureFlags = env.features;\nexport const refreshIntervals = env.refreshIntervals;\n","// Chain identifiers\nexport const CHAIN_UIDS = {\n  ETHEREUM: 'ethereum',\n  POLYGON: 'polygon',\n  ARBITRUM: 'arbitrum',\n  OPTIMISM: 'optimism',\n  COSMOS_HUB: 'cosmoshub-4',\n  OSMOSIS: 'osmosis-1',\n  JUNO: 'juno-1',\n  STARGAZE: 'stargaze-1',\n} as const;\n\n// Wallet types\nexport const WALLET_TYPES = {\n  METAMASK: 'metamask',\n  KEPLR: 'keplr',\n  WALLET_CONNECT: 'walletconnect',\n  COINBASE: 'coinbase',\n  OTHER: 'other',\n} as const;\n\n// Transaction types\nexport const TRANSACTION_TYPES = {\n  SWAP: 'swap',\n  ADD_LIQUIDITY: 'add_liquidity',\n  REMOVE_LIQUIDITY: 'remove_liquidity',\n  TRANSFER: 'transfer',\n} as const;\n\n// Transaction statuses\nexport const TRANSACTION_STATUS = {\n  PENDING: 'pending',\n  SUCCESS: 'success',\n  FAILED: 'failed',\n} as const;\n\n// API endpoints\nexport const API_ENDPOINTS = {\n  CHAINS: '/api/chains',\n  TOKENS: '/api/tokens',\n  POOLS: '/api/pools',\n  ROUTES: '/api/routes',\n  BALANCES: '/api/balances',\n  TRANSACTIONS: '/api/transactions',\n  GRAPHQL: '/graphql',\n} as const;\n\n// Local storage keys\nexport const STORAGE_KEYS = {\n  WALLET_PREFERENCES: 'euclid_wallet_preferences',\n  THEME: 'euclid_theme',\n  SLIPPAGE: 'euclid_slippage',\n  TRANSACTION_HISTORY: 'euclid_transaction_history',\n} as const;\n\nimport { env } from './env';\n\n// Default configuration values (now sourced from environment)\nexport const DEFAULTS = {\n  SLIPPAGE: env.ui.defaultSlippage,\n  ROUTE_REFRESH_INTERVAL: env.refreshIntervals.routes,\n  MARKET_DATA_REFRESH_INTERVAL: env.refreshIntervals.marketData,\n  BALANCE_REFRESH_INTERVAL: env.refreshIntervals.balances,\n  TRANSACTION_TIMEOUT: env.transactionTimeout,\n} as const;\n\n// UI constants (now sourced from environment)\nexport const UI = {\n  MODAL_Z_INDEX: env.ui.zIndex.modal,\n  TOOLTIP_Z_INDEX: env.ui.zIndex.tooltip,\n  DROPDOWN_Z_INDEX: env.ui.zIndex.dropdown,\n  ANIMATION_DURATION: env.ui.animationDuration,\n} as const;\n\n// Validation regex patterns\nexport const PATTERNS = {\n  ETH_ADDRESS: /^0x[a-fA-F0-9]{40}$/,\n  COSMOS_ADDRESS: /^[a-z0-9]{39,59}$/,\n  DECIMAL_NUMBER: /^\\d*\\.?\\d*$/,\n  POSITIVE_NUMBER: /^[+]?([0-9]*[.])?[0-9]+$/,\n} as const;\n\n// Error messages\nexport const ERROR_MESSAGES = {\n  WALLET_NOT_CONNECTED: 'Wallet not connected',\n  INSUFFICIENT_BALANCE: 'Insufficient balance',\n  INVALID_AMOUNT: 'Invalid amount',\n  NO_ROUTE_FOUND: 'No route found for this swap',\n  TRANSACTION_FAILED: 'Transaction failed',\n  NETWORK_ERROR: 'Network error occurred',\n  TIMEOUT: 'Request timeout',\n} as const;\n\n// Success messages\nexport const SUCCESS_MESSAGES = {\n  WALLET_CONNECTED: 'Wallet connected successfully',\n  TRANSACTION_SUBMITTED: 'Transaction submitted',\n  TRANSACTION_CONFIRMED: 'Transaction confirmed',\n  LIQUIDITY_ADDED: 'Liquidity added successfully',\n  LIQUIDITY_REMOVED: 'Liquidity removed successfully',\n} as const;\n\n// Feature flags (now sourced from environment)\nexport const FEATURES = {\n  SERVICE_WORKER: env.features.serviceWorker,\n  DARK_MODE: env.features.darkMode,\n  ADVANCED_ROUTING: env.features.advancedRouting,\n  TRANSACTION_HISTORY: env.features.transactionHistory,\n  PRICE_ALERTS: env.features.priceAlerts,\n  LIMIT_ORDERS: env.features.limitOrders,\n} as const;\n"],"version":3}