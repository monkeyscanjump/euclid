import{D as n}from"./p-8CHUc0Tf.js";import"./p-DWrf3bWA.js";import"./p-uEsOKkhe.js";async function t(t,a="GET",o,c){const r={...n,...c};const i=new AbortController;const s=setTimeout((()=>i.abort()),r.apiTimeout);try{const n=await fetch(`${r.restEndpoint}${t}`,{method:a,headers:{"Content-Type":"application/json",Accept:"application/json"},body:o?JSON.stringify(o):undefined,signal:i.signal});clearTimeout(s);if(!n.ok){throw new Error(`HTTP ${n.status}: ${n.statusText}`)}const c=await n.json();return c}catch(n){clearTimeout(s);const t=n instanceof Error?n.message:"Unknown error";throw new Error(`REST request failed: ${t}`)}}async function a(n,a,o,c,r){const i=new URLSearchParams({token_in:n,token_out:a,amount_in:o});if(c)i.append("chain_uid_in",c);if(r)i.append("chain_uid_out",r);const s=await t(`/routes?${i}`);return s}async function o(n){const a=await t("/transaction","POST",n);return a}async function c(n){const a=await t(`/transaction/${n}/status`);return a}async function r(n){const a=await t(`/transaction/${n}`);return a}async function i(n){const a=await t("/gas/estimate","POST",n);return a}async function s(n){const a=await t(`/gas/price/${n}`);return a}async function e(n,a){const o=a?`?chain_uid=${a}`:"";const c=await t(`/balances/${n}${o}`);return c}async function u(n,a){const o=await t(`/nonce/${n}?chain_uid=${a}`);return o}export{e as getBalancesImpl,s as getChainGasPriceImpl,i as getGasEstimateImpl,u as getNonceImpl,a as getRoutesImpl,r as getTransactionDetailsImpl,c as getTransactionStatusImpl,o as postTransactionImpl};
//# sourceMappingURL=p-CJ3lYF4y.js.map