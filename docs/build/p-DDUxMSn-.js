import{D as n}from"./p-9CRWQAc1.js";async function r(r,o,e){const t={...n,...e};const s=new AbortController;const a=setTimeout((()=>s.abort()),t.apiTimeout);try{const n=await fetch(t.graphqlEndpoint,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({query:r,variables:o}),signal:s.signal});clearTimeout(a);if(!n.ok){throw new Error(`HTTP ${n.status}: ${n.statusText}`)}const e=await n.json();if(e.errors){throw new Error(`GraphQL errors: ${e.errors.map((n=>n.message)).join(", ")}`)}return e.data}catch(n){clearTimeout(a);const r=n instanceof Error?n.message:"Unknown error";throw new Error(`User query failed: ${r}`)}}async function o(n){const o=`\n    query Vcoin($user: CrossChainUserInput) {\n      vcoin {\n        user_balance(user: $user) {\n          balances {\n            amount\n            token_id\n          }\n        }\n      }\n    }\n  `;const e=await r(o,{user:n});return e.vcoin.user_balance.balances}export{o as getUserBalancesImpl};
//# sourceMappingURL=p-DDUxMSn-.js.map