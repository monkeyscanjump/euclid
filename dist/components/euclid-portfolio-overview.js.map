{"file":"euclid-portfolio-overview.js","mappings":"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","names":["EuclidPortfolioOverview","__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/features/euclid-portfolio-overview/euclid-portfolio-overview.css?tag=euclid-portfolio-overview&encapsulation=shadow","src/components/features/euclid-portfolio-overview/euclid-portfolio-overview.tsx"],"sourcesContent":[":host {\n  display: block;\n  width: 100%;\n  font-family: var(--euclid-font-family, 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif);\n}\n\n.portfolio-overview {\n  background: var(--euclid-surface);\n  border: 1px solid var(--euclid-border);\n  border-radius: var(--euclid-radius-2xl);\n  overflow: hidden;\n  box-shadow: var(--euclid-shadow-sm);\n}\n\n.portfolio-overview.loading,\n.portfolio-overview.empty {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 64px 24px;\n  text-align: center;\n  color: var(--euclid-text-secondary);\n}\n\n.loading-spinner {\n  display: inline-block;\n  width: 32px;\n  height: 32px;\n  border: 3px solid var(--euclid-border);\n  border-top-color: var(--euclid-interactive-primary);\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n  margin-bottom: 16px;\n}\n\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n.empty-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n}\n\n.empty-state svg {\n  width: 64px;\n  height: 64px;\n  color: var(--euclid-text-muted, #9ca3af);\n}\n\n.empty-state span {\n  font-size: 18px;\n  color: var(--euclid-text-secondary);\n}\n\n/* Portfolio Header */\n.portfolio-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 24px;\n  border-bottom: 1px solid var(--euclid-border);\n  background: var(--euclid-surface-secondary);\n}\n\n.portfolio-title {\n  margin: 0;\n  font-size: 24px;\n  font-weight: 600;\n  color: var(--euclid-text-primary);\n}\n\n.wallet-info {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.wallet-address {\n  padding: 6px 12px;\n  background: var(--euclid-bg-tertiary, #f1f5f9);\n  border: 1px solid var(--euclid-border);\n  border-radius: var(--euclid-radius-lg);\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\n  font-size: 14px;\n  color: var(--euclid-text-secondary);\n}\n\n/* Portfolio Tabs */\n.portfolio-tabs {\n  display: flex;\n  border-bottom: 1px solid var(--euclid-border);\n  background: var(--euclid-surface-secondary);\n  overflow-x: auto;\n}\n\n.tab-btn {\n  padding: 16px 24px;\n  background: transparent;\n  border: none;\n  border-bottom: 2px solid transparent;\n  color: var(--euclid-text-secondary);\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  white-space: nowrap;\n}\n\n.tab-btn:hover {\n  background: var(--euclid-surface-secondary);\n  color: var(--euclid-text-primary);\n}\n\n.tab-btn--active {\n  color: var(--euclid-interactive-primary);\n  border-bottom-color: var(--euclid-interactive-primary);\n  background: var(--euclid-interactive-primary);\n}\n\n/* Portfolio Content */\n.portfolio-content {\n  padding: 24px;\n}\n\n/* Overview Tab */\n.overview-tab {\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n}\n\n.stats-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 20px;\n}\n\n.stat-card {\n  padding: 20px;\n  background: var(--euclid-surface-secondary);\n  border: 1px solid var(--euclid-border);\n  border-radius: var(--euclid-radius-2xl);\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.stat-label {\n  font-size: 14px;\n  color: var(--euclid-text-muted, #6b7280);\n  font-weight: 500;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n}\n\n.stat-value {\n  font-size: 24px;\n  font-weight: 700;\n  color: var(--euclid-text-primary);\n  line-height: 1.2;\n}\n\n.stat-value--positive {\n  color: var(--euclid-success-color, #10b981);\n}\n\n.stat-value--negative {\n  color: var(--euclid-error-color, #ef4444);\n}\n\n.stat-change {\n  font-size: 12px;\n  font-weight: 500;\n}\n\n.stat-change--positive {\n  color: var(--euclid-success-color, #10b981);\n}\n\n.stat-change--negative {\n  color: var(--euclid-error-color, #ef4444);\n}\n\n/* Chart Section */\n.chart-section {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n}\n\n.chart-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.chart-header h3 {\n  margin: 0;\n  font-size: 18px;\n  font-weight: 600;\n  color: var(--euclid-text-primary);\n}\n\n.time-period-selector {\n  display: flex;\n  gap: 4px;\n  background: var(--euclid-bg-tertiary, #f1f5f9);\n  border-radius: var(--euclid-radius-lg);\n  padding: 4px;\n}\n\n.period-btn {\n  padding: 6px 12px;\n  background: transparent;\n  border: none;\n  border-radius: var(--euclid-border-radius-sm, 6px);\n  color: var(--euclid-text-secondary);\n  font-size: 12px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.period-btn:hover {\n  background: var(--euclid-surface-secondary);\n  color: var(--euclid-text-primary);\n}\n\n.period-btn--active {\n  background: var(--euclid-interactive-primary);\n  color: white;\n}\n\n.chart-container {\n  height: 200px;\n  background: var(--euclid-surface-secondary);\n  border: 1px solid var(--euclid-border);\n  border-radius: var(--euclid-radius-2xl);\n  padding: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n/* Allocation Section */\n.allocation-section {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n}\n\n.allocation-section h3 {\n  margin: 0;\n  font-size: 18px;\n  font-weight: 600;\n  color: var(--euclid-text-primary);\n}\n\n.allocation-grid {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n}\n\n.allocation-item {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 16px;\n  background: var(--euclid-surface-secondary);\n  border: 1px solid var(--euclid-border);\n  border-radius: var(--euclid-radius-2xl);\n  transition: background-color 0.2s ease;\n}\n\n.allocation-item:hover {\n  background: var(--euclid-surface-secondary);\n}\n\n.token-info {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  flex: 1;\n}\n\n.token-logo {\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n}\n\n.token-details {\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n}\n\n.token-symbol {\n  font-weight: 600;\n  color: var(--euclid-text-primary);\n  font-size: 14px;\n}\n\n.token-balance {\n  font-size: 12px;\n  color: var(--euclid-text-muted, #6b7280);\n}\n\n.token-value {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  gap: 2px;\n  margin-right: 20px;\n}\n\n.value-primary {\n  font-weight: 600;\n  color: var(--euclid-text-primary);\n  font-size: 14px;\n}\n\n.allocation-percent {\n  font-size: 12px;\n  color: var(--euclid-text-muted, #6b7280);\n}\n\n.price-change {\n  font-size: 12px;\n  font-weight: 500;\n  min-width: 60px;\n  text-align: right;\n}\n\n.price-change--positive {\n  color: var(--euclid-success-color, #10b981);\n}\n\n.price-change--negative {\n  color: var(--euclid-error-color, #ef4444);\n}\n\n/* Positions Tab */\n.positions-tab {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.positions-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.positions-header h3 {\n  margin: 0;\n  font-size: 18px;\n  font-weight: 600;\n  color: var(--euclid-text-primary);\n}\n\n.sort-controls {\n  display: flex;\n  gap: 8px;\n}\n\n.sort-btn {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 12px;\n  background: transparent;\n  border: 1px solid var(--euclid-border);\n  border-radius: var(--euclid-radius-lg);\n  color: var(--euclid-text-secondary);\n  font-size: 12px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.sort-btn:hover {\n  background: var(--euclid-surface-secondary);\n  border-color: var(--euclid-border-hover);\n}\n\n.sort-btn--active {\n  background: var(--euclid-interactive-primary);\n  border-color: var(--euclid-interactive-primary);\n  color: white;\n}\n\n.sort-arrow {\n  width: 12px;\n  height: 12px;\n  transition: transform 0.2s ease;\n}\n\n.sort-arrow--desc {\n  transform: rotate(180deg);\n}\n\n.positions-list {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n}\n\n.position-card {\n  padding: 20px;\n  background: var(--euclid-surface-secondary);\n  border: 1px solid var(--euclid-border);\n  border-radius: var(--euclid-radius-2xl);\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.position-card:hover {\n  background: var(--euclid-surface-secondary);\n  border-color: var(--euclid-border-hover);\n  box-shadow: var(--euclid-shadow-md, 0 4px 6px rgba(0, 0, 0, 0.07));\n}\n\n.position-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n}\n\n.token-pair {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.token-logo--overlap {\n  margin-left: -8px;\n}\n\n.pair-name {\n  font-weight: 600;\n  color: var(--euclid-text-primary);\n  font-size: 16px;\n}\n\n.position-value {\n  font-size: 18px;\n  font-weight: 700;\n  color: var(--euclid-text-primary);\n}\n\n.position-details {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 16px;\n  margin-bottom: 16px;\n}\n\n.detail-item {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n}\n\n.detail-label {\n  font-size: 12px;\n  color: var(--euclid-text-muted, #6b7280);\n  font-weight: 500;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n}\n\n.detail-value {\n  font-size: 14px;\n  font-weight: 600;\n  color: var(--euclid-text-primary);\n}\n\n.detail-value--positive {\n  color: var(--euclid-success-color, #10b981);\n}\n\n.detail-value--negative {\n  color: var(--euclid-error-color, #ef4444);\n}\n\n.apy-value {\n  color: var(--euclid-success-color, #10b981);\n}\n\n.rewards-section {\n  padding: 12px 0;\n  border-top: 1px solid var(--euclid-border);\n  border-bottom: 1px solid var(--euclid-border);\n  margin-bottom: 16px;\n}\n\n.reward-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 14px;\n  color: var(--euclid-text-secondary);\n  margin-bottom: 8px;\n}\n\n.reward-item:last-child {\n  margin-bottom: 0;\n}\n\n.position-actions {\n  display: flex;\n  gap: 8px;\n  justify-content: flex-end;\n}\n\n/* Staking Tab */\n.staking-tab {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.staking-header h3 {\n  margin: 0;\n  font-size: 18px;\n  font-weight: 600;\n  color: var(--euclid-text-primary);\n}\n\n.staking-list {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n}\n\n.staking-card {\n  padding: 20px;\n  background: var(--euclid-surface-secondary);\n  border: 1px solid var(--euclid-border);\n  border-radius: var(--euclid-radius-2xl);\n}\n\n.staking-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n}\n\n.token-symbol {\n  font-weight: 600;\n  color: var(--euclid-text-primary);\n  font-size: 16px;\n}\n\n.token-name {\n  font-size: 12px;\n  color: var(--euclid-text-muted, #6b7280);\n}\n\n.staking-value {\n  font-size: 18px;\n  font-weight: 700;\n  color: var(--euclid-text-primary);\n}\n\n.staking-details {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  gap: 16px;\n  margin-bottom: 20px;\n}\n\n.staking-actions {\n  display: flex;\n  gap: 8px;\n  flex-wrap: wrap;\n}\n\n/* Transactions Tab */\n.transactions-tab {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.transactions-header h3 {\n  margin: 0;\n  font-size: 18px;\n  font-weight: 600;\n  color: var(--euclid-text-primary);\n}\n\n.transactions-list {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n}\n\n.transaction-card {\n  padding: 16px;\n  background: var(--euclid-surface-secondary);\n  border: 1px solid var(--euclid-border);\n  border-radius: var(--euclid-radius-2xl);\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.transaction-card:hover {\n  background: var(--euclid-surface-secondary);\n  border-color: var(--euclid-border-hover);\n}\n\n.transaction-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 12px;\n}\n\n.transaction-type {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.type-label {\n  font-weight: 500;\n  color: var(--euclid-text-primary);\n  font-size: 14px;\n}\n\n.status-badge {\n  padding: 2px 8px;\n  border-radius: 12px;\n  font-size: 10px;\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n}\n\n.status-badge--pending {\n  background: var(--euclid-warning-color-10, rgba(245, 158, 11, 0.1));\n  color: var(--euclid-warning-color, #f59e0b);\n}\n\n.status-badge--confirmed {\n  background: var(--euclid-success-color-10, rgba(16, 185, 129, 0.1));\n  color: var(--euclid-success-color, #10b981);\n}\n\n.status-badge--failed {\n  background: var(--euclid-error-color-10, rgba(239, 68, 68, 0.1));\n  color: var(--euclid-error-color, #ef4444);\n}\n\n.transaction-value {\n  font-weight: 600;\n  color: var(--euclid-text-primary);\n  font-size: 14px;\n}\n\n.transaction-details {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  margin-bottom: 8px;\n}\n\n.transaction-time {\n  font-size: 12px;\n  color: var(--euclid-text-muted, #6b7280);\n}\n\n.token-amounts {\n  font-size: 12px;\n  color: var(--euclid-text-secondary);\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\n}\n\n.transaction-hash {\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\n  font-size: 11px;\n  color: var(--euclid-text-muted, #6b7280);\n  padding: 4px 8px;\n  background: var(--euclid-bg-tertiary, #f1f5f9);\n  border-radius: var(--euclid-border-radius-sm, 6px);\n  display: inline-block;\n}\n\n/* Responsive Design */\n@media (max-width: 1024px) {\n  .stats-grid {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  .position-details {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  .staking-details {\n    grid-template-columns: 1fr;\n  }\n}\n\n@media (max-width: 768px) {\n  .portfolio-header {\n    padding: 16px;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 12px;\n  }\n\n  .portfolio-content {\n    padding: 16px;\n  }\n\n  .stats-grid {\n    grid-template-columns: 1fr;\n    gap: 12px;\n  }\n\n  .chart-header {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 12px;\n  }\n\n  .time-period-selector {\n    align-self: stretch;\n    justify-content: center;\n  }\n\n  .positions-header {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 12px;\n  }\n\n  .sort-controls {\n    align-self: stretch;\n    justify-content: center;\n  }\n\n  .position-details {\n    grid-template-columns: 1fr;\n    gap: 12px;\n  }\n\n  .position-actions,\n  .staking-actions {\n    flex-direction: column;\n  }\n\n  .allocation-item {\n    padding: 12px;\n  }\n\n  .token-value {\n    margin-right: 8px;\n  }\n}\n\n@media (max-width: 640px) {\n  .portfolio-title {\n    font-size: 20px;\n  }\n\n  .tab-btn {\n    padding: 12px 16px;\n    font-size: 12px;\n  }\n\n  .stat-card {\n    padding: 16px;\n  }\n\n  .stat-value {\n    font-size: 20px;\n  }\n\n  .position-card,\n  .staking-card,\n  .transaction-card {\n    padding: 16px;\n  }\n\n  .position-header {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 8px;\n  }\n\n  .token-pair {\n    gap: 6px;\n  }\n\n  .pair-name {\n    font-size: 14px;\n  }\n\n  .position-value,\n  .staking-value {\n    font-size: 16px;\n  }\n}\n","import { Component, Prop, h, State, Event, EventEmitter, Listen, Element } from '@stencil/core';\n\nexport interface TokenBalance {\n  symbol: string;\n  name: string;\n  address: string;\n  decimals: number;\n  logoUrl?: string;\n  balance: string;\n  value: number;\n  price: number;\n  priceChange24h: number;\n  allocation: number;\n}\n\nexport interface PoolPosition {\n  poolId: string;\n  poolAddress: string;\n  tokenA: TokenBalance;\n  tokenB: TokenBalance;\n  lpTokenBalance: string;\n  lpTokenSymbol: string;\n  shareOfPool: number;\n  tokenAAmount: string;\n  tokenBAmount: string;\n  totalValue: number;\n  apy: number;\n  fees24h: number;\n  feesWeek: number;\n  unclaimedRewards?: number;\n  stakingRewards?: number;\n  impermanentLoss: number;\n  entryPrice: number;\n  entryDate: Date;\n}\n\nexport interface StakingPosition {\n  id: string;\n  poolId?: string;\n  tokenSymbol: string;\n  tokenName: string;\n  stakedAmount: string;\n  stakedValue: number;\n  rewards: number;\n  apr: number;\n  lockupPeriod?: number;\n  unlockDate?: Date;\n  autoCompound: boolean;\n}\n\nexport interface Transaction {\n  id: string;\n  type: 'swap' | 'add_liquidity' | 'remove_liquidity' | 'stake' | 'unstake' | 'claim';\n  hash: string;\n  timestamp: Date;\n  status: 'pending' | 'confirmed' | 'failed';\n  tokenA?: TokenBalance;\n  tokenB?: TokenBalance;\n  amountA?: string;\n  amountB?: string;\n  value: number;\n  gasUsed?: string;\n  gasFee?: number;\n}\n\nexport interface PortfolioStats {\n  totalValue: number;\n  totalPnL: number;\n  totalPnLPercent: number;\n  dayChange: number;\n  dayChangePercent: number;\n  weekChange: number;\n  weekChangePercent: number;\n  totalRewards: number;\n  totalStaked: number;\n  activePositions: number;\n  totalTransactions: number;\n}\n\nexport interface ChartDataPoint {\n  timestamp: number;\n  value: number;\n  label?: string;\n}\n\n@Component({\n  tag: 'euclid-portfolio-overview',\n  styleUrl: 'euclid-portfolio-overview.css',\n  shadow: true,\n})\nexport class EuclidPortfolioOverview {\n  @Element() element!: HTMLElement;\n\n  /**\n   * User's token balances\n   */\n  @Prop() tokenBalances: TokenBalance[] = [];\n\n  /**\n   * User's liquidity pool positions\n   */\n  @Prop() poolPositions: PoolPosition[] = [];\n\n  /**\n   * User's staking positions\n   */\n  @Prop() stakingPositions: StakingPosition[] = [];\n\n  /**\n   * Recent transactions\n   */\n  @Prop() transactions: Transaction[] = [];\n\n  /**\n   * Portfolio statistics\n   */\n  @Prop() portfolioStats: PortfolioStats | null = null;\n\n  /**\n   * Chart data for portfolio value over time\n   */\n  @Prop() chartData: ChartDataPoint[] = [];\n\n  /**\n   * Connected wallet address\n   */\n  @Prop() walletAddress: string = '';\n\n  /**\n   * Whether the component is in loading state\n   */\n  @Prop() loading: boolean = false;\n\n  /**\n   * Card title\n   */\n  @Prop() cardTitle: string = 'Portfolio Overview';\n\n  /**\n   * Whether to show detailed analytics\n   */\n  @Prop() showAnalytics: boolean = true;\n\n  /**\n   * Time period for charts and stats\n   */\n  @Prop() timePeriod: '1D' | '1W' | '1M' | '3M' | '1Y' | 'ALL' = '1W';\n\n  // Internal state\n  @State() activeTab: 'overview' | 'positions' | 'staking' | 'transactions' | 'analytics' = 'overview';\n  @State() selectedPosition: PoolPosition | null = null;\n  @State() showChartTooltip: boolean = false;\n  @State() chartTooltipData: ChartDataPoint | null = null;\n  @State() sortBy: 'value' | 'pnl' | 'apy' | 'allocation' = 'value';\n  @State() sortOrder: 'asc' | 'desc' = 'desc';\n\n  // Events\n  @Event() positionSelected: EventEmitter<PoolPosition>;\n  @Event() managePosition: EventEmitter<PoolPosition>;\n  @Event() stakeMore: EventEmitter<StakingPosition>;\n  @Event() unstake: EventEmitter<StakingPosition>;\n  @Event() claimRewards: EventEmitter<PoolPosition | StakingPosition>;\n  @Event() viewTransaction: EventEmitter<Transaction>;\n  @Event() timePeriodChanged: EventEmitter<string>;\n\n  componentDidLoad() {\n    this.setupChart();\n  }\n\n  @Listen('resize', { target: 'window' })\n  handleResize() {\n    this.setupChart();\n  }\n\n  private setupChart() {\n    // Simple chart setup - in a real implementation, you'd use a charting library\n    if (this.chartData.length > 0 && this.showAnalytics) {\n      this.renderChart();\n    }\n  }\n\n  private renderChart() {\n    // This is a simplified chart implementation\n    // In practice, you'd integrate with libraries like Chart.js, D3, or similar\n    const chartContainer = this.element.shadowRoot?.querySelector('.chart-container');\n    if (!chartContainer) return;\n\n    // Clear previous chart\n    chartContainer.innerHTML = '';\n\n    // Create SVG\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttribute('width', '100%');\n    svg.setAttribute('height', '200');\n    svg.setAttribute('viewBox', '0 0 800 200');\n\n    const data = this.chartData;\n    if (data.length === 0) return;\n\n    const maxValue = Math.max(...data.map(d => d.value));\n    const minValue = Math.min(...data.map(d => d.value));\n    const valueRange = maxValue - minValue || 1;\n\n    // Create path\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    const pathData = data\n      .map((point, index) => {\n        const x = (index / (data.length - 1)) * 800;\n        const y = 180 - ((point.value - minValue) / valueRange) * 160;\n        return `${index === 0 ? 'M' : 'L'} ${x} ${y}`;\n      })\n      .join(' ');\n\n    path.setAttribute('d', pathData);\n    path.setAttribute('stroke', 'var(--euclid-primary-color, #3b82f6)');\n    path.setAttribute('stroke-width', '2');\n    path.setAttribute('fill', 'none');\n\n    svg.appendChild(path);\n    chartContainer.appendChild(svg);\n  }\n\n  private handleTabChange = (tab: typeof this.activeTab) => {\n    this.activeTab = tab;\n  };\n\n  private handleTimePeriodChange = (period: typeof this.timePeriod) => {\n    this.timePeriod = period;\n    this.timePeriodChanged.emit(period);\n  };\n\n  private handleSortChange = (sortBy: typeof this.sortBy) => {\n    if (this.sortBy === sortBy) {\n      this.sortOrder = this.sortOrder === 'asc' ? 'desc' : 'asc';\n    } else {\n      this.sortBy = sortBy;\n      this.sortOrder = 'desc';\n    }\n  };\n\n  private handlePositionClick = (position: PoolPosition) => {\n    this.selectedPosition = position;\n    this.positionSelected.emit(position);\n  };\n\n  private handleManagePosition = (position: PoolPosition) => {\n    this.managePosition.emit(position);\n  };\n\n  private handleClaimRewards = (position: PoolPosition | StakingPosition) => {\n    this.claimRewards.emit(position);\n  };\n\n  private handleStakeMore = (position: StakingPosition) => {\n    this.stakeMore.emit(position);\n  };\n\n  private handleUnstake = (position: StakingPosition) => {\n    this.unstake.emit(position);\n  };\n\n  private handleViewTransaction = (transaction: Transaction) => {\n    this.viewTransaction.emit(transaction);\n  };\n\n  private formatNumber(value: number, decimals: number = 2): string {\n    if (value >= 1e9) {\n      return `${(value / 1e9).toFixed(decimals)}B`;\n    } else if (value >= 1e6) {\n      return `${(value / 1e6).toFixed(decimals)}M`;\n    } else if (value >= 1e3) {\n      return `${(value / 1e3).toFixed(decimals)}K`;\n    }\n    return value.toFixed(decimals);\n  }\n\n  private formatPercent(value: number, decimals: number = 2): string {\n    return `${value >= 0 ? '+' : ''}${value.toFixed(decimals)}%`;\n  }\n\n  private getSortedPositions(): PoolPosition[] {\n    const sorted = [...this.poolPositions].sort((a, b) => {\n      let aValue: number, bValue: number;\n\n      switch (this.sortBy) {\n        case 'value':\n          aValue = a.totalValue;\n          bValue = b.totalValue;\n          break;\n        case 'pnl':\n          aValue = a.impermanentLoss;\n          bValue = b.impermanentLoss;\n          break;\n        case 'apy':\n          aValue = a.apy;\n          bValue = b.apy;\n          break;\n        case 'allocation':\n          aValue = this.portfolioStats ? (a.totalValue / this.portfolioStats.totalValue) * 100 : 0;\n          bValue = this.portfolioStats ? (b.totalValue / this.portfolioStats.totalValue) * 100 : 0;\n          break;\n        default:\n          aValue = a.totalValue;\n          bValue = b.totalValue;\n      }\n\n      return this.sortOrder === 'asc' ? aValue - bValue : bValue - aValue;\n    });\n\n    return sorted;\n  }\n\n  private renderOverviewTab() {\n    const stats = this.portfolioStats;\n    if (!stats) return null;\n\n    return (\n      <div class=\"overview-tab\">\n        <div class=\"stats-grid\">\n          <div class=\"stat-card\">\n            <div class=\"stat-label\">Total Value</div>\n            <div class=\"stat-value\">${this.formatNumber(stats.totalValue)}</div>\n            <div class={{\n              'stat-change': true,\n              'stat-change--positive': stats.dayChange >= 0,\n              'stat-change--negative': stats.dayChange < 0,\n            }}>\n              {this.formatPercent(stats.dayChangePercent)} (24h)\n            </div>\n          </div>\n\n          <div class=\"stat-card\">\n            <div class=\"stat-label\">Total P&L</div>\n            <div class={{\n              'stat-value': true,\n              'stat-value--positive': stats.totalPnL >= 0,\n              'stat-value--negative': stats.totalPnL < 0,\n            }}>\n              ${this.formatNumber(stats.totalPnL)}\n            </div>\n            <div class={{\n              'stat-change': true,\n              'stat-change--positive': stats.totalPnLPercent >= 0,\n              'stat-change--negative': stats.totalPnLPercent < 0,\n            }}>\n              {this.formatPercent(stats.totalPnLPercent)}\n            </div>\n          </div>\n\n          <div class=\"stat-card\">\n            <div class=\"stat-label\">Total Rewards</div>\n            <div class=\"stat-value\">${this.formatNumber(stats.totalRewards)}</div>\n            <div class=\"stat-change\">\n              {stats.activePositions} active positions\n            </div>\n          </div>\n\n          <div class=\"stat-card\">\n            <div class=\"stat-label\">Total Staked</div>\n            <div class=\"stat-value\">${this.formatNumber(stats.totalStaked)}</div>\n            <div class=\"stat-change\">\n              {this.stakingPositions.length} staking positions\n            </div>\n          </div>\n        </div>\n\n        {this.showAnalytics && (\n          <div class=\"chart-section\">\n            <div class=\"chart-header\">\n              <h3>Portfolio Value</h3>\n              <div class=\"time-period-selector\">\n                {(['1D', '1W', '1M', '3M', '1Y', 'ALL'] as const).map(period => (\n                  <button\n                    key={period}\n                    class={{\n                      'period-btn': true,\n                      'period-btn--active': period === this.timePeriod,\n                    }}\n                    onClick={() => this.handleTimePeriodChange(period)}\n                    type=\"button\"\n                  >\n                    {period}\n                  </button>\n                ))}\n              </div>\n            </div>\n            <div class=\"chart-container\"></div>\n          </div>\n        )}\n\n        <div class=\"allocation-section\">\n          <h3>Asset Allocation</h3>\n          <div class=\"allocation-grid\">\n            {this.tokenBalances\n              .filter(token => token.value > 0)\n              .sort((a, b) => b.value - a.value)\n              .slice(0, 6)\n              .map(token => (\n                <div key={token.symbol} class=\"allocation-item\">\n                  <div class=\"token-info\">\n                    {token.logoUrl && (\n                      <img src={token.logoUrl} alt={token.symbol} class=\"token-logo\" />\n                    )}\n                    <div class=\"token-details\">\n                      <div class=\"token-symbol\">{token.symbol}</div>\n                      <div class=\"token-balance\">{parseFloat(token.balance).toFixed(4)}</div>\n                    </div>\n                  </div>\n                  <div class=\"token-value\">\n                    <div class=\"value-primary\">${this.formatNumber(token.value)}</div>\n                    <div class=\"allocation-percent\">{token.allocation.toFixed(1)}%</div>\n                  </div>\n                  <div class={{\n                    'price-change': true,\n                    'price-change--positive': token.priceChange24h >= 0,\n                    'price-change--negative': token.priceChange24h < 0,\n                  }}>\n                    {this.formatPercent(token.priceChange24h)}\n                  </div>\n                </div>\n              ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  private renderPositionsTab() {\n    const sortedPositions = this.getSortedPositions();\n\n    return (\n      <div class=\"positions-tab\">\n        <div class=\"positions-header\">\n          <h3>Liquidity Positions</h3>\n          <div class=\"sort-controls\">\n            <button\n              class={{\n                'sort-btn': true,\n                'sort-btn--active': this.sortBy === 'value',\n              }}\n              onClick={() => this.handleSortChange('value')}\n              type=\"button\"\n            >\n              Value\n              {this.sortBy === 'value' && (\n                <svg class={{\n                  'sort-arrow': true,\n                  'sort-arrow--desc': this.sortOrder === 'desc',\n                }} viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                  <path d=\"M7 10l5 5 5-5z\"/>\n                </svg>\n              )}\n            </button>\n            <button\n              class={{\n                'sort-btn': true,\n                'sort-btn--active': this.sortBy === 'apy',\n              }}\n              onClick={() => this.handleSortChange('apy')}\n              type=\"button\"\n            >\n              APY\n            </button>\n          </div>\n        </div>\n\n        <div class=\"positions-list\">\n          {sortedPositions.length === 0 ? (\n            <div class=\"empty-state\">\n              <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <path d=\"M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,17A1.5,1.5 0 0,0 13.5,15.5A1.5,1.5 0 0,0 12,14A1.5,1.5 0 0,0 10.5,15.5A1.5,1.5 0 0,0 12,17M12,10.5C12.8,10.5 13.5,9.8 13.5,9C13.5,8.2 12.8,7.5 12,7.5C11.2,7.5 10.5,8.2 10.5,9C10.5,9.8 11.2,10.5 12,10.5Z\"/>\n              </svg>\n              <span>No liquidity positions found</span>\n            </div>\n          ) : (\n            sortedPositions.map(position => (\n              <div\n                key={position.poolId}\n                class=\"position-card\"\n                onClick={() => this.handlePositionClick(position)}\n              >\n                <div class=\"position-header\">\n                  <div class=\"token-pair\">\n                    {position.tokenA.logoUrl && (\n                      <img src={position.tokenA.logoUrl} alt={position.tokenA.symbol} class=\"token-logo\" />\n                    )}\n                    {position.tokenB.logoUrl && (\n                      <img src={position.tokenB.logoUrl} alt={position.tokenB.symbol} class=\"token-logo token-logo--overlap\" />\n                    )}\n                    <span class=\"pair-name\">{position.tokenA.symbol}/{position.tokenB.symbol}</span>\n                  </div>\n                  <div class=\"position-value\">${this.formatNumber(position.totalValue)}</div>\n                </div>\n\n                <div class=\"position-details\">\n                  <div class=\"detail-item\">\n                    <span class=\"detail-label\">APY</span>\n                    <span class=\"detail-value apy-value\">{position.apy.toFixed(2)}%</span>\n                  </div>\n                  <div class=\"detail-item\">\n                    <span class=\"detail-label\">Share</span>\n                    <span class=\"detail-value\">{position.shareOfPool.toFixed(4)}%</span>\n                  </div>\n                  <div class=\"detail-item\">\n                    <span class=\"detail-label\">IL</span>\n                    <span class={{\n                      'detail-value': true,\n                      'detail-value--positive': position.impermanentLoss >= 0,\n                      'detail-value--negative': position.impermanentLoss < 0,\n                    }}>\n                      {this.formatPercent(position.impermanentLoss)}\n                    </span>\n                  </div>\n                </div>\n\n                {(position.unclaimedRewards || position.stakingRewards) && (\n                  <div class=\"rewards-section\">\n                    {position.unclaimedRewards && position.unclaimedRewards > 0 && (\n                      <div class=\"reward-item\">\n                        <span>Unclaimed: ${this.formatNumber(position.unclaimedRewards)}</span>\n                        <euclid-button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            this.handleClaimRewards(position);\n                          }}\n                        >\n                          Claim\n                        </euclid-button>\n                      </div>\n                    )}\n                    {position.stakingRewards && position.stakingRewards > 0 && (\n                      <div class=\"reward-item\">\n                        <span>Staking: ${this.formatNumber(position.stakingRewards)}</span>\n                      </div>\n                    )}\n                  </div>\n                )}\n\n                <div class=\"position-actions\">\n                  <euclid-button\n                    variant=\"secondary\"\n                    size=\"sm\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      this.handleManagePosition(position);\n                    }}\n                  >\n                    Manage\n                  </euclid-button>\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  private renderStakingTab() {\n    return (\n      <div class=\"staking-tab\">\n        <div class=\"staking-header\">\n          <h3>Staking Positions</h3>\n        </div>\n\n        <div class=\"staking-list\">\n          {this.stakingPositions.length === 0 ? (\n            <div class=\"empty-state\">\n              <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <path d=\"M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,17A1.5,1.5 0 0,0 13.5,15.5A1.5,1.5 0 0,0 12,14A1.5,1.5 0 0,0 10.5,15.5A1.5,1.5 0 0,0 12,17M12,10.5C12.8,10.5 13.5,9.8 13.5,9C13.5,8.2 12.8,7.5 12,7.5C11.2,7.5 10.5,8.2 10.5,9C10.5,9.8 11.2,10.5 12,10.5Z\"/>\n              </svg>\n              <span>No staking positions found</span>\n            </div>\n          ) : (\n            this.stakingPositions.map(position => (\n              <div key={position.id} class=\"staking-card\">\n                <div class=\"staking-header\">\n                  <div class=\"token-info\">\n                    <span class=\"token-symbol\">{position.tokenSymbol}</span>\n                    <span class=\"token-name\">{position.tokenName}</span>\n                  </div>\n                  <div class=\"staking-value\">${this.formatNumber(position.stakedValue)}</div>\n                </div>\n\n                <div class=\"staking-details\">\n                  <div class=\"detail-item\">\n                    <span class=\"detail-label\">Staked Amount</span>\n                    <span class=\"detail-value\">{parseFloat(position.stakedAmount).toFixed(4)} {position.tokenSymbol}</span>\n                  </div>\n                  <div class=\"detail-item\">\n                    <span class=\"detail-label\">APR</span>\n                    <span class=\"detail-value apy-value\">{position.apr.toFixed(2)}%</span>\n                  </div>\n                  <div class=\"detail-item\">\n                    <span class=\"detail-label\">Rewards</span>\n                    <span class=\"detail-value\">${this.formatNumber(position.rewards)}</span>\n                  </div>\n                  {position.unlockDate && (\n                    <div class=\"detail-item\">\n                      <span class=\"detail-label\">Unlock Date</span>\n                      <span class=\"detail-value\">{position.unlockDate.toLocaleDateString()}</span>\n                    </div>\n                  )}\n                </div>\n\n                <div class=\"staking-actions\">\n                  <euclid-button\n                    variant=\"primary\"\n                    size=\"sm\"\n                    onClick={() => this.handleStakeMore(position)}\n                  >\n                    Stake More\n                  </euclid-button>\n                  <euclid-button\n                    variant=\"secondary\"\n                    size=\"sm\"\n                    onClick={() => this.handleUnstake(position)}\n                    disabled={position.unlockDate ? position.unlockDate > new Date() : false}\n                  >\n                    Unstake\n                  </euclid-button>\n                  {position.rewards > 0 && (\n                    <euclid-button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => this.handleClaimRewards(position)}\n                    >\n                      Claim\n                    </euclid-button>\n                  )}\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  private renderTransactionsTab() {\n    const recentTransactions = this.transactions.slice(0, 20);\n\n    return (\n      <div class=\"transactions-tab\">\n        <div class=\"transactions-header\">\n          <h3>Recent Transactions</h3>\n        </div>\n\n        <div class=\"transactions-list\">\n          {recentTransactions.length === 0 ? (\n            <div class=\"empty-state\">\n              <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <path d=\"M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,17A1.5,1.5 0 0,0 13.5,15.5A1.5,1.5 0 0,0 12,14A1.5,1.5 0 0,0 10.5,15.5A1.5,1.5 0 0,0 12,17M12,10.5C12.8,10.5 13.5,9.8 13.5,9C13.5,8.2 12.8,7.5 12,7.5C11.2,7.5 10.5,8.2 10.5,9C10.5,9.8 11.2,10.5 12,10.5Z\"/>\n              </svg>\n              <span>No transactions found</span>\n            </div>\n          ) : (\n            recentTransactions.map(transaction => (\n              <div\n                key={transaction.id}\n                class=\"transaction-card\"\n                onClick={() => this.handleViewTransaction(transaction)}\n              >\n                <div class=\"transaction-header\">\n                  <div class=\"transaction-type\">\n                    <span class=\"type-label\">{transaction.type.replace('_', ' ').toUpperCase()}</span>\n                    <span class={{\n                      'status-badge': true,\n                      [`status-badge--${transaction.status}`]: true,\n                    }}>\n                      {transaction.status}\n                    </span>\n                  </div>\n                  <div class=\"transaction-value\">${this.formatNumber(transaction.value)}</div>\n                </div>\n\n                <div class=\"transaction-details\">\n                  <div class=\"transaction-time\">\n                    {transaction.timestamp.toLocaleDateString()} {transaction.timestamp.toLocaleTimeString()}\n                  </div>\n                  {transaction.tokenA && (\n                    <div class=\"token-amounts\">\n                      <span>{parseFloat(transaction.amountA || '0').toFixed(4)} {transaction.tokenA.symbol}</span>\n                      {transaction.tokenB && transaction.amountB && (\n                        <span>→ {parseFloat(transaction.amountB).toFixed(4)} {transaction.tokenB.symbol}</span>\n                      )}\n                    </div>\n                  )}\n                </div>\n\n                <div class=\"transaction-hash\">\n                  {transaction.hash.slice(0, 10)}...{transaction.hash.slice(-8)}\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    if (this.loading) {\n      return (\n        <div class=\"portfolio-overview loading\">\n          <div class=\"loading-spinner\"></div>\n          <span>Loading portfolio data...</span>\n        </div>\n      );\n    }\n\n    if (!this.walletAddress) {\n      return (\n        <div class=\"portfolio-overview empty\">\n          <div class=\"empty-state\">\n            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,17A1.5,1.5 0 0,0 13.5,15.5A1.5,1.5 0 0,0 12,14A1.5,1.5 0 0,0 10.5,15.5A1.5,1.5 0 0,0 12,17M12,10.5C12.8,10.5 13.5,9.8 13.5,9C13.5,8.2 12.8,7.5 12,7.5C11.2,7.5 10.5,8.2 10.5,9C10.5,9.8 11.2,10.5 12,10.5Z\"/>\n            </svg>\n            <span>Connect your wallet to view portfolio</span>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div class=\"portfolio-overview\">\n        <div class=\"portfolio-header\">\n          <h2 class=\"portfolio-title\">{this.cardTitle}</h2>\n          <div class=\"wallet-info\">\n            <span class=\"wallet-address\">\n              {this.walletAddress.slice(0, 6)}...{this.walletAddress.slice(-4)}\n            </span>\n          </div>\n        </div>\n\n        <div class=\"portfolio-tabs\">\n          <button\n            class={{\n              'tab-btn': true,\n              'tab-btn--active': this.activeTab === 'overview',\n            }}\n            onClick={() => this.handleTabChange('overview')}\n            type=\"button\"\n          >\n            Overview\n          </button>\n          <button\n            class={{\n              'tab-btn': true,\n              'tab-btn--active': this.activeTab === 'positions',\n            }}\n            onClick={() => this.handleTabChange('positions')}\n            type=\"button\"\n          >\n            Positions ({this.poolPositions.length})\n          </button>\n          <button\n            class={{\n              'tab-btn': true,\n              'tab-btn--active': this.activeTab === 'staking',\n            }}\n            onClick={() => this.handleTabChange('staking')}\n            type=\"button\"\n          >\n            Staking ({this.stakingPositions.length})\n          </button>\n          <button\n            class={{\n              'tab-btn': true,\n              'tab-btn--active': this.activeTab === 'transactions',\n            }}\n            onClick={() => this.handleTabChange('transactions')}\n            type=\"button\"\n          >\n            Transactions\n          </button>\n        </div>\n\n        <div class=\"portfolio-content\">\n          {this.activeTab === 'overview' && this.renderOverviewTab()}\n          {this.activeTab === 'positions' && this.renderPositionsTab()}\n          {this.activeTab === 'staking' && this.renderStakingTab()}\n          {this.activeTab === 'transactions' && this.renderTransactionsTab()}\n        </div>\n      </div>\n    );\n  }\n}\n"],"version":3}