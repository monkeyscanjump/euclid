{"version":3,"file":"euclid-token-content.js","sourceRoot":"","sources":["../../../../src/components/ui/euclid-token-content/euclid-token-content.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, h, State, Event, EventEmitter } from '@stencil/core';\nimport { appStore } from '../../../store/app.store';\nimport { marketStore } from '../../../store/market.store';\nimport type { TokenMetadata } from '../../../utils/types/api.types';\n\nexport interface TokenInfo {\n  symbol: string;\n  name: string;\n  decimals: number;\n  logoUrl?: string;\n  address?: string;\n  balance?: string;\n  tokenId?: string;\n  displayName?: string;\n  coinDecimal?: number;\n  chain_uid?: string;\n  chainUID?: string;\n  logo?: string;\n  price?: number;\n  priceUsd?: string;\n}\n\n@Component({\n  tag: 'euclid-token-content',\n  styleUrl: 'euclid-token-content.css',\n  shadow: true,\n})\nexport class EuclidTokenContent {\n  @State() private searchQuery: string = '';\n  @State() private storeTokens: TokenMetadata[] = [];\n  @State() private storeLoading: boolean = false;\n  @State() private filteredTokens: TokenInfo[] = [];\n\n  @Event() tokenSelect!: EventEmitter<{\n    token: TokenInfo;\n    selectorType: 'input' | 'output';\n  }>;\n\n  componentWillLoad() {\n    this.syncWithStore();\n  }\n\n  componentDidLoad() {\n    // Listen for store changes\n    marketStore.onChange('tokens', () => {\n      this.syncWithStore();\n    });\n  }\n\n  private syncWithStore() {\n    this.storeTokens = marketStore.state.tokens.length > 0 ? marketStore.state.tokens : [];\n    this.storeLoading = marketStore.state.loading;\n    this.updateFilteredTokens();\n  }\n\n  private convertStoreTokenToTokenInfo(token: TokenMetadata): TokenInfo {\n    return {\n      tokenId: token.tokenId,\n      symbol: token.symbol || token.displayName.toUpperCase(),\n      name: token.displayName,\n      decimals: token.coinDecimal,\n      logoUrl: token.logo || token.image,\n      balance: '0', // Would need to fetch from wallet\n      displayName: token.displayName,\n      coinDecimal: token.coinDecimal,\n      chain_uid: token.chain_uid || token.chain_uids?.[0] || '',\n      chainUID: token.chainUID || token.chain_uid || token.chain_uids?.[0] || '',\n      address: token.address || token.tokenId,\n      logo: token.logo || token.image,\n      price: token.price ? parseFloat(token.price) : undefined,\n      priceUsd: token.price,\n    };\n  }\n\n  private getAvailableTokens(): TokenInfo[] {\n    return this.storeTokens.map(token => this.convertStoreTokenToTokenInfo(token));\n  }\n\n  private updateFilteredTokens() {\n    let tokens = this.getAvailableTokens();\n\n    // Filter by search query\n    if (this.searchQuery.trim()) {\n      const query = this.searchQuery.toLowerCase();\n      tokens = tokens.filter(token =>\n        token.symbol.toLowerCase().includes(query) ||\n        token.name.toLowerCase().includes(query) ||\n        (token.address && token.address.toLowerCase().includes(query))\n      );\n    }\n\n    // Sort tokens: those with balances first, then by market cap/price\n    tokens.sort((a, b) => {\n      const balanceA = parseFloat(a.balance || '0');\n      const balanceB = parseFloat(b.balance || '0');\n\n      // Prioritize tokens with balances\n      if (balanceA > 0 && balanceB === 0) return -1;\n      if (balanceA === 0 && balanceB > 0) return 1;\n\n      // Then sort by price (higher first)\n      const priceA = a.price || 0;\n      const priceB = b.price || 0;\n      if (priceA !== priceB) return priceB - priceA;\n\n      // Finally alphabetically\n      return a.symbol.localeCompare(b.symbol);\n    });\n\n    this.filteredTokens = tokens;\n  }\n\n  private handleSearchInput = (event: Event) => {\n    const target = event.target as HTMLInputElement;\n    this.searchQuery = target.value || '';\n    this.updateFilteredTokens();\n  };\n\n  private handleTokenSelect = (token: TokenInfo) => {\n    const selectorType = appStore.state.tokenSelectorType || 'input';\n\n    this.tokenSelect.emit({\n      token,\n      selectorType\n    });\n\n    appStore.closeTokenModal();\n  };\n\n  render() {\n    // Show loading only if we're loading AND don't have tokens yet\n    const isLoading = this.storeLoading && this.storeTokens.length === 0;\n\n    return (\n      <div class=\"token-content\">\n        <div class=\"search-section\">\n          <div class=\"search-input-container\">\n            <svg class=\"search-icon\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\n            </svg>\n            <input\n              type=\"text\"\n              class=\"search-input\"\n              placeholder=\"Search tokens...\"\n              value={this.searchQuery}\n              onInput={this.handleSearchInput}\n            />\n          </div>\n        </div>\n\n        {isLoading ? (\n          <div class=\"loading-state\">\n            <div class=\"loading-spinner\"></div>\n            <span>Loading tokens...</span>\n          </div>\n        ) : this.filteredTokens.length === 0 ? (\n          <div class=\"empty-state\">\n            <svg viewBox=\"0 0 64 64\" fill=\"currentColor\">\n              <path d=\"M31.968,0c-1.9626667,28.448-3.552,29.984-32,32c28.448,1.9626667,29.984,3.552,32,32c1.9626667-28.448,3.552-29.984,32-32C35.52,29.984,33.9306667,28.448,31.968,0z\"/>\n            </svg>\n            <span>No tokens found</span>\n          </div>\n        ) : (\n          <div class=\"token-list\">\n            {this.filteredTokens.map(token => (\n              <button\n                key={token.tokenId}\n                class=\"token-item\"\n                onClick={() => this.handleTokenSelect(token)}\n                type=\"button\"\n              >\n                <div class=\"token-logo\">\n                  {token.logoUrl ? (\n                    <img src={token.logoUrl} alt={token.symbol} />\n                  ) : (\n                    token.symbol.substring(0, 2).toUpperCase()\n                  )}\n                </div>\n                <div class=\"token-info\">\n                  <div class=\"token-symbol\">{token.symbol}</div>\n                  <div class=\"token-name\">{token.name}</div>\n                </div>\n                {token.balance && parseFloat(token.balance) > 0 && (\n                  <div class=\"token-balance\">{this.formatBalance(token.balance)}</div>\n                )}\n              </button>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  private formatBalance(balance: string): string {\n    const num = parseFloat(balance || '0');\n    if (isNaN(num) || num === 0) return '0';\n\n    if (num < 0.001) return '<0.001';\n    if (num < 1) return num.toFixed(6);\n    if (num < 1000) return num.toFixed(3);\n    if (num < 1000000) return (num / 1000).toFixed(2) + 'K';\n    return (num / 1000000).toFixed(2) + 'M';\n  }\n}\n"]}