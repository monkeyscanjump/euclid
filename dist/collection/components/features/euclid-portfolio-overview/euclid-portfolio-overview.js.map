{"version":3,"file":"euclid-portfolio-overview.js","sourceRoot":"","sources":["../../../../src/components/features/euclid-portfolio-overview/euclid-portfolio-overview.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Prop, h, State, Event, EventEmitter, Listen, Element } from '@stencil/core';\n\nexport interface TokenBalance {\n  symbol: string;\n  name: string;\n  address: string;\n  decimals: number;\n  logoUrl?: string;\n  balance: string;\n  value: number;\n  price: number;\n  priceChange24h: number;\n  allocation: number;\n}\n\nexport interface PoolPosition {\n  poolId: string;\n  poolAddress: string;\n  tokenA: TokenBalance;\n  tokenB: TokenBalance;\n  lpTokenBalance: string;\n  lpTokenSymbol: string;\n  shareOfPool: number;\n  tokenAAmount: string;\n  tokenBAmount: string;\n  totalValue: number;\n  apy: number;\n  fees24h: number;\n  feesWeek: number;\n  unclaimedRewards?: number;\n  stakingRewards?: number;\n  impermanentLoss: number;\n  entryPrice: number;\n  entryDate: Date;\n}\n\nexport interface StakingPosition {\n  id: string;\n  poolId?: string;\n  tokenSymbol: string;\n  tokenName: string;\n  stakedAmount: string;\n  stakedValue: number;\n  rewards: number;\n  apr: number;\n  lockupPeriod?: number;\n  unlockDate?: Date;\n  autoCompound: boolean;\n}\n\nexport interface Transaction {\n  id: string;\n  type: 'swap' | 'add_liquidity' | 'remove_liquidity' | 'stake' | 'unstake' | 'claim';\n  hash: string;\n  timestamp: Date;\n  status: 'pending' | 'confirmed' | 'failed';\n  tokenA?: TokenBalance;\n  tokenB?: TokenBalance;\n  amountA?: string;\n  amountB?: string;\n  value: number;\n  gasUsed?: string;\n  gasFee?: number;\n}\n\nexport interface PortfolioStats {\n  totalValue: number;\n  totalPnL: number;\n  totalPnLPercent: number;\n  dayChange: number;\n  dayChangePercent: number;\n  weekChange: number;\n  weekChangePercent: number;\n  totalRewards: number;\n  totalStaked: number;\n  activePositions: number;\n  totalTransactions: number;\n}\n\nexport interface ChartDataPoint {\n  timestamp: number;\n  value: number;\n  label?: string;\n}\n\n@Component({\n  tag: 'euclid-portfolio-overview',\n  styleUrl: 'euclid-portfolio-overview.css',\n  shadow: true,\n})\nexport class EuclidPortfolioOverview {\n  @Element() element!: HTMLElement;\n\n  /**\n   * User's token balances\n   */\n  @Prop() tokenBalances: TokenBalance[] = [];\n\n  /**\n   * User's liquidity pool positions\n   */\n  @Prop() poolPositions: PoolPosition[] = [];\n\n  /**\n   * User's staking positions\n   */\n  @Prop() stakingPositions: StakingPosition[] = [];\n\n  /**\n   * Recent transactions\n   */\n  @Prop() transactions: Transaction[] = [];\n\n  /**\n   * Portfolio statistics\n   */\n  @Prop() portfolioStats: PortfolioStats | null = null;\n\n  /**\n   * Chart data for portfolio value over time\n   */\n  @Prop() chartData: ChartDataPoint[] = [];\n\n  /**\n   * Connected wallet address\n   */\n  @Prop() walletAddress: string = '';\n\n  /**\n   * Whether the component is in loading state\n   */\n  @Prop() loading: boolean = false;\n\n  /**\n   * Card title\n   */\n  @Prop() cardTitle: string = 'Portfolio Overview';\n\n  /**\n   * Whether to show detailed analytics\n   */\n  @Prop() showAnalytics: boolean = true;\n\n  /**\n   * Time period for charts and stats\n   */\n  @Prop() timePeriod: '1D' | '1W' | '1M' | '3M' | '1Y' | 'ALL' = '1W';\n\n  // Internal state\n  @State() activeTab: 'overview' | 'positions' | 'staking' | 'transactions' | 'analytics' = 'overview';\n  @State() selectedPosition: PoolPosition | null = null;\n  @State() showChartTooltip: boolean = false;\n  @State() chartTooltipData: ChartDataPoint | null = null;\n  @State() sortBy: 'value' | 'pnl' | 'apy' | 'allocation' = 'value';\n  @State() sortOrder: 'asc' | 'desc' = 'desc';\n\n  // Events\n  @Event() positionSelected: EventEmitter<PoolPosition>;\n  @Event() managePosition: EventEmitter<PoolPosition>;\n  @Event() stakeMore: EventEmitter<StakingPosition>;\n  @Event() unstake: EventEmitter<StakingPosition>;\n  @Event() claimRewards: EventEmitter<PoolPosition | StakingPosition>;\n  @Event() viewTransaction: EventEmitter<Transaction>;\n  @Event() timePeriodChanged: EventEmitter<string>;\n\n  componentDidLoad() {\n    this.setupChart();\n  }\n\n  @Listen('resize', { target: 'window' })\n  handleResize() {\n    this.setupChart();\n  }\n\n  private setupChart() {\n    // Simple chart setup - in a real implementation, you'd use a charting library\n    if (this.chartData.length > 0 && this.showAnalytics) {\n      this.renderChart();\n    }\n  }\n\n  private renderChart() {\n    // This is a simplified chart implementation\n    // In practice, you'd integrate with libraries like Chart.js, D3, or similar\n    const chartContainer = this.element.shadowRoot?.querySelector('.chart-container');\n    if (!chartContainer) return;\n\n    // Clear previous chart\n    chartContainer.innerHTML = '';\n\n    // Create SVG\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttribute('width', '100%');\n    svg.setAttribute('height', '200');\n    svg.setAttribute('viewBox', '0 0 800 200');\n\n    const data = this.chartData;\n    if (data.length === 0) return;\n\n    const maxValue = Math.max(...data.map(d => d.value));\n    const minValue = Math.min(...data.map(d => d.value));\n    const valueRange = maxValue - minValue || 1;\n\n    // Create path\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    const pathData = data\n      .map((point, index) => {\n        const x = (index / (data.length - 1)) * 800;\n        const y = 180 - ((point.value - minValue) / valueRange) * 160;\n        return `${index === 0 ? 'M' : 'L'} ${x} ${y}`;\n      })\n      .join(' ');\n\n    path.setAttribute('d', pathData);\n    path.setAttribute('stroke', 'var(--euclid-primary-color, #3b82f6)');\n    path.setAttribute('stroke-width', '2');\n    path.setAttribute('fill', 'none');\n\n    svg.appendChild(path);\n    chartContainer.appendChild(svg);\n  }\n\n  private handleTabChange = (tab: typeof this.activeTab) => {\n    this.activeTab = tab;\n  };\n\n  private handleTimePeriodChange = (period: typeof this.timePeriod) => {\n    this.timePeriod = period;\n    this.timePeriodChanged.emit(period);\n  };\n\n  private handleSortChange = (sortBy: typeof this.sortBy) => {\n    if (this.sortBy === sortBy) {\n      this.sortOrder = this.sortOrder === 'asc' ? 'desc' : 'asc';\n    } else {\n      this.sortBy = sortBy;\n      this.sortOrder = 'desc';\n    }\n  };\n\n  private handlePositionClick = (position: PoolPosition) => {\n    this.selectedPosition = position;\n    this.positionSelected.emit(position);\n  };\n\n  private handleManagePosition = (position: PoolPosition) => {\n    this.managePosition.emit(position);\n  };\n\n  private handleClaimRewards = (position: PoolPosition | StakingPosition) => {\n    this.claimRewards.emit(position);\n  };\n\n  private handleStakeMore = (position: StakingPosition) => {\n    this.stakeMore.emit(position);\n  };\n\n  private handleUnstake = (position: StakingPosition) => {\n    this.unstake.emit(position);\n  };\n\n  private handleViewTransaction = (transaction: Transaction) => {\n    this.viewTransaction.emit(transaction);\n  };\n\n  private formatNumber(value: number, decimals: number = 2): string {\n    if (value >= 1e9) {\n      return `${(value / 1e9).toFixed(decimals)}B`;\n    } else if (value >= 1e6) {\n      return `${(value / 1e6).toFixed(decimals)}M`;\n    } else if (value >= 1e3) {\n      return `${(value / 1e3).toFixed(decimals)}K`;\n    }\n    return value.toFixed(decimals);\n  }\n\n  private formatPercent(value: number, decimals: number = 2): string {\n    return `${value >= 0 ? '+' : ''}${value.toFixed(decimals)}%`;\n  }\n\n  private getSortedPositions(): PoolPosition[] {\n    const sorted = [...this.poolPositions].sort((a, b) => {\n      let aValue: number, bValue: number;\n\n      switch (this.sortBy) {\n        case 'value':\n          aValue = a.totalValue;\n          bValue = b.totalValue;\n          break;\n        case 'pnl':\n          aValue = a.impermanentLoss;\n          bValue = b.impermanentLoss;\n          break;\n        case 'apy':\n          aValue = a.apy;\n          bValue = b.apy;\n          break;\n        case 'allocation':\n          aValue = this.portfolioStats ? (a.totalValue / this.portfolioStats.totalValue) * 100 : 0;\n          bValue = this.portfolioStats ? (b.totalValue / this.portfolioStats.totalValue) * 100 : 0;\n          break;\n        default:\n          aValue = a.totalValue;\n          bValue = b.totalValue;\n      }\n\n      return this.sortOrder === 'asc' ? aValue - bValue : bValue - aValue;\n    });\n\n    return sorted;\n  }\n\n  private renderOverviewTab() {\n    const stats = this.portfolioStats;\n    if (!stats) return null;\n\n    return (\n      <div class=\"overview-tab\">\n        <div class=\"stats-grid\">\n          <div class=\"stat-card\">\n            <div class=\"stat-label\">Total Value</div>\n            <div class=\"stat-value\">${this.formatNumber(stats.totalValue)}</div>\n            <div class={{\n              'stat-change': true,\n              'stat-change--positive': stats.dayChange >= 0,\n              'stat-change--negative': stats.dayChange < 0,\n            }}>\n              {this.formatPercent(stats.dayChangePercent)} (24h)\n            </div>\n          </div>\n\n          <div class=\"stat-card\">\n            <div class=\"stat-label\">Total P&L</div>\n            <div class={{\n              'stat-value': true,\n              'stat-value--positive': stats.totalPnL >= 0,\n              'stat-value--negative': stats.totalPnL < 0,\n            }}>\n              ${this.formatNumber(stats.totalPnL)}\n            </div>\n            <div class={{\n              'stat-change': true,\n              'stat-change--positive': stats.totalPnLPercent >= 0,\n              'stat-change--negative': stats.totalPnLPercent < 0,\n            }}>\n              {this.formatPercent(stats.totalPnLPercent)}\n            </div>\n          </div>\n\n          <div class=\"stat-card\">\n            <div class=\"stat-label\">Total Rewards</div>\n            <div class=\"stat-value\">${this.formatNumber(stats.totalRewards)}</div>\n            <div class=\"stat-change\">\n              {stats.activePositions} active positions\n            </div>\n          </div>\n\n          <div class=\"stat-card\">\n            <div class=\"stat-label\">Total Staked</div>\n            <div class=\"stat-value\">${this.formatNumber(stats.totalStaked)}</div>\n            <div class=\"stat-change\">\n              {this.stakingPositions.length} staking positions\n            </div>\n          </div>\n        </div>\n\n        {this.showAnalytics && (\n          <div class=\"chart-section\">\n            <div class=\"chart-header\">\n              <h3>Portfolio Value</h3>\n              <div class=\"time-period-selector\">\n                {(['1D', '1W', '1M', '3M', '1Y', 'ALL'] as const).map(period => (\n                  <button\n                    key={period}\n                    class={{\n                      'period-btn': true,\n                      'period-btn--active': period === this.timePeriod,\n                    }}\n                    onClick={() => this.handleTimePeriodChange(period)}\n                    type=\"button\"\n                  >\n                    {period}\n                  </button>\n                ))}\n              </div>\n            </div>\n            <div class=\"chart-container\"></div>\n          </div>\n        )}\n\n        <div class=\"allocation-section\">\n          <h3>Asset Allocation</h3>\n          <div class=\"allocation-grid\">\n            {this.tokenBalances\n              .filter(token => token.value > 0)\n              .sort((a, b) => b.value - a.value)\n              .slice(0, 6)\n              .map(token => (\n                <div key={token.symbol} class=\"allocation-item\">\n                  <div class=\"token-info\">\n                    {token.logoUrl && (\n                      <img src={token.logoUrl} alt={token.symbol} class=\"token-logo\" />\n                    )}\n                    <div class=\"token-details\">\n                      <div class=\"token-symbol\">{token.symbol}</div>\n                      <div class=\"token-balance\">{parseFloat(token.balance).toFixed(4)}</div>\n                    </div>\n                  </div>\n                  <div class=\"token-value\">\n                    <div class=\"value-primary\">${this.formatNumber(token.value)}</div>\n                    <div class=\"allocation-percent\">{token.allocation.toFixed(1)}%</div>\n                  </div>\n                  <div class={{\n                    'price-change': true,\n                    'price-change--positive': token.priceChange24h >= 0,\n                    'price-change--negative': token.priceChange24h < 0,\n                  }}>\n                    {this.formatPercent(token.priceChange24h)}\n                  </div>\n                </div>\n              ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  private renderPositionsTab() {\n    const sortedPositions = this.getSortedPositions();\n\n    return (\n      <div class=\"positions-tab\">\n        <div class=\"positions-header\">\n          <h3>Liquidity Positions</h3>\n          <div class=\"sort-controls\">\n            <button\n              class={{\n                'sort-btn': true,\n                'sort-btn--active': this.sortBy === 'value',\n              }}\n              onClick={() => this.handleSortChange('value')}\n              type=\"button\"\n            >\n              Value\n              {this.sortBy === 'value' && (\n                <svg class={{\n                  'sort-arrow': true,\n                  'sort-arrow--desc': this.sortOrder === 'desc',\n                }} viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                  <path d=\"M7 10l5 5 5-5z\"/>\n                </svg>\n              )}\n            </button>\n            <button\n              class={{\n                'sort-btn': true,\n                'sort-btn--active': this.sortBy === 'apy',\n              }}\n              onClick={() => this.handleSortChange('apy')}\n              type=\"button\"\n            >\n              APY\n            </button>\n          </div>\n        </div>\n\n        <div class=\"positions-list\">\n          {sortedPositions.length === 0 ? (\n            <div class=\"empty-state\">\n              <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <path d=\"M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,17A1.5,1.5 0 0,0 13.5,15.5A1.5,1.5 0 0,0 12,14A1.5,1.5 0 0,0 10.5,15.5A1.5,1.5 0 0,0 12,17M12,10.5C12.8,10.5 13.5,9.8 13.5,9C13.5,8.2 12.8,7.5 12,7.5C11.2,7.5 10.5,8.2 10.5,9C10.5,9.8 11.2,10.5 12,10.5Z\"/>\n              </svg>\n              <span>No liquidity positions found</span>\n            </div>\n          ) : (\n            sortedPositions.map(position => (\n              <div\n                key={position.poolId}\n                class=\"position-card\"\n                onClick={() => this.handlePositionClick(position)}\n              >\n                <div class=\"position-header\">\n                  <div class=\"token-pair\">\n                    {position.tokenA.logoUrl && (\n                      <img src={position.tokenA.logoUrl} alt={position.tokenA.symbol} class=\"token-logo\" />\n                    )}\n                    {position.tokenB.logoUrl && (\n                      <img src={position.tokenB.logoUrl} alt={position.tokenB.symbol} class=\"token-logo token-logo--overlap\" />\n                    )}\n                    <span class=\"pair-name\">{position.tokenA.symbol}/{position.tokenB.symbol}</span>\n                  </div>\n                  <div class=\"position-value\">${this.formatNumber(position.totalValue)}</div>\n                </div>\n\n                <div class=\"position-details\">\n                  <div class=\"detail-item\">\n                    <span class=\"detail-label\">APY</span>\n                    <span class=\"detail-value apy-value\">{position.apy.toFixed(2)}%</span>\n                  </div>\n                  <div class=\"detail-item\">\n                    <span class=\"detail-label\">Share</span>\n                    <span class=\"detail-value\">{position.shareOfPool.toFixed(4)}%</span>\n                  </div>\n                  <div class=\"detail-item\">\n                    <span class=\"detail-label\">IL</span>\n                    <span class={{\n                      'detail-value': true,\n                      'detail-value--positive': position.impermanentLoss >= 0,\n                      'detail-value--negative': position.impermanentLoss < 0,\n                    }}>\n                      {this.formatPercent(position.impermanentLoss)}\n                    </span>\n                  </div>\n                </div>\n\n                {(position.unclaimedRewards || position.stakingRewards) && (\n                  <div class=\"rewards-section\">\n                    {position.unclaimedRewards && position.unclaimedRewards > 0 && (\n                      <div class=\"reward-item\">\n                        <span>Unclaimed: ${this.formatNumber(position.unclaimedRewards)}</span>\n                        <euclid-button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            this.handleClaimRewards(position);\n                          }}\n                        >\n                          Claim\n                        </euclid-button>\n                      </div>\n                    )}\n                    {position.stakingRewards && position.stakingRewards > 0 && (\n                      <div class=\"reward-item\">\n                        <span>Staking: ${this.formatNumber(position.stakingRewards)}</span>\n                      </div>\n                    )}\n                  </div>\n                )}\n\n                <div class=\"position-actions\">\n                  <euclid-button\n                    variant=\"secondary\"\n                    size=\"sm\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      this.handleManagePosition(position);\n                    }}\n                  >\n                    Manage\n                  </euclid-button>\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  private renderStakingTab() {\n    return (\n      <div class=\"staking-tab\">\n        <div class=\"staking-header\">\n          <h3>Staking Positions</h3>\n        </div>\n\n        <div class=\"staking-list\">\n          {this.stakingPositions.length === 0 ? (\n            <div class=\"empty-state\">\n              <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <path d=\"M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,17A1.5,1.5 0 0,0 13.5,15.5A1.5,1.5 0 0,0 12,14A1.5,1.5 0 0,0 10.5,15.5A1.5,1.5 0 0,0 12,17M12,10.5C12.8,10.5 13.5,9.8 13.5,9C13.5,8.2 12.8,7.5 12,7.5C11.2,7.5 10.5,8.2 10.5,9C10.5,9.8 11.2,10.5 12,10.5Z\"/>\n              </svg>\n              <span>No staking positions found</span>\n            </div>\n          ) : (\n            this.stakingPositions.map(position => (\n              <div key={position.id} class=\"staking-card\">\n                <div class=\"staking-header\">\n                  <div class=\"token-info\">\n                    <span class=\"token-symbol\">{position.tokenSymbol}</span>\n                    <span class=\"token-name\">{position.tokenName}</span>\n                  </div>\n                  <div class=\"staking-value\">${this.formatNumber(position.stakedValue)}</div>\n                </div>\n\n                <div class=\"staking-details\">\n                  <div class=\"detail-item\">\n                    <span class=\"detail-label\">Staked Amount</span>\n                    <span class=\"detail-value\">{parseFloat(position.stakedAmount).toFixed(4)} {position.tokenSymbol}</span>\n                  </div>\n                  <div class=\"detail-item\">\n                    <span class=\"detail-label\">APR</span>\n                    <span class=\"detail-value apy-value\">{position.apr.toFixed(2)}%</span>\n                  </div>\n                  <div class=\"detail-item\">\n                    <span class=\"detail-label\">Rewards</span>\n                    <span class=\"detail-value\">${this.formatNumber(position.rewards)}</span>\n                  </div>\n                  {position.unlockDate && (\n                    <div class=\"detail-item\">\n                      <span class=\"detail-label\">Unlock Date</span>\n                      <span class=\"detail-value\">{position.unlockDate.toLocaleDateString()}</span>\n                    </div>\n                  )}\n                </div>\n\n                <div class=\"staking-actions\">\n                  <euclid-button\n                    variant=\"primary\"\n                    size=\"sm\"\n                    onClick={() => this.handleStakeMore(position)}\n                  >\n                    Stake More\n                  </euclid-button>\n                  <euclid-button\n                    variant=\"secondary\"\n                    size=\"sm\"\n                    onClick={() => this.handleUnstake(position)}\n                    disabled={position.unlockDate ? position.unlockDate > new Date() : false}\n                  >\n                    Unstake\n                  </euclid-button>\n                  {position.rewards > 0 && (\n                    <euclid-button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => this.handleClaimRewards(position)}\n                    >\n                      Claim\n                    </euclid-button>\n                  )}\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  private renderTransactionsTab() {\n    const recentTransactions = this.transactions.slice(0, 20);\n\n    return (\n      <div class=\"transactions-tab\">\n        <div class=\"transactions-header\">\n          <h3>Recent Transactions</h3>\n        </div>\n\n        <div class=\"transactions-list\">\n          {recentTransactions.length === 0 ? (\n            <div class=\"empty-state\">\n              <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <path d=\"M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,17A1.5,1.5 0 0,0 13.5,15.5A1.5,1.5 0 0,0 12,14A1.5,1.5 0 0,0 10.5,15.5A1.5,1.5 0 0,0 12,17M12,10.5C12.8,10.5 13.5,9.8 13.5,9C13.5,8.2 12.8,7.5 12,7.5C11.2,7.5 10.5,8.2 10.5,9C10.5,9.8 11.2,10.5 12,10.5Z\"/>\n              </svg>\n              <span>No transactions found</span>\n            </div>\n          ) : (\n            recentTransactions.map(transaction => (\n              <div\n                key={transaction.id}\n                class=\"transaction-card\"\n                onClick={() => this.handleViewTransaction(transaction)}\n              >\n                <div class=\"transaction-header\">\n                  <div class=\"transaction-type\">\n                    <span class=\"type-label\">{transaction.type.replace('_', ' ').toUpperCase()}</span>\n                    <span class={{\n                      'status-badge': true,\n                      [`status-badge--${transaction.status}`]: true,\n                    }}>\n                      {transaction.status}\n                    </span>\n                  </div>\n                  <div class=\"transaction-value\">${this.formatNumber(transaction.value)}</div>\n                </div>\n\n                <div class=\"transaction-details\">\n                  <div class=\"transaction-time\">\n                    {transaction.timestamp.toLocaleDateString()} {transaction.timestamp.toLocaleTimeString()}\n                  </div>\n                  {transaction.tokenA && (\n                    <div class=\"token-amounts\">\n                      <span>{parseFloat(transaction.amountA || '0').toFixed(4)} {transaction.tokenA.symbol}</span>\n                      {transaction.tokenB && transaction.amountB && (\n                        <span>→ {parseFloat(transaction.amountB).toFixed(4)} {transaction.tokenB.symbol}</span>\n                      )}\n                    </div>\n                  )}\n                </div>\n\n                <div class=\"transaction-hash\">\n                  {transaction.hash.slice(0, 10)}...{transaction.hash.slice(-8)}\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    if (this.loading) {\n      return (\n        <div class=\"portfolio-overview loading\">\n          <div class=\"loading-spinner\"></div>\n          <span>Loading portfolio data...</span>\n        </div>\n      );\n    }\n\n    if (!this.walletAddress) {\n      return (\n        <div class=\"portfolio-overview empty\">\n          <div class=\"empty-state\">\n            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,17A1.5,1.5 0 0,0 13.5,15.5A1.5,1.5 0 0,0 12,14A1.5,1.5 0 0,0 10.5,15.5A1.5,1.5 0 0,0 12,17M12,10.5C12.8,10.5 13.5,9.8 13.5,9C13.5,8.2 12.8,7.5 12,7.5C11.2,7.5 10.5,8.2 10.5,9C10.5,9.8 11.2,10.5 12,10.5Z\"/>\n            </svg>\n            <span>Connect your wallet to view portfolio</span>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div class=\"portfolio-overview\">\n        <div class=\"portfolio-header\">\n          <h2 class=\"portfolio-title\">{this.cardTitle}</h2>\n          <div class=\"wallet-info\">\n            <span class=\"wallet-address\">\n              {this.walletAddress.slice(0, 6)}...{this.walletAddress.slice(-4)}\n            </span>\n          </div>\n        </div>\n\n        <div class=\"portfolio-tabs\">\n          <button\n            class={{\n              'tab-btn': true,\n              'tab-btn--active': this.activeTab === 'overview',\n            }}\n            onClick={() => this.handleTabChange('overview')}\n            type=\"button\"\n          >\n            Overview\n          </button>\n          <button\n            class={{\n              'tab-btn': true,\n              'tab-btn--active': this.activeTab === 'positions',\n            }}\n            onClick={() => this.handleTabChange('positions')}\n            type=\"button\"\n          >\n            Positions ({this.poolPositions.length})\n          </button>\n          <button\n            class={{\n              'tab-btn': true,\n              'tab-btn--active': this.activeTab === 'staking',\n            }}\n            onClick={() => this.handleTabChange('staking')}\n            type=\"button\"\n          >\n            Staking ({this.stakingPositions.length})\n          </button>\n          <button\n            class={{\n              'tab-btn': true,\n              'tab-btn--active': this.activeTab === 'transactions',\n            }}\n            onClick={() => this.handleTabChange('transactions')}\n            type=\"button\"\n          >\n            Transactions\n          </button>\n        </div>\n\n        <div class=\"portfolio-content\">\n          {this.activeTab === 'overview' && this.renderOverviewTab()}\n          {this.activeTab === 'positions' && this.renderPositionsTab()}\n          {this.activeTab === 'staking' && this.renderStakingTab()}\n          {this.activeTab === 'transactions' && this.renderTransactionsTab()}\n        </div>\n      </div>\n    );\n  }\n}\n"]}