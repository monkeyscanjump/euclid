{"file":"p-DYCg_zbS.js","mappings":"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","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/ui/euclid-wallet-content/euclid-wallet-content.css?tag=euclid-wallet-content&encapsulation=shadow","src/components/ui/euclid-wallet-content/euclid-wallet-content.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n\n.wallet-content {\n  width: 100%;\n}\n\n.wallet-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n  gap: var(--euclid-spacing-3);\n}\n\n.wallet-card {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: var(--euclid-spacing-4);\n  border: 2px solid var(--euclid-border);\n  border-radius: var(--euclid-radius-lg);\n  background: var(--euclid-surface);\n  cursor: pointer;\n  transition: all var(--euclid-transition-duration-fast);\n  text-align: center;\n}\n\n.wallet-card:hover:not(.wallet-card--not-installed) {\n  border-color: var(--euclid-border-hover);\n  background: var(--euclid-surface-secondary);\n  transform: translateY(-1px);\n}\n\n.wallet-card--not-installed {\n  opacity: 0.6;\n}\n\n.wallet-card--not-installed:hover {\n  border-color: var(--euclid-warning-300);\n  background: var(--euclid-warning-50);\n  transform: translateY(-1px);\n}\n\n.wallet-icon {\n  width: 3rem;\n  height: 3rem;\n  border-radius: var(--euclid-radius-lg);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: var(--euclid-spacing-3);\n  background: var(--euclid-surface-secondary);\n}\n\n.wallet-emoji {\n  font-size: 1.5rem;\n}\n\n.wallet-info {\n  display: flex;\n  flex-direction: column;\n  gap: var(--euclid-spacing-1);\n  width: 100%;\n}\n\n.wallet-name {\n  font-size: var(--euclid-text-size-sm);\n  font-weight: var(--euclid-font-weight-medium);\n  color: var(--euclid-text-primary);\n}\n\n.wallet-description {\n  font-size: var(--euclid-text-size-xs);\n  color: var(--euclid-text-secondary);\n  line-height: 1.3;\n}\n\n.install-badge {\n  display: inline-block;\n  font-size: var(--euclid-text-size-xs);\n  padding: var(--euclid-spacing-1) var(--euclid-spacing-2);\n  border-radius: var(--euclid-radius-sm);\n  background: var(--euclid-warning-100);\n  color: var(--euclid-warning-700);\n  margin-top: var(--euclid-spacing-2);\n  font-weight: var(--euclid-font-weight-medium);\n}\n\n/* Responsive Design */\n@media (max-width: 640px) {\n  .wallet-grid {\n    grid-template-columns: repeat(2, 1fr);\n    gap: var(--euclid-spacing-2);\n  }\n\n  .wallet-card {\n    padding: var(--euclid-spacing-3);\n  }\n\n  .wallet-icon {\n    width: 2.5rem;\n    height: 2.5rem;\n  }\n}\n\n@media (max-width: 480px) {\n  .wallet-grid {\n    grid-template-columns: 1fr;\n  }\n}\n\n/* Focus visible support */\n.wallet-card:focus-visible {\n  outline: 2px solid var(--euclid-border-focus);\n  outline-offset: 2px;\n}\n","import { Component, h, State, Event, EventEmitter } from '@stencil/core';\nimport { appStore } from '../../../store/app.store';\n\nexport interface WalletProvider {\n  id: string;\n  name: string;\n  icon: string;\n  installed: boolean;\n  description: string;\n}\n\n@Component({\n  tag: 'euclid-wallet-content',\n  styleUrl: 'euclid-wallet-content.css',\n  shadow: true,\n})\nexport class EuclidWalletContent {\n  @State() private walletProviders: WalletProvider[] = [\n    // Mock data - in real app this would come from store/API\n    { id: 'metamask', name: 'MetaMask', icon: 'ü¶ä', installed: true, description: 'Connect using MetaMask wallet' },\n    { id: 'keplr', name: 'Keplr', icon: 'üîó', installed: true, description: 'Connect using Keplr wallet' },\n    { id: 'phantom', name: 'Phantom', icon: 'üëª', installed: false, description: 'Connect using Phantom wallet' },\n    { id: 'walletconnect', name: 'WalletConnect', icon: 'üåê', installed: true, description: 'Connect using WalletConnect' },\n  ];\n\n  @Event() walletConnect!: EventEmitter<WalletProvider>;\n\n  private handleWalletConnect = (provider: WalletProvider) => {\n    if (!provider.installed) {\n      this.openInstallUrl(provider.id);\n      return;\n    }\n\n    this.walletConnect.emit(provider);\n    appStore.closeWalletModal();\n  };\n\n  private openInstallUrl(walletId: string) {\n    const installUrls: Record<string, string> = {\n      'metamask': 'https://metamask.io/download/',\n      'keplr': 'https://www.keplr.app/download',\n      'phantom': 'https://phantom.app/download',\n      'walletconnect': 'https://walletconnect.com/',\n    };\n\n    const url = installUrls[walletId];\n    if (url) {\n      window.open(url, '_blank');\n    }\n  }\n\n  render() {\n    return (\n      <div class=\"wallet-content\">\n        <div class=\"wallet-grid\">\n          {this.walletProviders.map(provider => (\n            <button\n              key={provider.id}\n              class={{\n                'wallet-card': true,\n                'wallet-card--not-installed': !provider.installed\n              }}\n              onClick={() => this.handleWalletConnect(provider)}\n              type=\"button\"\n            >\n              <div class=\"wallet-icon\">\n                <span class=\"wallet-emoji\">{provider.icon}</span>\n              </div>\n\n              <div class=\"wallet-info\">\n                <div class=\"wallet-name\">{provider.name}</div>\n                <div class=\"wallet-description\">{provider.description}</div>\n\n                {!provider.installed && (\n                  <span class=\"install-badge\">Install Required</span>\n                )}\n              </div>\n            </button>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n"],"version":3}