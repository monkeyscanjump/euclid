{"version":3,"file":"tokens-loading.js","sourceRoot":"","sources":["../../../../src/components/features/euclid-tokens-list/tokens-loading.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAOnD,MAAM,OAAO,aAAa;IAL1B;QAME;;WAEG;QACK,UAAK,GAAW,CAAC,CAAC;QAE1B;;WAEG;QACK,SAAI,GAAY,IAAI,CAAC;KAsD9B;IApDS,kBAAkB;QACxB,OAAO,CACL,WAAK,KAAK,EAAC,gBAAgB;YACzB,WAAK,KAAK,EAAC,yBAAyB;gBAElC,WAAK,KAAK,EAAC,wBAAwB;oBACjC,WAAK,KAAK,EAAC,sBAAsB,GAAO;oBACxC,WAAK,KAAK,EAAC,sBAAsB;wBAC/B,WAAK,KAAK,EAAC,kDAAkD,GAAO;wBACpE,WAAK,KAAK,EAAC,qDAAqD,GAAO,CACnE,CACF;gBAGN,WAAK,KAAK,EAAC,uBAAuB;oBAChC,WAAK,KAAK,EAAC,sBAAsB;wBAC/B,WAAK,KAAK,EAAC,kDAAkD,GAAO;wBACpE,WAAK,KAAK,EAAC,mDAAmD,GAAO,CACjE;oBACN,WAAK,KAAK,EAAC,sBAAsB;wBAC/B,WAAK,KAAK,EAAC,kDAAkD,GAAO;wBACpE,WAAK,KAAK,EAAC,mDAAmD,GAAO,CACjE,CACF;gBAGN,WAAK,KAAK,EAAC,sBAAsB;oBAC/B,WAAK,KAAK,EAAC,qBAAqB,GAAO;oBACvC,WAAK,KAAK,EAAC,qBAAqB,GAAO,CACnC,CACF,CACF,CACP,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YACf,OAAO,IAAI,CAAC;QACd,CAAC;QAED,OAAO,CACL,WAAK,KAAK,EAAC,gBAAgB;YACzB,WAAK,KAAK,EAAC,sBAAsB,IAC9B,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,CAChD,WAAK,GAAG,EAAE,KAAK,IACZ,IAAI,CAAC,kBAAkB,EAAE,CACtB,CACP,CAAC,CACE,CACF,CACP,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, h, Prop } from '@stencil/core';\n\n@Component({\n  tag: 'tokens-loading',\n  styleUrl: 'tokens-loading.css',\n  shadow: true,\n})\nexport class TokensLoading {\n  /**\n   * Number of skeleton cards to show\n   */\n  @Prop() count: number = 8;\n\n  /**\n   * Whether to show the loading state\n   */\n  @Prop() show: boolean = true;\n\n  private renderSkeletonCard() {\n    return (\n      <div class=\"token-skeleton\">\n        <div class=\"token-skeleton__content\">\n          {/* Token icon and info */}\n          <div class=\"token-skeleton__header\">\n            <div class=\"token-skeleton__icon\"></div>\n            <div class=\"token-skeleton__info\">\n              <div class=\"token-skeleton__line token-skeleton__line--title\"></div>\n              <div class=\"token-skeleton__line token-skeleton__line--subtitle\"></div>\n            </div>\n          </div>\n\n          {/* Price and volume */}\n          <div class=\"token-skeleton__stats\">\n            <div class=\"token-skeleton__stat\">\n              <div class=\"token-skeleton__line token-skeleton__line--small\"></div>\n              <div class=\"token-skeleton__line token-skeleton__line--medium\"></div>\n            </div>\n            <div class=\"token-skeleton__stat\">\n              <div class=\"token-skeleton__line token-skeleton__line--small\"></div>\n              <div class=\"token-skeleton__line token-skeleton__line--medium\"></div>\n            </div>\n          </div>\n\n          {/* Tags */}\n          <div class=\"token-skeleton__tags\">\n            <div class=\"token-skeleton__tag\"></div>\n            <div class=\"token-skeleton__tag\"></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    if (!this.show) {\n      return null;\n    }\n\n    return (\n      <div class=\"tokens-loading\">\n        <div class=\"tokens-skeleton-grid\">\n          {Array.from({ length: this.count }, (_, index) => (\n            <div key={index}>\n              {this.renderSkeletonCard()}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n"]}