{"file":"euclid-pools-list.js","mappings":"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","names":["EuclidPoolsList","__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/features/euclid-pools-list/euclid-pools-list.css?tag=euclid-pools-list&encapsulation=shadow","src/components/features/euclid-pools-list/euclid-pools-list.tsx"],"sourcesContent":[":host {\n  display: block;\n  width: 100%;\n  font-family: var(--euclid-font-family, 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif);\n}\n\n.pools-list {\n  background: var(--euclid-surface);\n  border: 1px solid var(--euclid-border);\n  border-radius: var(--euclid-radius-2xl);\n  overflow: hidden;\n  box-shadow: var(--euclid-shadow-sm);\n}\n\n/* Header */\n.pools-header {\n  padding: 24px;\n  border-bottom: 1px solid var(--euclid-border);\n  background: var(--euclid-surface-secondary);\n}\n\n.pools-title {\n  margin: 0;\n  font-size: 20px;\n  font-weight: 600;\n  color: var(--euclid-text-primary);\n}\n\n/* Content */\n.pools-content {\n  min-height: 400px;\n}\n\n.pools-grid {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  padding: 24px;\n}\n\n/* Empty State */\n.empty-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n  padding: 60px 24px;\n  text-align: center;\n}\n\n.empty-state svg {\n  width: 48px;\n  height: 48px;\n  color: var(--euclid-text-secondary);\n}\n\n.empty-state span {\n  color: var(--euclid-text-secondary);\n  font-size: 16px;\n}\n\n.clear-filters-btn {\n  padding: 12px 24px;\n  background: var(--euclid-interactive-primary);\n  color: white;\n  border: none;\n  border-radius: var(--euclid-radius-lg);\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n}\n\n.clear-filters-btn:hover {\n  background: var(--euclid-interactive-primary-hover);\n}\n\n/* Pagination */\n.pagination {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 20px 24px;\n  gap: 8px;\n  background: var(--euclid-surface-secondary);\n  border-top: 1px solid var(--euclid-border);\n}\n\n.pagination-btn {\n  padding: 8px 16px;\n  background: transparent;\n  border: 1px solid var(--euclid-border);\n  border-radius: var(--euclid-radius-lg);\n  color: var(--euclid-text-secondary);\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: 500;\n  transition: all 0.2s ease;\n}\n\n.pagination-btn:hover:not(:disabled) {\n  background: var(--euclid-surface-secondary);\n  border-color: var(--euclid-border-hover);\n}\n\n.pagination-btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.pagination-pages {\n  display: flex;\n  gap: 4px;\n  margin: 0 16px;\n}\n\n.pagination-page {\n  width: 36px;\n  height: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: transparent;\n  border: 1px solid var(--euclid-border);\n  border-radius: var(--euclid-radius-lg);\n  color: var(--euclid-text-secondary);\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: 500;\n  transition: all 0.2s ease;\n}\n\n.pagination-page:hover {\n  background: var(--euclid-surface-secondary);\n  border-color: var(--euclid-border-hover);\n}\n\n.pagination-page--active {\n  background: var(--euclid-interactive-primary);\n  border-color: var(--euclid-interactive-primary);\n  color: white;\n}\n\n.pagination-page--active:hover {\n  background: var(--euclid-interactive-primary);\n  border-color: var(--euclid-interactive-primary);\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n  .pools-header {\n    padding: 16px;\n  }\n\n  .pools-grid {\n    padding: 16px;\n    gap: 8px;\n  }\n\n  .pagination {\n    padding: 16px;\n  }\n\n  .pagination-pages {\n    margin: 0 8px;\n  }\n}\n\n@media (max-width: 640px) {\n  .pools-title {\n    font-size: 18px;\n  }\n\n  .empty-state {\n    padding: 40px 16px;\n  }\n}","import { Component, Prop, h, State, Event, EventEmitter, Watch } from '@stencil/core';\nimport type { PoolInfo, TokenMetadata } from '../../../utils/types/api.types';\nimport { marketStore } from '../../../store/market.store';\n\nexport interface UserPoolPosition {\n  poolId: string;\n  poolAddress: string;\n  lpTokenBalance: string;\n  shareOfPool: number;\n  tokenAAmount: string;\n  tokenBAmount: string;\n  value: number;\n  unclaimedRewards?: number;\n  stakingRewards?: number;\n}\n\nexport interface PoolFilters {\n  search: string;\n  sortBy: 'apr' | 'tvl' | 'volume' | 'fees' | 'myLiquidity';\n  sortOrder: 'asc' | 'desc';\n  showMyPools: boolean;\n}\n\n@Component({\n  tag: 'euclid-pools-list',\n  styleUrl: 'euclid-pools-list.css',\n  shadow: true,\n})\nexport class EuclidPoolsList {\n  /**\n   * Available pools data (gets from market store automatically)\n   * @deprecated Use store instead\n   */\n  @Prop() pools: PoolInfo[] = [];\n\n  /**\n   * Token metadata for logos and display names (gets from market store automatically)\n   * @deprecated Use store instead\n   */\n  @Prop() tokenMetadata: TokenMetadata[] = [];\n\n  /**\n   * User's positions in pools\n   */\n  @Prop() positions: UserPoolPosition[] = [];\n\n  /**\n   * Whether the component is in loading state (overrides store loading)\n   */\n  @Prop() loading: boolean = false;\n\n  /**\n   * Connected wallet address\n   */\n  @Prop() walletAddress: string = '';\n\n\n\n  /**\n   * Items per page for pagination\n   */\n  @Prop() itemsPerPage: number = 10;\n\n  /**\n   * Card title\n   */\n  @Prop() cardTitle: string = 'Liquidity Pools';\n\n  // Internal state\n  @State() filteredPools: PoolInfo[] = [];\n  @State() currentPage: number = 1;\n  @State() totalPages: number = 1;\n  @State() filters: PoolFilters = {\n    search: '',\n    sortBy: 'apr',\n    sortOrder: 'desc',\n    showMyPools: false,\n  };\n\n  // Store data (automatically synced)\n  @State() storePools: PoolInfo[] = [];\n  @State() storeTokens: TokenMetadata[] = [];\n  @State() storeLoading: boolean = false;\n\n  // Events\n  @Event() poolSelected: EventEmitter<PoolInfo>;\n  @Event() addLiquidity: EventEmitter<PoolInfo>;\n  @Event() removeLiquidity: EventEmitter<{ pool: PoolInfo; position: UserPoolPosition }>;\n  @Event() stakeTokens: EventEmitter<{ pool: PoolInfo; position?: UserPoolPosition }>;\n  @Event() claimRewards: EventEmitter<{ pool: PoolInfo; position: UserPoolPosition }>;\n  @Event() filtersChanged: EventEmitter<PoolFilters>;\n\n  componentWillLoad() {\n    // Connect to market store for automatic data updates\n    this.syncWithStore();\n\n    // Listen for store changes\n    marketStore.onChange('pools', () => {\n      this.syncWithStore();\n      this.applyFilters();\n    });\n\n    marketStore.onChange('tokens', () => {\n      this.syncWithStore();\n    });\n\n    // Initialize filters\n    this.applyFilters();\n  }\n\n  private syncWithStore() {\n    // Use store data if available, fallback to props\n    this.storePools = marketStore.state.pools.length > 0 ? marketStore.state.pools : this.pools;\n    this.storeTokens = marketStore.state.tokens.length > 0 ? marketStore.state.tokens : this.tokenMetadata;\n    this.storeLoading = marketStore.state.loading;\n\n    // Debug logging\n    console.log('🔄 Store sync:', {\n      storePools: this.storePools.length,\n      storeTokens: this.storeTokens.length,\n      storeLoading: this.storeLoading,\n      marketStorePools: marketStore.state.pools.length,\n      marketStoreTokens: marketStore.state.tokens.length,\n      marketStoreLoading: marketStore.state.loading\n    });\n  }\n\n  @Watch('pools')\n  watchPoolsChange() {\n    this.applyFilters();\n  }\n\n  @Watch('positions')\n  watchPositionsChange() {\n    this.applyFilters();\n  }\n\n  private applyFilters() {\n    // Use store data first, fallback to props for backward compatibility\n    const activePools = this.storePools.length > 0 ? this.storePools : this.pools;\n    let filtered = [...activePools];\n\n    // Apply search filter\n    if (this.filters.search) {\n      const searchLower = this.filters.search.toLowerCase();\n      filtered = filtered.filter(pool => {\n        const token1Meta = this.getTokenMetadata(pool.token_1);\n        const token2Meta = this.getTokenMetadata(pool.token_2);\n        const token1Name = token1Meta?.displayName || pool.token_1;\n        const token2Name = token2Meta?.displayName || pool.token_2;\n\n        return pool.token_1.toLowerCase().includes(searchLower) ||\n          pool.token_2.toLowerCase().includes(searchLower) ||\n          token1Name.toLowerCase().includes(searchLower) ||\n          token2Name.toLowerCase().includes(searchLower) ||\n          pool.pool_id.toLowerCase().includes(searchLower);\n      });\n    }\n\n    // Apply my pools filter\n    if (this.filters.showMyPools && this.walletAddress) {\n      const myPoolIds = this.positions.map(pos => pos.poolId);\n      filtered = filtered.filter(pool => myPoolIds.includes(pool.pool_id));\n    }\n\n    // Apply sorting\n    filtered.sort((a, b) => {\n      let aValue: number, bValue: number;\n\n      switch (this.filters.sortBy) {\n        case 'apr':\n          aValue = parseFloat((a.apr || '0%').replace('%', ''));\n          bValue = parseFloat((b.apr || '0%').replace('%', ''));\n          break;\n        case 'tvl':\n          aValue = parseFloat(a.total_liquidity || '0');\n          bValue = parseFloat(b.total_liquidity || '0');\n          break;\n        case 'volume':\n          aValue = parseFloat(a.volume_24h || '0');\n          bValue = parseFloat(b.volume_24h || '0');\n          break;\n        case 'fees':\n          aValue = parseFloat(a.fees_24h || '0');\n          bValue = parseFloat(b.fees_24h || '0');\n          break;\n        case 'myLiquidity': {\n          const aPosition = this.positions.find(pos => pos.poolId === a.pool_id);\n          const bPosition = this.positions.find(pos => pos.poolId === b.pool_id);\n          aValue = aPosition ? aPosition.value : 0;\n          bValue = bPosition ? bPosition.value : 0;\n          break;\n        }\n        default:\n          aValue = parseFloat((a.apr || '0%').replace('%', ''));\n          bValue = parseFloat((b.apr || '0%').replace('%', ''));\n      }\n\n      if (this.filters.sortOrder === 'asc') {\n        return aValue - bValue;\n      } else {\n        return bValue - aValue;\n      }\n    });\n\n    // Update state only if changed\n    const newFilteredLength = filtered.length;\n    const currentFilteredLength = this.filteredPools.length;\n    const hasChanged = newFilteredLength !== currentFilteredLength ||\n      !filtered.every((pool, index) => this.filteredPools[index]?.pool_id === pool.pool_id);\n\n    if (hasChanged) {\n      this.filteredPools = filtered;\n    }\n\n    const newTotalPages = Math.ceil(filtered.length / this.itemsPerPage);\n    if (this.totalPages !== newTotalPages) {\n      this.totalPages = newTotalPages;\n    }\n\n    // Reset to first page if current page is out of bounds\n    if (this.currentPage > this.totalPages && this.totalPages > 0) {\n      this.currentPage = 1;\n    }\n\n    this.filtersChanged.emit(this.filters);\n  }\n\n  private getTokenMetadata(tokenId: string): TokenMetadata | null {\n    const activeTokens = this.storeTokens.length > 0 ? this.storeTokens : this.tokenMetadata;\n    return activeTokens.find(token => token.tokenId === tokenId) || null;\n  }\n\n  private getUserPosition(poolId: string): UserPoolPosition | null {\n    return this.positions.find(pos => pos.poolId === poolId) || null;\n  }\n\n  private getTokensWithPools(): { tokenId: string; displayName: string }[] {\n    const activePools = this.storePools.length > 0 ? this.storePools : this.pools;\n    const activeTokens = this.storeTokens.length > 0 ? this.storeTokens : this.tokenMetadata;\n\n    // Get unique token IDs that appear in pools\n    const tokenIdsInPools = new Set<string>();\n    activePools.forEach(pool => {\n      tokenIdsInPools.add(pool.token_1);\n      tokenIdsInPools.add(pool.token_2);\n    });\n\n    // Return only tokens that have pools, with their metadata\n    return Array.from(tokenIdsInPools)\n      .map(tokenId => {\n        const tokenMeta = activeTokens.find(t => t.tokenId === tokenId);\n        return {\n          tokenId,\n          displayName: tokenMeta?.displayName || tokenId.toUpperCase()\n        };\n      })\n      .sort((a, b) => a.displayName.localeCompare(b.displayName));\n  }\n\n  private getPaginatedPools(): PoolInfo[] {\n    const startIndex = (this.currentPage - 1) * this.itemsPerPage;\n    const endIndex = startIndex + this.itemsPerPage;\n    return this.filteredPools.slice(startIndex, endIndex);\n  }\n\n  private handleFiltersChanged = (event: CustomEvent<PoolFilters>) => {\n    this.filters = event.detail;\n    this.currentPage = 1;\n    this.applyFilters();\n  };\n\n  private handlePageChange = (page: number) => {\n    if (page >= 1 && page <= this.totalPages) {\n      this.currentPage = page;\n    }\n  };\n\n  render() {\n    const activePools = this.storePools.length > 0 ? this.storePools : this.pools;\n    const activeTokens = this.storeTokens.length > 0 ? this.storeTokens : this.tokenMetadata;\n    const isLoading = (this.storeLoading || this.loading) && activePools.length === 0;\n    const paginatedPools = this.getPaginatedPools();\n    const totalTvl = activePools.reduce((sum, pool) => sum + parseFloat(pool.total_liquidity || '0'), 0);\n\n    // Debug logging\n    console.log('🎨 Render state:', {\n      activePools: activePools.length,\n      activeTokens: activeTokens.length,\n      filteredPools: this.filteredPools.length,\n      paginatedPools: paginatedPools.length,\n      isLoading,\n      storeLoading: this.storeLoading,\n      loading: this.loading\n    });\n\n    return (\n      <div class=\"pools-list\">\n        {/* Header */}\n        <div class=\"pools-header\">\n          <h3 class=\"pools-title\">{this.cardTitle}</h3>\n        </div>\n\n        {/* Filters */}\n        <pools-filters\n          filters={this.filters}\n          walletAddress={this.walletAddress}\n          onFiltersChanged={this.handleFiltersChanged}\n        />\n\n        {/* Stats */}\n        <pools-stats\n          totalPools={activePools.length}\n          filteredPools={this.filteredPools.length}\n          totalTvl={totalTvl}\n          userPositions={this.positions.length}\n          walletAddress={this.walletAddress}\n        />\n\n        {/* Content */}\n        <div class=\"pools-content\">\n          {isLoading ? (\n            <pools-loading count={6} />\n          ) : paginatedPools.length === 0 ? (\n            <div class=\"empty-state\">\n              <svg viewBox=\"0 0 64 64\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M31.968,0c-1.9626667,28.448-3.552,29.984-32,32c28.448,1.9626667,29.984,3.552,32,32c1.9626667-28.448,3.552-29.984,32-32C35.52,29.984,33.9306667,28.448,31.968,0z\"/>\n              </svg>\n              <span>No pools found matching your criteria</span>\n              <button\n                class=\"clear-filters-btn\"\n                onClick={() => {\n                  this.filters = {\n                    search: '',\n                    sortBy: 'apr',\n                    sortOrder: 'desc',\n                    showMyPools: false,\n                  };\n                  this.currentPage = 1;\n                  this.applyFilters();\n                }}\n                type=\"button\"\n              >\n                Clear Filters\n              </button>\n            </div>\n          ) : (\n            <div class=\"pools-grid\">\n              {paginatedPools.map(pool => (\n                <pool-item\n                  key={pool.pool_id}\n                  pool={pool}\n                  tokens={activeTokens}\n                  position={this.getUserPosition(pool.pool_id)}\n                  walletAddress={this.walletAddress}\n                  onAddLiquidity={(event) => this.addLiquidity.emit(event.detail)}\n                  onRemoveLiquidity={(event) => this.removeLiquidity.emit(event.detail)}\n                  onStakeTokens={(event) => this.stakeTokens.emit(event.detail)}\n                  onClaimRewards={(event) => this.claimRewards.emit(event.detail)}\n                />\n              ))}\n            </div>\n          )}\n        </div>\n\n        {/* Pagination */}\n        {this.totalPages > 1 && (\n          <div class=\"pagination\">\n            <button\n              class=\"pagination-btn\"\n              onClick={() => this.handlePageChange(this.currentPage - 1)}\n              disabled={this.currentPage === 1}\n              type=\"button\"\n            >\n              Previous\n            </button>\n\n            <div class=\"pagination-pages\">\n              {Array.from({ length: this.totalPages }, (_, i) => i + 1).map(page => (\n                <button\n                  key={page}\n                  class={{\n                    'pagination-page': true,\n                    'pagination-page--active': page === this.currentPage,\n                  }}\n                  onClick={() => this.handlePageChange(page)}\n                  type=\"button\"\n                >\n                  {page}\n                </button>\n              ))}\n            </div>\n\n            <button\n              class=\"pagination-btn\"\n              onClick={() => this.handlePageChange(this.currentPage + 1)}\n              disabled={this.currentPage === this.totalPages}\n              type=\"button\"\n            >\n              Next\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n"],"version":3}