{"version":3,"file":"state.types.js","sourceRoot":"","sources":["../../../src/utils/types/state.types.ts"],"names":[],"mappings":"","sourcesContent":["import type { ChainConfig, TokenInfo, TokenBalance, PoolInfo, SwapRoute } from './api.types';\n\n// Wallet State Types\nexport interface WalletInfo {\n  address: string;\n  chainUID: string;\n  name?: string;\n  type: 'keplr' | 'metamask' | 'walletconnect' | 'other';\n  isConnected: boolean;\n  balances: TokenBalance[];\n}\n\nexport interface WalletState {\n  wallets: Map<string, WalletInfo>; // chainUID -> WalletInfo\n  isInitialized: boolean;\n}\n\n// Market State Types\nexport interface MarketState {\n  chains: ChainConfig[];\n  tokens: TokenInfo[];\n  pools: PoolInfo[];\n  isLoading: boolean;\n  lastUpdated?: number;\n}\n\n// App State Types\nexport interface AppState {\n  walletModalOpen: boolean;\n  walletModalFilter?: string | null; // chainUID filter\n  tokenModalOpen: boolean;\n  isInitialized: boolean;\n  theme: 'light' | 'dark' | 'auto';\n}\n\n// Swap State Types\nexport interface SwapState {\n  fromToken?: TokenInfo;\n  toToken?: TokenInfo;\n  fromAmount: string;\n  toAmount: string;\n  routes: SwapRoute[];\n  selectedRoute?: SwapRoute;\n  isLoadingRoutes: boolean;\n  slippage: number;\n  isSwapping: boolean;\n  lastRouteUpdate?: number;\n}\n\n// Liquidity State Types\nexport interface LiquidityPosition {\n  poolId: string;\n  pool: PoolInfo;\n  lpTokenBalance: string;\n  token1Amount: string;\n  token2Amount: string;\n  sharePercentage: string;\n  usdValue?: string;\n}\n\nexport interface LiquidityState {\n  positions: LiquidityPosition[];\n  selectedPool?: PoolInfo;\n  token1?: TokenInfo;\n  token2?: TokenInfo;\n  token1Amount: string;\n  token2Amount: string;\n  isAddingLiquidity: boolean;\n  isRemovingLiquidity: boolean;\n}\n"]}