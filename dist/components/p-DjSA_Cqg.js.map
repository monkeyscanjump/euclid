{"file":"p-DjSA_Cqg.js","mappings":";;AAAA,MAAM,gBAAgB,GAAG,87DAA87D;;MCO18D,aAAa,iBAAAA,kBAAA,CAAA,MAAA,aAAA,SAAAC,CAAA,CAAA;AAL1B,IAAA,WAAA,CAAA,YAAA,EAAA;;;;;;AAME;;AAEG;AACK,QAAA,IAAK,CAAA,KAAA,GAAW,CAAC;AAEzB;;AAEG;AACK,QAAA,IAAI,CAAA,IAAA,GAAY,IAAI;AAsD7B;IApDS,kBAAkB,GAAA;QACxB,QACE,CAAA,CAAA,KAAA,EAAA,EAAK,KAAK,EAAC,gBAAgB,EAAA,EACzB,CAAK,CAAA,KAAA,EAAA,EAAA,KAAK,EAAC,yBAAyB,EAAA,EAElC,CAAK,CAAA,KAAA,EAAA,EAAA,KAAK,EAAC,wBAAwB,EAAA,EACjC,CAAK,CAAA,KAAA,EAAA,EAAA,KAAK,EAAC,sBAAsB,EAAO,CAAA,EACxC,CAAK,CAAA,KAAA,EAAA,EAAA,KAAK,EAAC,sBAAsB,EAAA,EAC/B,CAAK,CAAA,KAAA,EAAA,EAAA,KAAK,EAAC,kDAAkD,EAAO,CAAA,EACpE,CAAA,CAAA,KAAA,EAAA,EAAK,KAAK,EAAC,qDAAqD,EAAA,CAAO,CACnE,CACF,EAGN,CAAK,CAAA,KAAA,EAAA,EAAA,KAAK,EAAC,uBAAuB,EAAA,EAChC,CAAK,CAAA,KAAA,EAAA,EAAA,KAAK,EAAC,sBAAsB,EAAA,EAC/B,CAAK,CAAA,KAAA,EAAA,EAAA,KAAK,EAAC,kDAAkD,EAAO,CAAA,EACpE,CAAA,CAAA,KAAA,EAAA,EAAK,KAAK,EAAC,mDAAmD,EAAA,CAAO,CACjE,EACN,CAAK,CAAA,KAAA,EAAA,EAAA,KAAK,EAAC,sBAAsB,EAAA,EAC/B,CAAK,CAAA,KAAA,EAAA,EAAA,KAAK,EAAC,kDAAkD,EAAO,CAAA,EACpE,CAAA,CAAA,KAAA,EAAA,EAAK,KAAK,EAAC,mDAAmD,EAAA,CAAO,CACjE,CACF,EAGN,CAAK,CAAA,KAAA,EAAA,EAAA,KAAK,EAAC,sBAAsB,EAAA,EAC/B,CAAK,CAAA,KAAA,EAAA,EAAA,KAAK,EAAC,qBAAqB,EAAO,CAAA,EACvC,CAAK,CAAA,KAAA,EAAA,EAAA,KAAK,EAAC,qBAAqB,EAAA,CAAO,CACnC,CACF,CACF;;IAIV,MAAM,GAAA;AACJ,QAAA,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;AACd,YAAA,OAAO,IAAI;;AAGb,QAAA,QACE,CAAA,CAAA,KAAA,EAAA,EAAK,KAAK,EAAC,gBAAgB,EAAA,EACzB,CAAA,CAAA,KAAA,EAAA,EAAK,KAAK,EAAC,sBAAsB,EAC9B,EAAA,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,MAC3C,WAAK,GAAG,EAAE,KAAK,EACZ,EAAA,IAAI,CAAC,kBAAkB,EAAE,CACtB,CACP,CAAC,CACE,CACF;;;;;;;;;;;;;;;;;;;;;;;;","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/features/euclid-tokens-list/tokens-loading.css?tag=tokens-loading&encapsulation=shadow","src/components/features/euclid-tokens-list/tokens-loading.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n\n.tokens-loading {\n  padding: 20px 0;\n}\n\n.tokens-skeleton-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  gap: 16px;\n}\n\n.token-skeleton {\n  background: var(--euclid-surface);\n  border: 1px solid var(--euclid-border);\n  border-radius: var(--euclid-radius-lg);\n  padding: 20px;\n  position: relative;\n  overflow: hidden;\n}\n\n.token-skeleton::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(\n    90deg,\n    transparent,\n    rgba(255, 255, 255, 0.08),\n    transparent\n  );\n  animation: shimmer 1.5s infinite ease-in-out;\n}\n\n@keyframes shimmer {\n  0% {\n    transform: translateX(-100%);\n  }\n  100% {\n    transform: translateX(200%);\n  }\n}\n\n.token-skeleton__content {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n}\n\n.token-skeleton__header {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.token-skeleton__icon {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background: var(--euclid-skeleton);\n  flex-shrink: 0;\n}\n\n.token-skeleton__info {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.token-skeleton__line {\n  height: 16px;\n  background: var(--euclid-skeleton);\n  border-radius: 4px;\n}\n\n.token-skeleton__line--title {\n  width: 80%;\n  height: 18px;\n}\n\n.token-skeleton__line--subtitle {\n  width: 60%;\n  height: 14px;\n}\n\n.token-skeleton__line--small {\n  width: 40%;\n  height: 12px;\n}\n\n.token-skeleton__line--medium {\n  width: 70%;\n  height: 16px;\n}\n\n.token-skeleton__stats {\n  display: flex;\n  justify-content: space-between;\n  gap: 16px;\n}\n\n.token-skeleton__stat {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n}\n\n.token-skeleton__tags {\n  display: flex;\n  gap: 8px;\n  flex-wrap: wrap;\n}\n\n.token-skeleton__tag {\n  width: 60px;\n  height: 24px;\n  background: var(--euclid-skeleton);\n  border-radius: 12px;\n}\n\n/* Dark theme adjustments */\n@media (prefers-color-scheme: dark) {\n  .token-skeleton::before {\n    background: linear-gradient(\n      90deg,\n      transparent,\n      rgba(255, 255, 255, 0.05),\n      transparent\n    );\n  }\n}\n\n/* Responsive */\n@media (max-width: 768px) {\n  .tokens-skeleton-grid {\n    grid-template-columns: 1fr;\n    gap: 12px;\n  }\n\n  .token-skeleton {\n    padding: 16px;\n  }\n\n  .token-skeleton__content {\n    gap: 12px;\n  }\n\n  .token-skeleton__header {\n    gap: 10px;\n  }\n\n  .token-skeleton__icon {\n    width: 32px;\n    height: 32px;\n  }\n}\n","import { Component, h, Prop } from '@stencil/core';\n\n@Component({\n  tag: 'tokens-loading',\n  styleUrl: 'tokens-loading.css',\n  shadow: true,\n})\nexport class TokensLoading {\n  /**\n   * Number of skeleton cards to show\n   */\n  @Prop() count: number = 8;\n\n  /**\n   * Whether to show the loading state\n   */\n  @Prop() show: boolean = true;\n\n  private renderSkeletonCard() {\n    return (\n      <div class=\"token-skeleton\">\n        <div class=\"token-skeleton__content\">\n          {/* Token icon and info */}\n          <div class=\"token-skeleton__header\">\n            <div class=\"token-skeleton__icon\"></div>\n            <div class=\"token-skeleton__info\">\n              <div class=\"token-skeleton__line token-skeleton__line--title\"></div>\n              <div class=\"token-skeleton__line token-skeleton__line--subtitle\"></div>\n            </div>\n          </div>\n\n          {/* Price and volume */}\n          <div class=\"token-skeleton__stats\">\n            <div class=\"token-skeleton__stat\">\n              <div class=\"token-skeleton__line token-skeleton__line--small\"></div>\n              <div class=\"token-skeleton__line token-skeleton__line--medium\"></div>\n            </div>\n            <div class=\"token-skeleton__stat\">\n              <div class=\"token-skeleton__line token-skeleton__line--small\"></div>\n              <div class=\"token-skeleton__line token-skeleton__line--medium\"></div>\n            </div>\n          </div>\n\n          {/* Tags */}\n          <div class=\"token-skeleton__tags\">\n            <div class=\"token-skeleton__tag\"></div>\n            <div class=\"token-skeleton__tag\"></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    if (!this.show) {\n      return null;\n    }\n\n    return (\n      <div class=\"tokens-loading\">\n        <div class=\"tokens-skeleton-grid\">\n          {Array.from({ length: this.count }, (_, index) => (\n            <div key={index}>\n              {this.renderSkeletonCard()}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n"],"version":3}