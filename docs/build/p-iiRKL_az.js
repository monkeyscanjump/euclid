import{D as r}from"./p-8CHUc0Tf.js";import"./p-DWrf3bWA.js";import"./p-uEsOKkhe.js";async function t(t,n={},o){const e={...r,...o};const{method:c="GET",body:s,headers:a={}}=n;const i=new AbortController;const u=setTimeout((()=>i.abort()),e.apiTimeout);try{const r=new URL(t,e.restEndpoint);const n=await fetch(r.toString(),{method:c,headers:{"Content-Type":"application/json",Accept:"application/json",...a},body:s?JSON.stringify(s):undefined,signal:i.signal});clearTimeout(u);if(!n.ok){const r=await n.text();throw new Error(`HTTP ${n.status}: ${r}`)}return await n.json()}catch(r){clearTimeout(u);const t=r instanceof Error?r.message:"Unknown error";throw new Error(`Transaction request failed: ${t}`)}}async function n(r){try{const n=await t("/swap",{method:"POST",body:r});return{success:true,data:n}}catch(r){const t=r instanceof Error?r.message:"Unknown error occurred";return{success:false,error:t}}}async function o(r){try{const n=await t("/add_liquidity",{method:"POST",body:r});return{success:true,data:n}}catch(r){const t=r instanceof Error?r.message:"Unknown error occurred";return{success:false,error:t}}}async function e(r){try{const n=await t("/remove_liquidity",{method:"POST",body:r});return{success:true,data:n}}catch(r){const t=r instanceof Error?r.message:"Unknown error occurred";return{success:false,error:t}}}async function c(r){const n=new URLSearchParams({amount_in:r.amount_in,token_in:r.token_in,token_out:r.token_out});if(r.chain_uid){n.append("chain_uid",r.chain_uid)}const o=await t(`/simulate_swap?${n}`);return o}export{o as buildAddLiquidityTransactionImpl,e as buildRemoveLiquidityTransactionImpl,n as buildSwapTransactionImpl,c as simulateSwapImpl};
//# sourceMappingURL=p-iiRKL_az.js.map