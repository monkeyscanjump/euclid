{"version":3,"file":"tokens-filters.js","sourceRoot":"","sources":["../../../../src/components/features/euclid-tokens-list/tokens-filters.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAgB,MAAM,eAAe,CAAC;AAexE,MAAM,OAAO,aAAa;IAL1B;QAOU,WAAM,GAAa,EAAE,CAAC;QAItB,uBAAkB,GAAG,CAAC,KAAY,EAAE,EAAE;YAC5C,MAAM,MAAM,GAAG,KAAK,CAAC,MAA0B,CAAC;YAChD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;QACtE,CAAC,CAAC;QAEM,qBAAgB,GAAG,CAAC,KAAY,EAAE,EAAE;YAC1C,MAAM,MAAM,GAAG,KAAK,CAAC,MAA2B,CAAC;YACjD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;gBACvB,GAAG,IAAI,CAAC,OAAO;gBACf,MAAM,EAAE,MAAM,CAAC,KAAkD;aAClE,CAAC,CAAC;QACL,CAAC,CAAC;QAEM,sBAAiB,GAAG,CAAC,KAAY,EAAE,EAAE;YAC3C,MAAM,MAAM,GAAG,KAAK,CAAC,MAA2B,CAAC;YACjD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,WAAW,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;QAC3E,CAAC,CAAC;KAiCH;IA/BC,MAAM;QACJ,OAAO,CACL,4DAAK,KAAK,EAAC,gBAAgB;YACzB,8DACE,KAAK,EAAC,cAAc,EACpB,IAAI,EAAC,MAAM,EACX,WAAW,EAAC,oCAAoC,EAChD,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,EAC1B,OAAO,EAAE,IAAI,CAAC,kBAAkB,GAChC;YAEF,+DAAQ,KAAK,EAAC,aAAa,EAAC,QAAQ,EAAE,IAAI,CAAC,gBAAgB;gBACzD,+DAAQ,KAAK,EAAC,MAAM,EAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,MAAM,iBAAqB;gBAClF,+DAAQ,KAAK,EAAC,OAAO,EAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,OAAO,0BAA8B;gBAC7F,+DAAQ,KAAK,EAAC,QAAQ,EAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,QAAQ,2BAA+B;gBAChG,+DAAQ,KAAK,EAAC,WAAW,EAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,WAAW,iBAAqB,CACrF;YAER,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,CACzB,+DAAQ,KAAK,EAAC,cAAc,EAAC,QAAQ,EAAE,IAAI,CAAC,iBAAiB;gBAC3D,+DAAQ,KAAK,EAAC,EAAE,EAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW,KAAK,EAAE,iBAAqB;gBAC9E,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CACxB,cAAQ,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW,KAAK,KAAK,IAC3E,KAAK,CACC,CACV,CAAC,CACK,CACV,CACG,CACP,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Prop, h, Event, EventEmitter } from '@stencil/core';\n\nexport interface TokenFilters {\n  search: string;\n  sortBy: 'name' | 'price' | 'volume' | 'marketCap';\n  sortOrder: 'asc' | 'desc';\n  showFavorites: boolean;\n  chainFilter: string;\n}\n\n@Component({\n  tag: 'tokens-filters',\n  styleUrl: 'tokens-filters.css',\n  shadow: true,\n})\nexport class TokensFilters {\n  @Prop() filters!: TokenFilters;\n  @Prop() chains: string[] = [];\n\n  @Event() filtersChanged: EventEmitter<TokenFilters>;\n\n  private handleSearchChange = (event: Event) => {\n    const target = event.target as HTMLInputElement;\n    this.filtersChanged.emit({ ...this.filters, search: target.value });\n  };\n\n  private handleSortChange = (event: Event) => {\n    const target = event.target as HTMLSelectElement;\n    this.filtersChanged.emit({\n      ...this.filters,\n      sortBy: target.value as 'name' | 'price' | 'volume' | 'marketCap'\n    });\n  };\n\n  private handleChainChange = (event: Event) => {\n    const target = event.target as HTMLSelectElement;\n    this.filtersChanged.emit({ ...this.filters, chainFilter: target.value });\n  };\n\n  render() {\n    return (\n      <div class=\"tokens-filters\">\n        <input\n          class=\"search-input\"\n          type=\"text\"\n          placeholder=\"Search tokens by name or symbol...\"\n          value={this.filters.search}\n          onInput={this.handleSearchChange}\n        />\n\n        <select class=\"sort-select\" onChange={this.handleSortChange}>\n          <option value=\"name\" selected={this.filters.sortBy === 'name'}>Name (A-Z)</option>\n          <option value=\"price\" selected={this.filters.sortBy === 'price'}>Price (High to Low)</option>\n          <option value=\"volume\" selected={this.filters.sortBy === 'volume'}>Volume (High to Low)</option>\n          <option value=\"marketCap\" selected={this.filters.sortBy === 'marketCap'}>Market Cap</option>\n        </select>\n\n        {this.chains.length > 0 && (\n          <select class=\"chain-select\" onChange={this.handleChainChange}>\n            <option value=\"\" selected={this.filters.chainFilter === ''}>All Chains</option>\n            {this.chains.map(chain => (\n              <option key={chain} value={chain} selected={this.filters.chainFilter === chain}>\n                {chain}\n              </option>\n            ))}\n          </select>\n        )}\n      </div>\n    );\n  }\n}\n"]}