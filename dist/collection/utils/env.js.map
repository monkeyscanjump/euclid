{"version":3,"file":"env.js","sourceRoot":"","sources":["../../src/utils/env.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAwDH,4DAA4D;AAC5D,MAAM,CAAC,MAAM,GAAG,GAAsB;IACpC,2DAA2D;IAC3D,qBAAqB,EAAE,gDAAgD;IACvE,kBAAkB,EAAE,+CAA+C;IACnE,UAAU,EAAE,KAAK;IAEjB,4BAA4B;IAC5B,aAAa,EAAE,IAAI;IACnB,aAAa,EAAE,WAAW;IAC1B,OAAO,EAAE,aAAa;IAEtB,gBAAgB;IAChB,QAAQ,EAAE;QACR,aAAa,EAAE,IAAI;QACnB,QAAQ,EAAE,IAAI;QACd,eAAe,EAAE,IAAI;QACrB,kBAAkB,EAAE,IAAI;QACxB,WAAW,EAAE,KAAK;QAClB,WAAW,EAAE,KAAK;KACnB;IAED,uBAAuB;IACvB,gBAAgB,EAAE;QAChB,MAAM,EAAE,KAAK;QACb,UAAU,EAAE,MAAM;QAClB,QAAQ,EAAE,KAAK;KAChB;IACD,kBAAkB,EAAE,MAAM;IAE1B,mBAAmB;IACnB,EAAE,EAAE;QACF,eAAe,EAAE,GAAG;QACpB,iBAAiB,EAAE,GAAG;QACtB,MAAM,EAAE;YACN,KAAK,EAAE,IAAI;YACX,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,IAAI;SACf;KACF;IAED,sBAAsB;IACtB,YAAY,EAAE,WAAW;IACzB,eAAe,EAAE,CAAC,aAAa,EAAE,WAAW,EAAE,QAAQ,EAAE,YAAY,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC;IAEpH,uBAAuB;IACvB,aAAa,EAAE,OAAO;IACtB,gBAAgB,EAAE,CAAC,OAAO,EAAE,UAAU,EAAE,eAAe,EAAE,UAAU,CAAC;IAEpE,kBAAkB;IAClB,QAAQ,EAAE,MAAM;IAChB,SAAS,EAAE,KAAK;IAChB,2BAA2B,EAAE,KAAK;CACnC,CAAC;AAEF,kDAAkD;AAClD,MAAM,CAAC,MAAM,aAAa,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,OAAO,KAAK,aAAa,CAAC;AACjE,MAAM,CAAC,MAAM,YAAY,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,OAAO,KAAK,YAAY,CAAC;AAC/D,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,OAAkC,EAAE,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;AAE9F,mDAAmD;AACnD,MAAM,CAAC,MAAM,SAAS,GAAG;IACvB,eAAe,EAAE,GAAG,CAAC,qBAAqB;IAC1C,YAAY,EAAE,GAAG,CAAC,kBAAkB;IACpC,OAAO,EAAE,GAAG,CAAC,UAAU;CACxB,CAAC;AAEF,MAAM,CAAC,MAAM,QAAQ,GAAG,GAAG,CAAC,EAAE,CAAC;AAC/B,MAAM,CAAC,MAAM,YAAY,GAAG,GAAG,CAAC,QAAQ,CAAC;AACzC,MAAM,CAAC,MAAM,gBAAgB,GAAG,GAAG,CAAC,gBAAgB,CAAC","sourcesContent":["/**\n * Environment Configuration Utility\n * Browser-compatible configuration without process.env dependency\n */\n\ninterface EnvironmentConfig {\n  // API Configuration\n  euclidGraphqlEndpoint: string;\n  euclidRestEndpoint: string;\n  apiTimeout: number;\n\n  // Development Configuration\n  devServerPort: number;\n  devServerHost: string;\n  nodeEnv: 'development' | 'production' | 'test';\n\n  // Feature Flags\n  features: {\n    serviceWorker: boolean;\n    darkMode: boolean;\n    advancedRouting: boolean;\n    transactionHistory: boolean;\n    priceAlerts: boolean;\n    limitOrders: boolean;\n  };\n\n  // Performance Settings\n  refreshIntervals: {\n    routes: number;\n    marketData: number;\n    balances: number;\n  };\n  transactionTimeout: number;\n\n  // UI Configuration\n  ui: {\n    defaultSlippage: number;\n    animationDuration: number;\n    zIndex: {\n      modal: number;\n      tooltip: number;\n      dropdown: number;\n    };\n  };\n\n  // Chain Configuration\n  defaultChain: string;\n  supportedChains: string[];\n\n  // Wallet Configuration\n  defaultWallet: string;\n  supportedWallets: string[];\n\n  // Logging & Debug\n  logLevel: 'error' | 'warn' | 'info' | 'debug';\n  debugMode: boolean;\n  enablePerformanceMonitoring: boolean;\n}\n\n// Direct configuration - this works in browser environments\nexport const env: EnvironmentConfig = {\n  // API Configuration - using the values from your .env file\n  euclidGraphqlEndpoint: 'https://testnet.api.euclidprotocol.com/graphql',\n  euclidRestEndpoint: 'https://testnet.api.euclidprotocol.com/api/v1',\n  apiTimeout: 10000,\n\n  // Development Configuration\n  devServerPort: 3333,\n  devServerHost: 'localhost',\n  nodeEnv: 'development',\n\n  // Feature Flags\n  features: {\n    serviceWorker: true,\n    darkMode: true,\n    advancedRouting: true,\n    transactionHistory: true,\n    priceAlerts: false,\n    limitOrders: false,\n  },\n\n  // Performance Settings\n  refreshIntervals: {\n    routes: 30000,\n    marketData: 300000,\n    balances: 60000,\n  },\n  transactionTimeout: 300000,\n\n  // UI Configuration\n  ui: {\n    defaultSlippage: 0.5,\n    animationDuration: 250,\n    zIndex: {\n      modal: 1000,\n      tooltip: 1070,\n      dropdown: 1000,\n    },\n  },\n\n  // Chain Configuration\n  defaultChain: 'osmosis-1',\n  supportedChains: ['cosmoshub-4', 'osmosis-1', 'juno-1', 'stargaze-1', 'ethereum', 'polygon', 'arbitrum', 'optimism'],\n\n  // Wallet Configuration\n  defaultWallet: 'keplr',\n  supportedWallets: ['keplr', 'metamask', 'walletconnect', 'coinbase'],\n\n  // Logging & Debug\n  logLevel: 'info',\n  debugMode: false,\n  enablePerformanceMonitoring: false,\n};\n\n// Utility functions for common environment checks\nexport const isDevelopment = () => env.nodeEnv === 'development';\nexport const isProduction = () => env.nodeEnv === 'production';\nexport const isFeatureEnabled = (feature: keyof typeof env.features) => env.features[feature];\n\n// Export individual configurations for convenience\nexport const apiConfig = {\n  graphqlEndpoint: env.euclidGraphqlEndpoint,\n  restEndpoint: env.euclidRestEndpoint,\n  timeout: env.apiTimeout,\n};\n\nexport const uiConfig = env.ui;\nexport const featureFlags = env.features;\nexport const refreshIntervals = env.refreshIntervals;\n"]}