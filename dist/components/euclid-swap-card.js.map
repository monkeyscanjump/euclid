{"file":"euclid-swap-card.js","mappings":"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","names":["EuclidSwapCard","__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/features/euclid-swap-card/euclid-swap-card.css?tag=euclid-swap-card&encapsulation=shadow","src/components/features/euclid-swap-card/euclid-swap-card.tsx"],"sourcesContent":[":host {\n  display: contents;\n}\n\n/* Swap Card Container */\n.swap-card {\n  background: var(--euclid-surface);\n  border: 1px solid var(--euclid-border);\n  border-radius: var(--euclid-radius-2xl);\n  padding: var(--euclid-spacing-6);\n  max-width: 420px;\n  width: 100%;\n  box-shadow: var(--euclid-shadow-xl);\n  display: flex;\n  flex-direction: column;\n  gap: var(--euclid-spacing-4);\n}\n\n/* Header */\n.swap-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: var(--euclid-spacing-2);\n}\n\n.swap-title {\n  font-size: var(--euclid-text-size-xl);\n  font-weight: var(--euclid-font-weight-semibold);\n  color: var(--euclid-text-primary);\n  margin: 0;\n}\n\n.settings-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 2.5rem;\n  height: 2.5rem;\n  background: var(--euclid-surface-secondary);\n  border: 1px solid var(--euclid-border);\n  border-radius: var(--euclid-radius-lg);\n  color: var(--euclid-text-secondary);\n  cursor: pointer;\n  transition: all var(--euclid-transition-duration-fast);\n}\n\n.settings-button:hover {\n  background: var(--euclid-surface-tertiary);\n  color: var(--euclid-text-primary);\n  border-color: var(--euclid-border-hover);\n}\n\n.settings-button:focus {\n  outline: 2px solid var(--euclid-border-focus);\n  outline-offset: 2px;\n}\n\n.settings-button svg {\n  width: 1.25rem;\n  height: 1.25rem;\n}\n\n/* Settings Panel */\n.settings-panel {\n  background: var(--euclid-surface-secondary);\n  border: 1px solid var(--euclid-border);\n  border-radius: var(--euclid-radius-lg);\n  padding: var(--euclid-spacing-4);\n  margin-bottom: var(--euclid-spacing-2);\n}\n\n.setting-item {\n  margin-bottom: var(--euclid-spacing-4);\n}\n\n.setting-item:last-child {\n  margin-bottom: 0;\n}\n\n.setting-label {\n  display: block;\n  font-size: var(--euclid-text-size-sm);\n  font-weight: var(--euclid-font-weight-medium);\n  color: var(--euclid-text-secondary);\n  margin-bottom: var(--euclid-spacing-2);\n}\n\n/* Slippage Controls */\n.slippage-buttons {\n  display: flex;\n  gap: var(--euclid-spacing-2);\n  align-items: center;\n}\n\n.slippage-btn {\n  padding: var(--euclid-spacing-2) var(--euclid-spacing-3);\n  border: 1px solid var(--euclid-border);\n  border-radius: var(--euclid-radius-md);\n  background: var(--euclid-surface);\n  color: var(--euclid-text-secondary);\n  font-size: var(--euclid-text-size-sm);\n  cursor: pointer;\n  transition: all var(--euclid-transition-duration-fast);\n}\n\n.slippage-btn:hover {\n  border-color: var(--euclid-interactive-primary);\n  color: var(--euclid-interactive-primary);\n}\n\n.slippage-btn--active {\n  background: var(--euclid-interactive-primary);\n  color: var(--euclid-white);\n  border-color: var(--euclid-interactive-primary);\n}\n\n.slippage-input {\n  padding: var(--euclid-spacing-2) var(--euclid-spacing-3);\n  border: 1px solid var(--euclid-border);\n  border-radius: var(--euclid-radius-md);\n  background: var(--euclid-surface);\n  color: var(--euclid-text-primary);\n  font-size: var(--euclid-text-size-sm);\n  width: 80px;\n  text-align: center;\n}\n\n.slippage-input:focus {\n  outline: none;\n  border-color: var(--euclid-border-focus);\n  box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.25);\n}\n\n/* Deadline Input */\n.deadline-input {\n  display: flex;\n  align-items: center;\n  gap: var(--euclid-spacing-2);\n}\n\n.deadline-input input {\n  padding: var(--euclid-spacing-2) var(--euclid-spacing-3);\n  border: 1px solid var(--euclid-border);\n  border-radius: var(--euclid-radius-md);\n  background: var(--euclid-surface);\n  color: var(--euclid-text-primary);\n  font-size: var(--euclid-text-size-sm);\n  width: 100px;\n}\n\n.deadline-input input:focus {\n  outline: none;\n  border-color: var(--euclid-border-focus);\n  box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.25);\n}\n\n.deadline-input span {\n  font-size: var(--euclid-text-size-sm);\n  color: var(--euclid-text-secondary);\n}\n\n/* Token Input Sections */\n.token-input-section {\n  position: relative;\n}\n\n.input-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: var(--euclid-spacing-2);\n}\n\n.input-label {\n  font-size: var(--euclid-text-size-sm);\n  color: var(--euclid-text-secondary);\n}\n\n.balance-label {\n  font-size: var(--euclid-text-size-sm);\n  color: var(--euclid-text-muted);\n  cursor: pointer;\n  transition: color var(--euclid-transition-duration-fast);\n}\n\n.balance-label:hover {\n  color: var(--euclid-text-secondary);\n}\n\n/* Token Selector */\n.token-selector {\n  cursor: pointer;\n}\n\n.token-selector:hover {\n  opacity: 0.8;\n}\n\n.selected-token {\n  display: flex;\n  align-items: center;\n  gap: var(--euclid-spacing-3);\n  padding: var(--euclid-spacing-4);\n  border: 2px solid var(--euclid-border);\n  border-radius: var(--euclid-radius-xl);\n  background: var(--euclid-surface);\n}\n\n.select-token-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: var(--euclid-spacing-2);\n  padding: var(--euclid-spacing-4) var(--euclid-spacing-6);\n  border: 2px dashed var(--euclid-border);\n  border-radius: var(--euclid-radius-xl);\n  background: var(--euclid-surface-secondary);\n  color: var(--euclid-text-secondary);\n  font-size: var(--euclid-text-size-base);\n  font-weight: var(--euclid-font-weight-medium);\n  cursor: pointer;\n  transition: all var(--euclid-transition-duration-fast);\n}\n\n.select-token-button:hover {\n  border-color: var(--euclid-border-hover);\n}\n\n.token-logo {\n  width: 2rem;\n  height: 2rem;\n  border-radius: 50%;\n  background: var(--euclid-surface-secondary);\n}\n\n.token-info {\n  display: flex;\n  flex-direction: column;\n  gap: var(--euclid-spacing-1);\n  flex: 1;\n}\n\n.token-symbol {\n  font-size: var(--euclid-text-size-base);\n  font-weight: var(--euclid-font-weight-semibold);\n  color: var(--euclid-text-primary);\n}\n\n.token-name {\n  font-size: var(--euclid-text-size-sm);\n  color: var(--euclid-text-secondary);\n}\n\n.dropdown-arrow {\n  color: var(--euclid-text-muted);\n  transition: transform var(--euclid-transition-duration-fast);\n}\n\n.token-selector:hover .dropdown-arrow {\n  color: var(--euclid-text-secondary);\n}\n\n/* Swap Direction Button */\n.swap-direction {\n  display: flex;\n  justify-content: center;\n  margin: var(--euclid-spacing-2) 0;\n  position: relative;\n}\n\n.swap-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 2.5rem;\n  height: 2.5rem;\n  background: var(--euclid-surface);\n  border: 2px solid var(--euclid-border);\n  border-radius: 50%;\n  color: var(--euclid-text-secondary);\n  cursor: pointer;\n  transition: all var(--euclid-transition-duration-fast);\n  z-index: 10;\n}\n\n.swap-button:hover {\n  background: var(--euclid-surface-secondary);\n  border-color: var(--euclid-border-hover);\n  color: var(--euclid-text-primary);\n  transform: rotate(180deg);\n}\n\n.swap-button:focus {\n  outline: 2px solid var(--euclid-border-focus);\n  outline-offset: 2px;\n}\n\n.swap-button svg {\n  width: 1.25rem;\n  height: 1.25rem;\n}\n\n/* Quote Information */\n.quote-info {\n  padding: var(--euclid-spacing-4);\n  background: var(--euclid-surface-secondary);\n  border-radius: var(--euclid-radius-xl);\n}\n\n.quote-row {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: var(--euclid-spacing-2);\n}\n\n.quote-row:last-child {\n  margin-bottom: 0;\n}\n\n.quote-label {\n  font-size: var(--euclid-text-size-sm);\n  color: var(--euclid-text-secondary);\n}\n\n.quote-value {\n  font-size: var(--euclid-text-size-sm);\n  font-weight: var(--euclid-font-weight-medium);\n  color: var(--euclid-text-primary);\n}\n\n.quote-value--warning {\n  color: var(--euclid-warning-600);\n}\n\n.quote-value--danger {\n  color: var(--euclid-danger-600);\n}\n\n/* Responsive Design */\n@media (max-width: 480px) {\n  .swap-card {\n    padding: var(--euclid-spacing-4);\n    gap: var(--euclid-spacing-3);\n  }\n\n  .swap-header {\n    margin-bottom: var(--euclid-spacing-2);\n  }\n\n  .settings-panel {\n    padding: var(--euclid-spacing-3);\n  }\n\n  .slippage-buttons {\n    flex-wrap: wrap;\n  }\n\n  .deadline-input {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: var(--euclid-spacing-1);\n  }\n\n  .deadline-input input {\n    width: 100%;\n  }\n\n  .selected-token {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: var(--euclid-spacing-2);\n  }\n\n  .token-info {\n    width: 100%;\n  }\n\n  .quote-info {\n    padding: var(--euclid-spacing-3);\n  }\n}\n\n/* Accessibility */\n@media (prefers-reduced-motion: reduce) {\n  .settings-button,\n  .slippage-btn,\n  .token-selector,\n  .swap-button,\n  .dropdown-arrow {\n    transition: none;\n  }\n\n  .swap-button:hover {\n    transform: none;\n  }\n}\n\n/* Focus Styles */\n.token-selector:focus-within {\n  outline: 2px solid var(--euclid-border-focus);\n  outline-offset: 2px;\n}\n\n/* Loading States */\n.quote-info.loading {\n  position: relative;\n  pointer-events: none;\n}\n\n.quote-info.loading::after {\n  content: '';\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 1.5rem;\n  height: 1.5rem;\n  border: 2px solid var(--euclid-border);\n  border-top: 2px solid var(--euclid-interactive-primary);\n  border-radius: 50%;\n  animation: euclid-spin 1s linear infinite;\n}\n\n/* High Contrast Mode */\n@media (prefers-contrast: high) {\n  .swap-card,\n  .settings-panel,\n  .selected-token,\n  .quote-info {\n    border-width: 2px;\n    border-color: var(--euclid-text-primary);\n  }\n\n  .slippage-btn--active {\n    border-color: var(--euclid-text-primary);\n    background: var(--euclid-text-primary);\n  }\n}","import { Component, Prop, h, State, Event, EventEmitter, Listen, Element } from '@stencil/core';\nimport { walletStore } from '../../../store/wallet.store';\nimport { appStore } from '../../../store/app.store';\nimport { marketStore } from '../../../store/market.store';\nimport { EUCLID_EVENTS, dispatchEuclidEvent } from '../../../utils/events';\nimport type { TokenMetadata } from '../../../utils/types/api.types';\n\nexport interface SwapToken {\n  id: string;\n  symbol: string;\n  name: string;\n  address: string;\n  chainUID: string;\n  decimals: number;\n  logoUrl?: string;\n  balance?: string;\n  price?: number;\n}\n\nexport interface SwapQuote {\n  inputAmount: string;\n  outputAmount: string;\n  exchangeRate: number;\n  priceImpact: number;\n  minimumReceived: string;\n  gasEstimate: string;\n  route: SwapRouteStep[];\n}\n\nexport interface SwapRouteStep {\n  protocol: string;\n  poolAddress: string;\n  fee: number;\n  inputToken: string;\n  outputToken: string;\n}\n\nexport interface SwapSettings {\n  slippage: number;\n  deadline: number;\n  gasPrice?: string;\n  infiniteApproval: boolean;\n}\n\n@Component({\n  tag: 'euclid-swap-card',\n  styleUrl: 'euclid-swap-card.css',\n  shadow: true,\n})\nexport class EuclidSwapCard {\n  @Element() element!: HTMLElement;\n\n  /**\n   * Available tokens for swapping (gets from market store automatically)\n   * @deprecated Use store instead\n   */\n  @Prop() tokens: SwapToken[] = [];\n\n  // Store data (automatically synced)\n  @State() storeTokens: TokenMetadata[] = [];\n  @State() storeLoading: boolean = false;\n\n  /**\n   * Currently selected input token\n   */\n  @Prop({ mutable: true }) inputToken: SwapToken | null = null;\n\n  /**\n   * Currently selected output token\n   */\n  @Prop({ mutable: true }) outputToken: SwapToken | null = null;\n\n  /**\n   * Input amount value\n   */\n  @Prop({ mutable: true }) inputAmount: string = '';\n\n  /**\n   * Whether the component is in loading state\n   */\n  @Prop() loading: boolean = false;\n\n  /**\n   * Whether the swap functionality is disabled\n   */\n  @Prop() disabled: boolean = false;\n\n  /**\n   * Connected wallet address\n   */\n  @Prop() walletAddress: string = '';\n\n  /**\n   * Whether to show advanced settings\n   */\n  @Prop() showAdvanced: boolean = false;\n\n  /**\n   * Default slippage tolerance (0.1 = 0.1%)\n   */\n  @Prop() defaultSlippage: number = 0.5;\n\n  /**\n   * Card title\n   */\n  @Prop() cardTitle: string = 'Swap Tokens';\n\n  // Internal state\n  @State() outputAmount: string = '';\n  @State() isSettingsOpen: boolean = false;\n  @State() tokenSelectorType: 'input' | 'output' = 'input';\n  @State() currentQuote: SwapQuote | null = null;\n  @State() isQuoting: boolean = false;\n  @State() swapSettings: SwapSettings = {\n    slippage: this.defaultSlippage,\n    deadline: 20,\n    infiniteApproval: false,\n  };\n\n  // Events\n  @Event() swapInitiated: EventEmitter<{\n    inputToken: SwapToken;\n    outputToken: SwapToken;\n    inputAmount: string;\n    outputAmount: string;\n    settings: SwapSettings;\n    quote: SwapQuote;\n  }>;\n\n  @Event() tokenSelect: EventEmitter<{\n    type: 'input' | 'output';\n    token: SwapToken;\n  }>;\n\n  @Event() quoteRequested: EventEmitter<{\n    inputToken: SwapToken;\n    outputToken: SwapToken;\n    inputAmount: string;\n  }>;\n\n  @Event() settingsChanged: EventEmitter<SwapSettings>;\n\n  // Quote update timer\n  private quoteTimer: NodeJS.Timeout | null = null;\n\n  componentWillLoad() {\n    // Connect to market store for automatic token updates\n    this.syncWithStore();\n  }\n\n  componentDidLoad() {\n    // Listen for store changes\n    marketStore.onChange('tokens', () => {\n      this.syncWithStore();\n    });\n\n    // Auto-quote when inputs change\n    this.startQuoteTimer();\n  }\n\n  private syncWithStore() {\n    // Use store data if available, fallback to props\n    this.storeTokens = marketStore.state.tokens.length > 0 ? marketStore.state.tokens : [];\n    this.storeLoading = marketStore.state.loading;\n  }\n\n  /**\n   * Get available tokens for swap selection\n   * Combines store tokens with legacy prop tokens for compatibility\n   */\n  private getAvailableTokens(): SwapToken[] {\n    // Use store tokens if available, fallback to props\n    const sourceTokens = this.storeTokens.length > 0 ? this.storeTokens : this.tokens;\n\n    return sourceTokens.map(token => {\n      // Check if this is TokenMetadata from store or legacy SwapToken from props\n      if ('tokenId' in token && 'displayName' in token && 'coinDecimal' in token) {\n        // Store token format (TokenMetadata)\n        return {\n          id: token.tokenId,\n          symbol: token.symbol || token.displayName.toUpperCase(),\n          name: token.displayName,\n          address: token.address || token.tokenId,\n          chainUID: token.chainUID || token.chain_uid || token.chain_uids?.[0] || '',\n          decimals: token.coinDecimal,\n          logoUrl: token.logo || token.image || undefined,\n          balance: undefined, // Would need to fetch from wallet\n          price: token.price ? parseFloat(token.price) : undefined,\n        };\n      } else {\n        // Legacy prop format (SwapToken)\n        return token as SwapToken;\n      }\n    });\n  }\n\n  /**\n   * Get unique chains from available tokens\n   */\n  private getAvailableChains() {\n    const tokens = this.getAvailableTokens();\n    const chainMap = new Map();\n\n    tokens.forEach(token => {\n      if (!chainMap.has(token.chainUID)) {\n        chainMap.set(token.chainUID, {\n          chain_uid: token.chainUID,\n          display_name: this.getChainDisplayName(token.chainUID),\n        });\n      }\n    });\n\n    return Array.from(chainMap.values());\n  }\n\n  disconnectedCallback() {\n    if (this.quoteTimer) {\n      clearTimeout(this.quoteTimer);\n    }\n  }\n\n  @Listen('valueChange')\n  handleInputChange(event: CustomEvent) {\n    if (event.target === this.element.querySelector('#input-amount')) {\n      this.inputAmount = event.detail.value;\n      this.startQuoteTimer();\n    }\n  }\n\n  @Listen('tokenSelect', { target: 'document' })\n  handleTokenModalSelect(event: CustomEvent) {\n    // Only handle events from the token modal with proper structure\n    if (!event.detail || !event.detail.token || !event.detail.selectorType) {\n      return;\n    }\n\n    console.log('🔧 Swap - received token selection:', event.detail);\n\n    const { token, selectorType } = event.detail;\n\n    // Convert TokenInfo to SwapToken format\n    const selectedToken: SwapToken = {\n      id: token.tokenId || token.id,\n      symbol: token.symbol,\n      name: token.name || token.displayName,\n      address: token.address || token.tokenId,\n      chainUID: token.chainUID || token.chain_uid,\n      decimals: token.decimals || token.coinDecimal,\n      logoUrl: token.logoUrl || token.logo,\n      balance: token.balance,\n      price: token.price,\n    };\n\n    if (selectorType === 'input') {\n      // If we're selecting the same token that's already in output, swap them\n      if (this.outputToken && selectedToken.address === this.outputToken.address) {\n        this.outputToken = this.inputToken;\n      }\n      this.inputToken = selectedToken;\n    } else {\n      // If we're selecting the same token that's already in input, swap them\n      if (this.inputToken && selectedToken.address === this.inputToken.address) {\n        this.inputToken = this.outputToken;\n      }\n      this.outputToken = selectedToken;\n    }\n\n    // Emit event for external listeners\n    this.tokenSelect.emit({\n      type: selectorType,\n      token: selectedToken,\n    });\n\n    // Start quote timer if we have both tokens\n    this.startQuoteTimer();\n  }\n\n  private startQuoteTimer() {\n    if (this.quoteTimer) {\n      clearTimeout(this.quoteTimer);\n    }\n\n    if (this.inputToken && this.outputToken && this.inputAmount && parseFloat(this.inputAmount) > 0) {\n      this.quoteTimer = setTimeout(() => {\n        this.requestQuote();\n      }, 800); // Debounce for 800ms\n    } else {\n      this.outputAmount = '';\n      this.currentQuote = null;\n    }\n  }\n\n  private async requestQuote() {\n    if (!this.inputToken || !this.outputToken || !this.inputAmount) return;\n\n    this.isQuoting = true;\n\n    this.quoteRequested.emit({\n      inputToken: this.inputToken,\n      outputToken: this.outputToken,\n      inputAmount: this.inputAmount,\n    });\n\n    // Simulate quote response (in real app, this would be handled by parent component)\n    setTimeout(() => {\n      if (this.inputToken && this.outputToken && this.inputAmount) {\n        const mockRate = 1.2 + Math.random() * 0.3; // Mock exchange rate\n        const calculatedOutput = (parseFloat(this.inputAmount) * mockRate).toFixed(6);\n\n        this.currentQuote = {\n          inputAmount: this.inputAmount,\n          outputAmount: calculatedOutput,\n          exchangeRate: mockRate,\n          priceImpact: Math.random() * 2, // 0-2% impact\n          minimumReceived: (parseFloat(calculatedOutput) * (1 - this.swapSettings.slippage / 100)).toFixed(6),\n          gasEstimate: (0.001 + Math.random() * 0.002).toFixed(4), // Mock gas\n          route: [\n            {\n              protocol: 'Euclid Protocol',\n              poolAddress: '0x123...abc',\n              fee: 0.3,\n              inputToken: this.inputToken.symbol,\n              outputToken: this.outputToken.symbol,\n            },\n          ],\n        };\n\n        this.outputAmount = calculatedOutput;\n      }\n      this.isQuoting = false;\n    }, 1000);\n  }\n\n  private handleSwapTokens = () => {\n    const tempToken = this.inputToken;\n    const tempAmount = this.inputAmount;\n\n    this.inputToken = this.outputToken;\n    this.outputToken = tempToken;\n    this.inputAmount = this.outputAmount;\n    this.outputAmount = tempAmount;\n\n    this.startQuoteTimer();\n  };\n\n  private handleMaxClick = () => {\n    if (this.inputToken?.balance) {\n      this.inputAmount = this.inputToken.balance;\n      this.startQuoteTimer();\n    }\n  };\n\n  private openTokenSelector = (type: 'input' | 'output') => {\n    console.log('🔧 Opening token selector for:', type);\n    this.tokenSelectorType = type;\n    appStore.openTokenModal(type);\n  };  private toggleSettings = () => {\n    this.isSettingsOpen = !this.isSettingsOpen;\n  };\n\n  private handleSlippageChange = (slippage: number) => {\n    this.swapSettings = { ...this.swapSettings, slippage };\n    this.settingsChanged.emit(this.swapSettings);\n    this.startQuoteTimer(); // Recalculate with new slippage\n  };\n\n  private handleSwap = () => {\n    // Check if we need to connect wallet first\n    if (!this.inputToken || !this.isWalletConnectedForSwap()) {\n      // Open wallet modal with chain filter\n      appStore.openWalletModal(this.inputToken?.chainUID);\n      return;\n    }\n\n    if (!this.outputToken || !this.currentQuote) return;\n\n    // Emit event to trigger swap execution\n    dispatchEuclidEvent(EUCLID_EVENTS.SWAP.EXECUTE_REQUEST);\n\n    // Emit the swap event with all the data for external listeners\n    this.swapInitiated.emit({\n      inputToken: this.inputToken,\n      outputToken: this.outputToken,\n      inputAmount: this.inputAmount,\n      outputAmount: this.outputAmount,\n      settings: this.swapSettings,\n      quote: this.currentQuote,\n    });\n  };\n\n  private canSwap(): boolean {\n    // First check if we need wallet connection\n    if (!this.inputToken || !this.isWalletConnectedForSwap()) {\n      return true; // Button should be clickable for connection\n    }\n\n    return !!(\n      this.inputToken &&\n      this.outputToken &&\n      this.inputAmount &&\n      parseFloat(this.inputAmount) > 0 &&\n      this.currentQuote &&\n      !this.isQuoting &&\n      !this.loading &&\n      !this.disabled\n    );\n  }\n\n  private getSwapButtonText(): string {\n    // Check wallet connection for required chain\n    if (!this.inputToken || !this.isWalletConnectedForSwap()) {\n      const chainName = this.inputToken?.chainUID ?\n        this.getChainDisplayName(this.inputToken.chainUID) : 'Wallet';\n      return `Connect ${chainName}`;\n    }\n\n    if (!this.inputToken) return 'Select Input Token';\n    if (!this.outputToken) return 'Select Output Token';\n    if (!this.inputAmount || parseFloat(this.inputAmount) <= 0) return 'Enter Amount';\n    if (this.isQuoting) return 'Getting Quote...';\n    if (this.loading) return 'Swapping...';\n    if (!this.currentQuote) return 'Unable to Quote';\n    return `Swap ${this.inputToken.symbol} for ${this.outputToken.symbol}`;\n  }\n\n  private isWalletConnectedForSwap(): boolean {\n    if (!this.inputToken) return false;\n    return walletStore.isWalletConnected(this.inputToken.chainUID);\n  }\n\n  private getChainDisplayName(chainUID: string): string {\n    // Simple mapping - in production this would come from chain config\n    const chainNames = {\n      'ethereum': 'Ethereum',\n      'polygon': 'Polygon',\n      'arbitrum': 'Arbitrum',\n      'optimism': 'Optimism',\n      'cosmoshub-4': 'Cosmos Hub',\n      'osmosis-1': 'Osmosis',\n    };\n    return chainNames[chainUID] || 'Wallet';\n  }\n\n  render() {\n    return (\n      <div class=\"swap-card\">\n        {/* Header */}\n        <div class=\"swap-header\">\n          <h3 class=\"swap-title\">{this.cardTitle}</h3>\n          <button\n            class=\"settings-button\"\n            onClick={this.toggleSettings}\n            type=\"button\"\n            aria-label=\"Swap settings\"\n          >\n            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.82,11.69,4.82,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"/>\n            </svg>\n          </button>\n        </div>\n\n        {/* Settings Panel */}\n        {this.isSettingsOpen && (\n          <div class=\"settings-panel\">\n            <div class=\"setting-item\">\n              <label class=\"setting-label\">Slippage Tolerance</label>\n              <div class=\"slippage-buttons\">\n                {[0.1, 0.5, 1.0].map((value) => (\n                  <button\n                    class={{\n                      'slippage-btn': true,\n                      'slippage-btn--active': this.swapSettings.slippage === value,\n                    }}\n                    onClick={() => this.handleSlippageChange(value)}\n                    type=\"button\"\n                  >\n                    {value}%\n                  </button>\n                ))}\n                <input\n                  class=\"slippage-input\"\n                  type=\"number\"\n                  min=\"0\"\n                  max=\"50\"\n                  step=\"0.1\"\n                  value={this.swapSettings.slippage}\n                  onInput={(e) =>\n                    this.handleSlippageChange(parseFloat((e.target as HTMLInputElement).value))\n                  }\n                  placeholder=\"Custom\"\n                />\n              </div>\n            </div>\n            <div class=\"setting-item\">\n              <label class=\"setting-label\">Transaction Deadline</label>\n              <div class=\"deadline-input\">\n                <input\n                  type=\"number\"\n                  min=\"1\"\n                  max=\"4320\"\n                  value={this.swapSettings.deadline}\n                  onInput={(e) =>\n                    (this.swapSettings = {\n                      ...this.swapSettings,\n                      deadline: parseInt((e.target as HTMLInputElement).value),\n                    })\n                  }\n                />\n                <span>minutes</span>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Input Token */}\n        <div class=\"token-input-section\">\n          <div class=\"input-header\">\n            <span class=\"input-label\">From</span>\n            {this.inputToken?.balance && (\n              <span class=\"balance-label\">\n                Balance: {parseFloat(this.inputToken.balance).toLocaleString()}\n              </span>\n            )}\n          </div>\n\n          <euclid-token-input\n            id=\"input-amount\"\n            value={this.inputAmount}\n            placeholder=\"0.0\"\n            show-max={!!this.inputToken?.balance}\n            token-selectable={false}\n            onMaxClick={this.handleMaxClick}\n          >\n            <div slot=\"token\" class=\"token-selector\" onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              this.openTokenSelector('input');\n            }}>\n              {this.inputToken ? (\n                <div class=\"selected-token\">\n                  {this.inputToken.logoUrl && (\n                    <img src={this.inputToken.logoUrl} alt={this.inputToken.symbol} class=\"token-logo\" />\n                  )}\n                  <div class=\"token-info\">\n                    <span class=\"token-symbol\">{this.inputToken.symbol}</span>\n                    <span class=\"token-name\">{this.inputToken.name}</span>\n                  </div>\n                  <svg class=\"dropdown-arrow\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                    <path d=\"M7 10l5 5 5-5z\"/>\n                  </svg>\n                </div>\n              ) : (\n                <div class=\"select-token-button\">\n                  <span>Select Token</span>\n                  <svg class=\"dropdown-arrow\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                    <path d=\"M7 10l5 5 5-5z\"/>\n                  </svg>\n                </div>\n              )}\n            </div>\n          </euclid-token-input>\n        </div>\n\n        {/* Swap Direction Button */}\n        <div class=\"swap-direction\">\n          <button\n            class=\"swap-button\"\n            onClick={this.handleSwapTokens}\n            type=\"button\"\n            aria-label=\"Swap token directions\"\n          >\n            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M16 17.01V10h-2v7.01h-3L15 21l4-3.99h-3zM9 3L5 6.99h3V14h2V6.99h3L9 3z\"/>\n            </svg>\n          </button>\n        </div>\n\n        {/* Output Token */}\n        <div class=\"token-input-section\">\n          <div class=\"input-header\">\n            <span class=\"input-label\">To</span>\n            {this.outputToken?.balance && (\n              <span class=\"balance-label\">\n                Balance: {parseFloat(this.outputToken.balance).toLocaleString()}\n              </span>\n            )}\n          </div>\n\n          <euclid-token-input\n            id=\"output-amount\"\n            value={this.outputAmount}\n            placeholder=\"0.0\"\n            disabled={true}\n            loading={this.isQuoting}\n            token-selectable={false}\n          >\n            <div slot=\"token\" class=\"token-selector\" onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              this.openTokenSelector('output');\n            }}>\n              {this.outputToken ? (\n                <div class=\"selected-token\">\n                  {this.outputToken.logoUrl && (\n                    <img src={this.outputToken.logoUrl} alt={this.outputToken.symbol} class=\"token-logo\" />\n                  )}\n                  <div class=\"token-info\">\n                    <span class=\"token-symbol\">{this.outputToken.symbol}</span>\n                    <span class=\"token-name\">{this.outputToken.name}</span>\n                  </div>\n                  <svg class=\"dropdown-arrow\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                    <path d=\"M7 10l5 5 5-5z\"/>\n                  </svg>\n                </div>\n              ) : (\n                <div class=\"select-token-button\">\n                  <span>Select Token</span>\n                  <svg class=\"dropdown-arrow\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                    <path d=\"M7 10l5 5 5-5z\"/>\n                  </svg>\n                </div>\n              )}\n            </div>\n          </euclid-token-input>\n        </div>\n\n        {/* Quote Information */}\n        {this.currentQuote && (\n          <div class=\"quote-info\">\n            <div class=\"quote-row\">\n              <span class=\"quote-label\">Rate</span>\n              <span class=\"quote-value\">\n                1 {this.inputToken?.symbol} = {this.currentQuote.exchangeRate.toFixed(6)} {this.outputToken?.symbol}\n              </span>\n            </div>\n            {this.currentQuote.priceImpact > 0.1 && (\n              <div class=\"quote-row\">\n                <span class=\"quote-label\">Price Impact</span>\n                <span class={{\n                  'quote-value': true,\n                  'quote-value--warning': this.currentQuote.priceImpact > 3,\n                  'quote-value--danger': this.currentQuote.priceImpact > 15,\n                }}>\n                  {this.currentQuote.priceImpact.toFixed(2)}%\n                </span>\n              </div>\n            )}\n            <div class=\"quote-row\">\n              <span class=\"quote-label\">Minimum Received</span>\n              <span class=\"quote-value\">\n                {this.currentQuote.minimumReceived} {this.outputToken?.symbol}\n              </span>\n            </div>\n            <div class=\"quote-row\">\n              <span class=\"quote-label\">Network Fee</span>\n              <span class=\"quote-value\">{this.currentQuote.gasEstimate} ETH</span>\n            </div>\n          </div>\n        )}\n\n        {/* Swap Button */}\n        <euclid-button\n          variant=\"primary\"\n          size=\"lg\"\n          full-width={true}\n          loading={this.loading}\n          disabled={!this.canSwap()}\n          onClick={this.handleSwap}\n        >\n          {this.getSwapButtonText()}\n        </euclid-button>\n      </div>\n    );\n  }\n}\n"],"version":3}