{"file":"p-CVna4uH4.js","mappings":"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","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/features/euclid-pools-list/pool-item.css?tag=pool-item&encapsulation=shadow","src/components/features/euclid-pools-list/pool-item.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n\n.pool-item {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  padding: 20px;\n  background: var(--euclid-surface);\n  border: 1px solid var(--euclid-border);\n  border-radius: var(--euclid-radius-xl);\n  transition: all 0.2s ease;\n}\n\n.pool-item:hover {\n  border-color: var(--euclid-border-hover);\n  box-shadow: var(--euclid-shadow-md);\n}\n\n.pool-main {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  gap: 20px;\n}\n\n.pool-tokens {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  min-width: 0;\n}\n\n.token-logos {\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 48px;\n  height: 32px;\n}\n\n.token-logo {\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  border: 2px solid var(--euclid-border, #e5e7eb);\n  background: linear-gradient(135deg, var(--euclid-surface) 0%, var(--euclid-surface-secondary, #f9fafb) 100%);\n  box-shadow: var(--euclid-shadow-sm);\n  color: var(--euclid-text-secondary, #6b7280); /* Color for SVG currentColor to inherit */\n  /* Add contrast for white logos */\n  backdrop-filter: brightness(0.95);\n}\n\n.token-logo-overlap {\n  margin-left: -12px;\n}\n\n/* Special handling for light/white token logos */\n.token-logo.light-logo {\n  background: linear-gradient(135deg, #1f2937 0%, #374151 100%);\n  border-color: var(--euclid-border-hover, #d1d5db);\n}\n\n/* Dark mode adjustments */\n@media (prefers-color-scheme: dark) {\n  .token-logo {\n    background: linear-gradient(135deg, var(--euclid-surface-secondary, #1f2937) 0%, var(--euclid-surface, #111827) 100%);\n    border-color: var(--euclid-border, #374151);\n  }\n\n  .token-logo.light-logo {\n    background: linear-gradient(135deg, #f9fafb 0%, #e5e7eb 100%);\n    border-color: var(--euclid-border, #d1d5db);\n  }\n}\n\n.pool-details {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  min-width: 0;\n}\n\n.pool-name {\n  font-weight: 600;\n  font-size: 16px;\n  color: var(--euclid-text-primary);\n}\n\n.pool-fee {\n  font-size: 14px;\n  color: var(--euclid-text-secondary);\n}\n\n.pool-metrics {\n  display: flex;\n  gap: 24px;\n  align-items: center;\n}\n\n.metric {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  gap: 4px;\n  min-width: 0;\n}\n\n.metric-label {\n  font-size: 12px;\n  color: var(--euclid-text-secondary);\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  font-weight: 500;\n}\n\n.metric-value {\n  font-weight: 600;\n  font-size: 14px;\n  color: var(--euclid-text-primary);\n  white-space: nowrap;\n}\n\n.metric-value.apy {\n  color: var(--euclid-success-color, #10b981);\n  font-size: 16px;\n}\n\n.pool-position {\n  padding: 16px;\n  background: var(--euclid-surface-secondary);\n  border-radius: var(--euclid-radius-lg);\n  border: 1px solid var(--euclid-border);\n}\n\n.position-details {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n}\n\n.position-value {\n  font-weight: 600;\n  color: var(--euclid-text-primary);\n  font-size: 16px;\n}\n\n.position-share {\n  font-size: 14px;\n  color: var(--euclid-text-secondary);\n}\n\n.unclaimed-rewards {\n  font-size: 14px;\n  color: var(--euclid-warning-color, #f59e0b);\n  font-weight: 500;\n}\n\n.pool-actions {\n  display: flex;\n  gap: 12px;\n  align-items: center;\n  flex-wrap: wrap;\n}\n\n/* Responsive */\n@media (max-width: 768px) {\n  .pool-main {\n    flex-direction: column;\n    gap: 16px;\n  }\n\n  .pool-metrics {\n    grid-template-columns: repeat(2, 1fr);\n    gap: 16px;\n    width: 100%;\n  }\n\n  .metric {\n    align-items: flex-start;\n  }\n\n  .pool-actions {\n    width: 100%;\n  }\n\n  .pool-actions euclid-button {\n    flex: 1;\n  }\n}\n\n@media (max-width: 480px) {\n  .pool-item {\n    padding: 16px;\n    gap: 12px;\n  }\n\n  .pool-metrics {\n    grid-template-columns: 1fr;\n    gap: 12px;\n  }\n\n  .pool-actions {\n    flex-direction: column;\n    gap: 8px;\n  }\n}\n","import { Component, Prop, h, Event, EventEmitter } from '@stencil/core';\nimport type { PoolInfo, TokenMetadata } from '../../../utils/types/api.types';\n\nexport interface UserPoolPosition {\n  poolId: string;\n  poolAddress: string;\n  lpTokenBalance: string;\n  shareOfPool: number;\n  tokenAAmount: string;\n  tokenBAmount: string;\n  value: number;\n  unclaimedRewards?: number;\n  stakingRewards?: number;\n}\n\n@Component({\n  tag: 'pool-item',\n  styleUrl: 'pool-item.css',\n  shadow: true,\n})\nexport class PoolItem {\n  @Prop() pool!: PoolInfo;\n  @Prop() tokens: TokenMetadata[] = [];\n  @Prop() position?: UserPoolPosition;\n  @Prop() walletAddress?: string;\n\n  @Event() addLiquidity: EventEmitter<PoolInfo>;\n  @Event() removeLiquidity: EventEmitter<{ pool: PoolInfo; position: UserPoolPosition }>;\n  @Event() stakeTokens: EventEmitter<{ pool: PoolInfo; position?: UserPoolPosition }>;\n  @Event() claimRewards: EventEmitter<{ pool: PoolInfo; position: UserPoolPosition }>;\n\n  private getTokenMetadata(tokenId: string): TokenMetadata | null {\n    return this.tokens.find(token => token.tokenId === tokenId) || null;\n  }\n\n  private formatNumber(value: number, decimals: number = 2): string {\n    if (value >= 1e9) return `${(value / 1e9).toFixed(decimals)}B`;\n    if (value >= 1e6) return `${(value / 1e6).toFixed(decimals)}M`;\n    if (value >= 1e3) return `${(value / 1e3).toFixed(decimals)}K`;\n    return value.toFixed(decimals);\n  }\n\n  private formatAPR(aprString: string): string {\n    // Remove % if present and parse as float\n    const aprValue = parseFloat(aprString.replace('%', '') || '0');\n    // Format to 3 decimal places and add % back\n    return `${aprValue.toFixed(3)}%`;\n  }\n\n  render() {\n    const token1Meta = this.getTokenMetadata(this.pool.token_1);\n    const token2Meta = this.getTokenMetadata(this.pool.token_2);\n    const token1Name = token1Meta?.displayName || this.pool.token_1.toUpperCase();\n    const token2Name = token2Meta?.displayName || this.pool.token_2.toUpperCase();\n\n    // Debug: Log raw API values\n    console.log('🔍 Raw pool data:', {\n      pool_id: this.pool.pool_id,\n      token_1: this.pool.token_1,\n      token_2: this.pool.token_2,\n      total_liquidity_raw: this.pool.total_liquidity,\n      volume_24h_raw: this.pool.volume_24h,\n      fees_24h_raw: this.pool.fees_24h,\n      apr_raw: this.pool.apr,\n      formatted_apr: parseFloat(this.pool.apr || '0').toFixed(2),\n      formatted_tvl: this.formatNumber(parseFloat(this.pool.total_liquidity || '0'))\n    });\n\n    return (\n      <div class=\"pool-item\">\n        <div class=\"pool-main\">\n          <div class=\"pool-tokens\">\n            <div class=\"token-logos\">\n              <img\n                src={token1Meta?.image || '/assets/default-token.svg'}\n                alt={token1Name}\n                class={`token-logo ${token1Name.toLowerCase().includes('euclid') ? 'light-logo' : ''}`.trim()}\n                onError={(e) => (e.target as HTMLImageElement).src = '/assets/default-token.svg'}\n              />\n              <img\n                src={token2Meta?.image || '/assets/default-token.svg'}\n                alt={token2Name}\n                class={`token-logo token-logo-overlap ${token2Name.toLowerCase().includes('euclid') ? 'light-logo' : ''}`.trim()}\n                onError={(e) => (e.target as HTMLImageElement).src = '/assets/default-token.svg'}\n              />\n            </div>\n            <div class=\"pool-details\">\n              <div class=\"pool-name\">{token1Name}/{token2Name}</div>\n              <div class=\"pool-fee\">0.3% Fee</div>\n            </div>\n          </div>\n\n          <div class=\"pool-metrics\">\n            <div class=\"metric\">\n              <div class=\"metric-label\">APR</div>\n              <div class=\"metric-value apy\">{this.formatAPR(this.pool.apr || '0')}</div>\n            </div>\n            <div class=\"metric\">\n              <div class=\"metric-label\">TVL</div>\n              <div class=\"metric-value\">${this.formatNumber(parseFloat(this.pool.total_liquidity || '0'))}</div>\n            </div>\n            <div class=\"metric\">\n              <div class=\"metric-label\">24h Volume</div>\n              <div class=\"metric-value\">${this.formatNumber(parseFloat(this.pool.volume_24h || '0'))}</div>\n            </div>\n            <div class=\"metric\">\n              <div class=\"metric-label\">24h Fees</div>\n              <div class=\"metric-value\">${this.formatNumber(parseFloat(this.pool.fees_24h || '0'))}</div>\n            </div>\n          </div>\n        </div>\n\n        {this.walletAddress && this.position && (\n          <div class=\"pool-position\">\n            <div class=\"position-details\">\n              <div class=\"position-value\">${this.formatNumber(this.position.value)}</div>\n              <div class=\"position-share\">{this.position.shareOfPool.toFixed(4)}% of pool</div>\n              {this.position.unclaimedRewards && this.position.unclaimedRewards > 0 && (\n                <div class=\"unclaimed-rewards\">\n                  ${this.formatNumber(this.position.unclaimedRewards)} rewards\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n\n        <div class=\"pool-actions\">\n          <euclid-button\n            variant=\"primary\"\n            size=\"sm\"\n            onClick={() => this.addLiquidity.emit(this.pool)}\n          >\n            Add Liquidity\n          </euclid-button>\n\n          {this.position && (\n            <euclid-button\n              variant=\"secondary\"\n              size=\"sm\"\n              onClick={() => this.removeLiquidity.emit({ pool: this.pool, position: this.position! })}\n            >\n              Remove\n            </euclid-button>\n          )}\n\n          {this.position && this.position.unclaimedRewards && this.position.unclaimedRewards > 0 && (\n            <euclid-button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => this.claimRewards.emit({ pool: this.pool, position: this.position! })}\n            >\n              Claim Rewards\n            </euclid-button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n"],"version":3}