{"version":3,"file":"pool-item.js","sourceRoot":"","sources":["../../../../src/components/features/euclid-pools-list/pool-item.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Prop, h, Event, EventEmitter } from '@stencil/core';\nimport type { PoolInfo, TokenMetadata } from '../../../utils/types/api.types';\n\nexport interface UserPoolPosition {\n  poolId: string;\n  poolAddress: string;\n  lpTokenBalance: string;\n  shareOfPool: number;\n  tokenAAmount: string;\n  tokenBAmount: string;\n  value: number;\n  unclaimedRewards?: number;\n  stakingRewards?: number;\n}\n\n@Component({\n  tag: 'pool-item',\n  styleUrl: 'pool-item.css',\n  shadow: true,\n})\nexport class PoolItem {\n  @Prop() pool!: PoolInfo;\n  @Prop() tokens: TokenMetadata[] = [];\n  @Prop() position?: UserPoolPosition;\n  @Prop() walletAddress?: string;\n\n  @Event() addLiquidity: EventEmitter<PoolInfo>;\n  @Event() removeLiquidity: EventEmitter<{ pool: PoolInfo; position: UserPoolPosition }>;\n  @Event() stakeTokens: EventEmitter<{ pool: PoolInfo; position?: UserPoolPosition }>;\n  @Event() claimRewards: EventEmitter<{ pool: PoolInfo; position: UserPoolPosition }>;\n\n  private getTokenMetadata(tokenId: string): TokenMetadata | null {\n    return this.tokens.find(token => token.tokenId === tokenId) || null;\n  }\n\n  private formatNumber(value: number, decimals: number = 2): string {\n    if (value >= 1e9) return `${(value / 1e9).toFixed(decimals)}B`;\n    if (value >= 1e6) return `${(value / 1e6).toFixed(decimals)}M`;\n    if (value >= 1e3) return `${(value / 1e3).toFixed(decimals)}K`;\n    return value.toFixed(decimals);\n  }\n\n  private formatAPR(aprString: string): string {\n    // Remove % if present and parse as float\n    const aprValue = parseFloat(aprString.replace('%', '') || '0');\n    // Format to 3 decimal places and add % back\n    return `${aprValue.toFixed(3)}%`;\n  }\n\n  render() {\n    const token1Meta = this.getTokenMetadata(this.pool.token_1);\n    const token2Meta = this.getTokenMetadata(this.pool.token_2);\n    const token1Name = token1Meta?.displayName || this.pool.token_1.toUpperCase();\n    const token2Name = token2Meta?.displayName || this.pool.token_2.toUpperCase();\n\n    // Debug: Log raw API values\n    console.log('üîç Raw pool data:', {\n      pool_id: this.pool.pool_id,\n      token_1: this.pool.token_1,\n      token_2: this.pool.token_2,\n      total_liquidity_raw: this.pool.total_liquidity,\n      volume_24h_raw: this.pool.volume_24h,\n      fees_24h_raw: this.pool.fees_24h,\n      apr_raw: this.pool.apr,\n      formatted_apr: parseFloat(this.pool.apr || '0').toFixed(2),\n      formatted_tvl: this.formatNumber(parseFloat(this.pool.total_liquidity || '0'))\n    });\n\n    return (\n      <div class=\"pool-item\">\n        <div class=\"pool-main\">\n          <div class=\"pool-tokens\">\n            <div class=\"token-logos\">\n              <img\n                src={token1Meta?.image || '/assets/default-token.svg'}\n                alt={token1Name}\n                class={`token-logo ${token1Name.toLowerCase().includes('euclid') ? 'light-logo' : ''}`.trim()}\n                onError={(e) => (e.target as HTMLImageElement).src = '/assets/default-token.svg'}\n              />\n              <img\n                src={token2Meta?.image || '/assets/default-token.svg'}\n                alt={token2Name}\n                class={`token-logo token-logo-overlap ${token2Name.toLowerCase().includes('euclid') ? 'light-logo' : ''}`.trim()}\n                onError={(e) => (e.target as HTMLImageElement).src = '/assets/default-token.svg'}\n              />\n            </div>\n            <div class=\"pool-details\">\n              <div class=\"pool-name\">{token1Name}/{token2Name}</div>\n              <div class=\"pool-fee\">0.3% Fee</div>\n            </div>\n          </div>\n\n          <div class=\"pool-metrics\">\n            <div class=\"metric\">\n              <div class=\"metric-label\">APR</div>\n              <div class=\"metric-value apy\">{this.formatAPR(this.pool.apr || '0')}</div>\n            </div>\n            <div class=\"metric\">\n              <div class=\"metric-label\">TVL</div>\n              <div class=\"metric-value\">${this.formatNumber(parseFloat(this.pool.total_liquidity || '0'))}</div>\n            </div>\n            <div class=\"metric\">\n              <div class=\"metric-label\">24h Volume</div>\n              <div class=\"metric-value\">${this.formatNumber(parseFloat(this.pool.volume_24h || '0'))}</div>\n            </div>\n            <div class=\"metric\">\n              <div class=\"metric-label\">24h Fees</div>\n              <div class=\"metric-value\">${this.formatNumber(parseFloat(this.pool.fees_24h || '0'))}</div>\n            </div>\n          </div>\n        </div>\n\n        {this.walletAddress && this.position && (\n          <div class=\"pool-position\">\n            <div class=\"position-details\">\n              <div class=\"position-value\">${this.formatNumber(this.position.value)}</div>\n              <div class=\"position-share\">{this.position.shareOfPool.toFixed(4)}% of pool</div>\n              {this.position.unclaimedRewards && this.position.unclaimedRewards > 0 && (\n                <div class=\"unclaimed-rewards\">\n                  ${this.formatNumber(this.position.unclaimedRewards)} rewards\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n\n        <div class=\"pool-actions\">\n          <euclid-button\n            variant=\"primary\"\n            size=\"sm\"\n            onClick={() => this.addLiquidity.emit(this.pool)}\n          >\n            Add Liquidity\n          </euclid-button>\n\n          {this.position && (\n            <euclid-button\n              variant=\"secondary\"\n              size=\"sm\"\n              onClick={() => this.removeLiquidity.emit({ pool: this.pool, position: this.position! })}\n            >\n              Remove\n            </euclid-button>\n          )}\n\n          {this.position && this.position.unclaimedRewards && this.position.unclaimedRewards > 0 && (\n            <euclid-button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => this.claimRewards.emit({ pool: this.pool, position: this.position! })}\n            >\n              Claim Rewards\n            </euclid-button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n"]}