import{D as n}from"./p-8CHUc0Tf.js";import"./p-DWrf3bWA.js";import"./p-uEsOKkhe.js";async function t(t,r,a){const c={...n,...a};const o=new AbortController;const e=setTimeout((()=>o.abort()),c.apiTimeout);try{const n=await fetch(c.graphqlEndpoint,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({query:t,variables:r}),signal:o.signal});clearTimeout(e);if(!n.ok){throw new Error(`HTTP ${n.status}: ${n.statusText}`)}const a=await n.json();if(a.errors){throw new Error(`GraphQL errors: ${a.errors.map((n=>n.message)).join(", ")}`)}return a.data}catch(n){clearTimeout(e);const t=n instanceof Error?n.message:"Unknown error";throw new Error(`CW query failed: ${t}`)}}async function r(n,r){const a=`\n    query Contract_info($chainUid: String!, $contractAddress: String!) {\n      cw(chain_uid: $chainUid, contract_address: $contractAddress) {\n        contract_info {\n          contract_address\n          code_id\n          creator\n          admin\n          label\n          created_at\n          init_msg\n          contract_type\n          instantiated_by\n          last_updated\n        }\n      }\n    }\n  `;const c=await t(a,{chainUid:n,contractAddress:r});return c.cw.contract_info}async function a(n,r,a){const c=`\n    query Contract_state($chainUid: String!, $contractAddress: String!, $queryMsg: JSON) {\n      cw(chain_uid: $chainUid, contract_address: $contractAddress) {\n        contract_state(query_msg: $queryMsg) {\n          state_data\n          last_updated\n          block_height\n          query_result\n        }\n      }\n    }\n  `;const o=await t(c,{chainUid:n,contractAddress:r,queryMsg:a});return o.cw.contract_state}export{r as getContractInfoImpl,a as getContractStateImpl};
//# sourceMappingURL=p-B3L0_MS9.js.map