{"version":3,"file":"app.store.js","sourceRoot":"","sources":["../../src/store/app.store.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAY7C,MAAM,YAAY,GAAa;IAC7B,eAAe,EAAE,KAAK;IACtB,iBAAiB,EAAE,IAAI;IACvB,cAAc,EAAE,KAAK;IACrB,iBAAiB,EAAE,IAAI;IACvB,aAAa,EAAE,KAAK;IACpB,KAAK,EAAE,MAAM;CACd,CAAC;AAEF,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,WAAW,CAAC,YAAY,CAAC,CAAC;AAEtE,UAAU;AACV,MAAM,OAAO,GAAG;IACd,UAAU;QACR,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC;IAC7B,CAAC;IAED,eAAe,CAAC,WAAoB;QAClC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC;QAC7B,KAAK,CAAC,iBAAiB,GAAG,WAAW,IAAI,IAAI,CAAC;IAChD,CAAC;IAED,gBAAgB;QACd,KAAK,CAAC,eAAe,GAAG,KAAK,CAAC;QAC9B,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC;IACjC,CAAC;IAED,cAAc,CAAC,eAAmC,OAAO;QACvD,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC;QAC5B,KAAK,CAAC,iBAAiB,GAAG,YAAY,CAAC;IACzC,CAAC;IAED,eAAe;QACb,KAAK,CAAC,cAAc,GAAG,KAAK,CAAC;QAC7B,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC;IACjC,CAAC;IAED,QAAQ,CAAC,KAAwB;QAC/B,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;IACtB,CAAC;IAED,KAAK;QACH,KAAK,EAAE,CAAC;IACV,CAAC;CACF,CAAC;AAaF,MAAM,CAAC,MAAM,QAAQ,GAAa;IAChC,KAAK;IACL,QAAQ;IACR,KAAK;IACL,OAAO;IACP,GAAG,OAAO;CACX,CAAC","sourcesContent":["import { createStore } from '@stencil/store';\nimport type { BaseStore } from './types';\n\nexport interface AppState {\n  walletModalOpen: boolean;\n  walletModalFilter: string | null;\n  tokenModalOpen: boolean;\n  tokenSelectorType: 'input' | 'output' | null;\n  isInitialized: boolean;\n  theme: 'light' | 'dark' | 'auto';\n}\n\nconst initialState: AppState = {\n  walletModalOpen: false,\n  walletModalFilter: null,\n  tokenModalOpen: false,\n  tokenSelectorType: null,\n  isInitialized: false,\n  theme: 'auto',\n};\n\nconst { state, onChange, reset, dispose } = createStore(initialState);\n\n// Actions\nconst actions = {\n  initialize() {\n    state.isInitialized = true;\n  },\n\n  openWalletModal(chainFilter?: string) {\n    state.walletModalOpen = true;\n    state.walletModalFilter = chainFilter || null;\n  },\n\n  closeWalletModal() {\n    state.walletModalOpen = false;\n    state.walletModalFilter = null;\n  },\n\n  openTokenModal(selectorType: 'input' | 'output' = 'input') {\n    state.tokenModalOpen = true;\n    state.tokenSelectorType = selectorType;\n  },\n\n  closeTokenModal() {\n    state.tokenModalOpen = false;\n    state.tokenSelectorType = null;\n  },\n\n  setTheme(theme: AppState['theme']) {\n    state.theme = theme;\n  },\n\n  clear() {\n    reset();\n  },\n};\n\n// Proper store type definition extending BaseStore\nexport interface AppStore extends BaseStore<AppState> {\n  initialize: () => void;\n  openWalletModal: (chainFilter?: string) => void;\n  closeWalletModal: () => void;\n  openTokenModal: (selectorType?: 'input' | 'output') => void;\n  closeTokenModal: () => void;\n  setTheme: (theme: AppState['theme']) => void;\n  clear: () => void;\n}\n\nexport const appStore: AppStore = {\n  state,\n  onChange,\n  reset,\n  dispose,\n  ...actions,\n};\n"]}