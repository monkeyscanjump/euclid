{"version":3,"file":"euclid-wallet-content.js","sourceRoot":"","sources":["../../../../src/components/ui/euclid-wallet-content/euclid-wallet-content.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAgB,MAAM,eAAe,CAAC;AACzE,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AAepD,MAAM,OAAO,mBAAmB;IALhC;QAMmB,oBAAe,GAAqB;YACnD,yDAAyD;YACzD,EAAE,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,WAAW,EAAE,+BAA+B,EAAE;YAC/G,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,WAAW,EAAE,4BAA4B,EAAE;YACtG,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,WAAW,EAAE,8BAA8B,EAAE;YAC7G,EAAE,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,WAAW,EAAE,6BAA6B,EAAE;SACxH,CAAC;QAIM,wBAAmB,GAAG,CAAC,QAAwB,EAAE,EAAE;YACzD,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;gBACxB,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACjC,OAAO;YACT,CAAC;YAED,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAClC,QAAQ,CAAC,gBAAgB,EAAE,CAAC;QAC9B,CAAC,CAAC;KAgDH;IA9CS,cAAc,CAAC,QAAgB;QACrC,MAAM,WAAW,GAA2B;YAC1C,UAAU,EAAE,+BAA+B;YAC3C,OAAO,EAAE,gCAAgC;YACzC,SAAS,EAAE,8BAA8B;YACzC,eAAe,EAAE,4BAA4B;SAC9C,CAAC;QAEF,MAAM,GAAG,GAAG,WAAW,CAAC,QAAQ,CAAC,CAAC;QAClC,IAAI,GAAG,EAAE,CAAC;YACR,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;QAC7B,CAAC;IACH,CAAC;IAED,MAAM;QACJ,OAAO,CACL,4DAAK,KAAK,EAAC,gBAAgB;YACzB,4DAAK,KAAK,EAAC,aAAa,IACrB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,CACpC,cACE,GAAG,EAAE,QAAQ,CAAC,EAAE,EAChB,KAAK,EAAE;oBACL,aAAa,EAAE,IAAI;oBACnB,4BAA4B,EAAE,CAAC,QAAQ,CAAC,SAAS;iBAClD,EACD,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,EACjD,IAAI,EAAC,QAAQ;gBAEb,WAAK,KAAK,EAAC,aAAa;oBACtB,YAAM,KAAK,EAAC,cAAc,IAAE,QAAQ,CAAC,IAAI,CAAQ,CAC7C;gBAEN,WAAK,KAAK,EAAC,aAAa;oBACtB,WAAK,KAAK,EAAC,aAAa,IAAE,QAAQ,CAAC,IAAI,CAAO;oBAC9C,WAAK,KAAK,EAAC,oBAAoB,IAAE,QAAQ,CAAC,WAAW,CAAO;oBAE3D,CAAC,QAAQ,CAAC,SAAS,IAAI,CACtB,YAAM,KAAK,EAAC,eAAe,uBAAwB,CACpD,CACG,CACC,CACV,CAAC,CACE,CACF,CACP,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, h, State, Event, EventEmitter } from '@stencil/core';\nimport { appStore } from '../../../store/app.store';\n\nexport interface WalletProvider {\n  id: string;\n  name: string;\n  icon: string;\n  installed: boolean;\n  description: string;\n}\n\n@Component({\n  tag: 'euclid-wallet-content',\n  styleUrl: 'euclid-wallet-content.css',\n  shadow: true,\n})\nexport class EuclidWalletContent {\n  @State() private walletProviders: WalletProvider[] = [\n    // Mock data - in real app this would come from store/API\n    { id: 'metamask', name: 'MetaMask', icon: 'ü¶ä', installed: true, description: 'Connect using MetaMask wallet' },\n    { id: 'keplr', name: 'Keplr', icon: 'üîó', installed: true, description: 'Connect using Keplr wallet' },\n    { id: 'phantom', name: 'Phantom', icon: 'üëª', installed: false, description: 'Connect using Phantom wallet' },\n    { id: 'walletconnect', name: 'WalletConnect', icon: 'üåê', installed: true, description: 'Connect using WalletConnect' },\n  ];\n\n  @Event() walletConnect!: EventEmitter<WalletProvider>;\n\n  private handleWalletConnect = (provider: WalletProvider) => {\n    if (!provider.installed) {\n      this.openInstallUrl(provider.id);\n      return;\n    }\n\n    this.walletConnect.emit(provider);\n    appStore.closeWalletModal();\n  };\n\n  private openInstallUrl(walletId: string) {\n    const installUrls: Record<string, string> = {\n      'metamask': 'https://metamask.io/download/',\n      'keplr': 'https://www.keplr.app/download',\n      'phantom': 'https://phantom.app/download',\n      'walletconnect': 'https://walletconnect.com/',\n    };\n\n    const url = installUrls[walletId];\n    if (url) {\n      window.open(url, '_blank');\n    }\n  }\n\n  render() {\n    return (\n      <div class=\"wallet-content\">\n        <div class=\"wallet-grid\">\n          {this.walletProviders.map(provider => (\n            <button\n              key={provider.id}\n              class={{\n                'wallet-card': true,\n                'wallet-card--not-installed': !provider.installed\n              }}\n              onClick={() => this.handleWalletConnect(provider)}\n              type=\"button\"\n            >\n              <div class=\"wallet-icon\">\n                <span class=\"wallet-emoji\">{provider.icon}</span>\n              </div>\n\n              <div class=\"wallet-info\">\n                <div class=\"wallet-name\">{provider.name}</div>\n                <div class=\"wallet-description\">{provider.description}</div>\n\n                {!provider.installed && (\n                  <span class=\"install-badge\">Install Required</span>\n                )}\n              </div>\n            </button>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n"]}