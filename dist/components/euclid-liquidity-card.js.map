{"file":"euclid-liquidity-card.js","mappings":"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","names":["EuclidLiquidityCard","__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/features/euclid-liquidity-card/euclid-liquidity-card.css?tag=euclid-liquidity-card&encapsulation=shadow","src/components/features/euclid-liquidity-card/euclid-liquidity-card.tsx"],"sourcesContent":[":host {\n  display: contents;\n}\n\n/* Liquidity Card Container */\n.liquidity-card {\n  background: var(--euclid-surface);\n  border: 1px solid var(--euclid-border);\n  border-radius: var(--euclid-radius-2xl);\n  padding: var(--euclid-spacing-6);\n  max-width: 480px;\n  width: 100%;\n  box-shadow: var(--euclid-shadow-xl);\n  display: flex;\n  flex-direction: column;\n  gap: var(--euclid-spacing-6);\n}\n\n/* Header */\n.liquidity-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.liquidity-title {\n  font-size: var(--euclid-text-size-xl);\n  font-weight: var(--euclid-font-weight-semibold);\n  color: var(--euclid-text-primary);\n  margin: 0;\n}\n\n/* Mode Toggle */\n.mode-toggle {\n  display: flex;\n  background: var(--euclid-surface-secondary);\n  border-radius: var(--euclid-radius-lg);\n  padding: var(--euclid-spacing-1);\n}\n\n.mode-button {\n  padding: var(--euclid-spacing-2) var(--euclid-spacing-4);\n  border: none;\n  background: transparent;\n  color: var(--euclid-text-secondary);\n  font-size: var(--euclid-text-size-sm);\n  font-weight: var(--euclid-font-weight-medium);\n  cursor: pointer;\n  border-radius: var(--euclid-radius-md);\n  transition: all var(--euclid-transition-duration-fast);\n}\n\n.mode-button--active {\n  background: var(--euclid-surface);\n  color: var(--euclid-text-primary);\n  box-shadow: var(--euclid-shadow-sm);\n}\n\n.mode-button:hover:not(.mode-button--active) {\n  color: var(--euclid-text-primary);\n}\n\n/* Pool Section */\n.pool-section {\n  display: flex;\n  flex-direction: column;\n  gap: var(--euclid-spacing-4);\n}\n\n.section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.section-label {\n  font-size: var(--euclid-text-size-sm);\n  font-weight: var(--euclid-font-weight-medium);\n  color: var(--euclid-text-secondary);\n}\n\n.pool-selector {\n  cursor: pointer;\n}\n\n.pool-selector:hover {\n  opacity: 0.8;\n}\n\n.selected-pool {\n  display: flex;\n  align-items: center;\n  gap: var(--euclid-spacing-4);\n  padding: var(--euclid-spacing-4);\n  border: 2px solid var(--euclid-border);\n  border-radius: var(--euclid-radius-xl);\n  background: var(--euclid-surface);\n  transition: all var(--euclid-transition-duration-fast);\n}\n\n.select-pool-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: var(--euclid-spacing-2);\n  padding: var(--euclid-spacing-4) var(--euclid-spacing-6);\n  border: 2px dashed var(--euclid-border);\n  border-radius: var(--euclid-radius-xl);\n  background: var(--euclid-surface-secondary);\n  color: var(--euclid-text-secondary);\n  font-size: var(--euclid-text-size-base);\n  font-weight: var(--euclid-font-weight-medium);\n  cursor: pointer;\n  transition: all var(--euclid-transition-duration-fast);\n}\n\n.select-pool-button:hover {\n  border-color: var(--euclid-border-hover);\n}\n\n.pool-tokens {\n  display: flex;\n  align-items: center;\n}\n\n.token-pair {\n  display: flex;\n  align-items: center;\n}\n\n.token-logo {\n  width: 2rem;\n  height: 2rem;\n  border-radius: 50%;\n  background: var(--euclid-surface-secondary);\n  border: 2px solid var(--euclid-surface);\n}\n\n.token-logo--overlap {\n  margin-left: -0.5rem;\n}\n\n.pool-info {\n  display: flex;\n  flex-direction: column;\n  gap: var(--euclid-spacing-1);\n}\n\n.pool-name {\n  font-size: var(--euclid-text-size-base);\n  font-weight: var(--euclid-font-weight-semibold);\n  color: var(--euclid-text-primary);\n}\n\n.pool-fee {\n  font-size: var(--euclid-text-size-sm);\n  color: var(--euclid-text-secondary);\n}\n\n.pool-stats {\n  display: flex;\n  gap: var(--euclid-spacing-6);\n}\n\n.stat {\n  display: flex;\n  flex-direction: column;\n  gap: var(--euclid-spacing-1);\n}\n\n.stat-label {\n  font-size: var(--euclid-text-size-xs);\n  color: var(--euclid-text-muted);\n}\n\n.stat-value {\n  font-size: var(--euclid-text-size-sm);\n  font-weight: var(--euclid-font-weight-medium);\n  color: var(--euclid-text-primary);\n}\n\n/* Position Info */\n.position-info {\n  padding: var(--euclid-spacing-4);\n  background: var(--euclid-surface-secondary);\n  border-radius: var(--euclid-radius-xl);\n}\n\n.position-header {\n  margin-bottom: var(--euclid-spacing-3);\n}\n\n.position-label {\n  font-size: var(--euclid-text-size-sm);\n  font-weight: var(--euclid-font-weight-medium);\n  color: var(--euclid-text-secondary);\n}\n\n.position-details {\n  display: flex;\n  flex-direction: column;\n  gap: var(--euclid-spacing-3);\n}\n\n.position-row {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.position-item-label {\n  font-size: var(--euclid-text-size-sm);\n  color: var(--euclid-text-secondary);\n}\n\n.position-item-value {\n  font-size: var(--euclid-text-size-sm);\n  font-weight: var(--euclid-font-weight-medium);\n  color: var(--euclid-text-primary);\n}\n\n/* Liquidity Inputs */\n.liquidity-inputs {\n  display: flex;\n  flex-direction: column;\n  gap: var(--euclid-spacing-4);\n}\n\n.token-input-section {\n  position: relative;\n}\n\n.input-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: var(--euclid-spacing-2);\n}\n\n.input-label {\n  font-size: var(--euclid-text-size-sm);\n  color: var(--euclid-text-secondary);\n}\n\n.balance-label {\n  font-size: var(--euclid-text-size-sm);\n  color: var(--euclid-text-muted);\n  cursor: pointer;\n  transition: color var(--euclid-transition-duration-fast);\n}\n\n.balance-label:hover {\n  color: var(--euclid-text-secondary);\n}\n\n/* Plus Icon */\n.plus-icon {\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 10;\n  width: 2rem;\n  height: 2rem;\n  background: var(--euclid-surface);\n  border: 2px solid var(--euclid-border);\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: var(--euclid-text-secondary);\n}\n\n.plus-icon svg {\n  width: 1rem;\n  height: 1rem;\n}\n\n/* Token Selector */\n.token-selector {\n  cursor: pointer;\n}\n\n.token-selector:hover {\n  opacity: 0.8;\n}\n\n.selected-token {\n  display: flex;\n  align-items: center;\n  gap: var(--euclid-spacing-3);\n  padding: var(--euclid-spacing-4);\n  border: 2px solid var(--euclid-border);\n  border-radius: var(--euclid-radius-xl);\n  background: var(--euclid-surface);\n}\n\n.select-token-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: var(--euclid-spacing-2);\n  padding: var(--euclid-spacing-4) var(--euclid-spacing-6);\n  border: 2px dashed var(--euclid-border);\n  border-radius: var(--euclid-radius-xl);\n  background: var(--euclid-surface-secondary);\n  color: var(--euclid-text-secondary);\n  font-size: var(--euclid-text-size-base);\n  font-weight: var(--euclid-font-weight-medium);\n  cursor: pointer;\n  transition: all var(--euclid-transition-duration-fast);\n}\n\n.select-token-button:hover {\n  border-color: var(--euclid-border-hover);\n}\n\n.token-info {\n  display: flex;\n  flex-direction: column;\n  gap: var(--euclid-spacing-1);\n  flex: 1;\n}\n\n.token-symbol {\n  font-size: var(--euclid-text-size-base);\n  font-weight: var(--euclid-font-weight-semibold);\n  color: var(--euclid-text-primary);\n}\n\n.token-name {\n  font-size: var(--euclid-text-size-sm);\n  color: var(--euclid-text-secondary);\n}\n\n.dropdown-arrow {\n  color: var(--euclid-text-muted);\n  transition: transform var(--euclid-transition-duration-fast);\n}\n\n.dropdown-arrow--open {\n  transform: rotate(180deg);\n}\n\n/* Remove Liquidity */\n.remove-liquidity {\n  display: flex;\n  flex-direction: column;\n  gap: var(--euclid-spacing-4);\n}\n\n.percentage-section {\n  display: flex;\n  flex-direction: column;\n  gap: var(--euclid-spacing-3);\n}\n\n.percentage-label {\n  font-size: var(--euclid-text-size-sm);\n  font-weight: var(--euclid-font-weight-medium);\n  color: var(--euclid-text-secondary);\n}\n\n.percentage-buttons {\n  display: flex;\n  gap: var(--euclid-spacing-2);\n}\n\n.percentage-btn {\n  flex: 1;\n  padding: var(--euclid-spacing-3);\n  border: 2px solid var(--euclid-border);\n  border-radius: var(--euclid-radius-lg);\n  background: var(--euclid-surface);\n  color: var(--euclid-text-secondary);\n  font-size: var(--euclid-text-size-sm);\n  font-weight: var(--euclid-font-weight-medium);\n  cursor: pointer;\n  transition: all var(--euclid-transition-duration-fast);\n}\n\n.percentage-btn:hover {\n  border-color: var(--euclid-border-hover);\n  color: var(--euclid-text-primary);\n}\n\n.percentage-btn--active {\n  border-color: var(--euclid-interactive-primary);\n  background: var(--euclid-primary-50);\n  color: var(--euclid-primary-700);\n}\n\n.lp-token-display {\n  display: flex;\n  align-items: center;\n  gap: var(--euclid-spacing-3);\n  padding: var(--euclid-spacing-4);\n  border: 2px solid var(--euclid-border);\n  border-radius: var(--euclid-radius-xl);\n  background: var(--euclid-surface-secondary);\n}\n\n.lp-token-info {\n  display: flex;\n  flex-direction: column;\n  gap: var(--euclid-spacing-1);\n  flex: 1;\n}\n\n.lp-symbol {\n  font-size: var(--euclid-text-size-base);\n  font-weight: var(--euclid-font-weight-semibold);\n  color: var(--euclid-text-primary);\n}\n\n/* Quote Information */\n.quote-info {\n  padding: var(--euclid-spacing-4);\n  background: var(--euclid-surface-secondary);\n  border-radius: var(--euclid-radius-xl);\n}\n\n.quote-row {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: var(--euclid-spacing-2);\n}\n\n.quote-row:last-child {\n  margin-bottom: 0;\n}\n\n.quote-label {\n  font-size: var(--euclid-text-size-sm);\n  color: var(--euclid-text-secondary);\n}\n\n.quote-value {\n  font-size: var(--euclid-text-size-sm);\n  font-weight: var(--euclid-font-weight-medium);\n  color: var(--euclid-text-primary);\n}\n\n.quote-value--warning {\n  color: var(--euclid-warning-600);\n}\n\n.quote-value--danger {\n  color: var(--euclid-danger-600);\n}\n\n/* Advanced Settings */\n.advanced-section {\n  border-top: 1px solid var(--euclid-border);\n  padding-top: var(--euclid-spacing-4);\n}\n\n.advanced-toggle {\n  display: flex;\n  align-items: center;\n  gap: var(--euclid-spacing-2);\n  padding: var(--euclid-spacing-2) 0;\n  background: transparent;\n  border: none;\n  color: var(--euclid-text-secondary);\n  font-size: var(--euclid-text-size-sm);\n  cursor: pointer;\n  transition: color var(--euclid-transition-duration-fast);\n}\n\n.advanced-toggle:hover {\n  color: var(--euclid-text-primary);\n}\n\n.advanced-panel {\n  margin-top: var(--euclid-spacing-4);\n  padding: var(--euclid-spacing-4);\n  background: var(--euclid-surface-secondary);\n  border-radius: var(--euclid-radius-lg);\n}\n\n.setting-item {\n  display: flex;\n  flex-direction: column;\n  gap: var(--euclid-spacing-2);\n}\n\n.setting-label {\n  font-size: var(--euclid-text-size-sm);\n  font-weight: var(--euclid-font-weight-medium);\n  color: var(--euclid-text-secondary);\n}\n\n.slippage-controls {\n  display: flex;\n  gap: var(--euclid-spacing-2);\n  align-items: center;\n}\n\n.slippage-btn {\n  padding: var(--euclid-spacing-2) var(--euclid-spacing-3);\n  border: 2px solid var(--euclid-border);\n  border-radius: var(--euclid-radius-md);\n  background: var(--euclid-surface);\n  color: var(--euclid-text-secondary);\n  font-size: var(--euclid-text-size-sm);\n  cursor: pointer;\n  transition: all var(--euclid-transition-duration-fast);\n}\n\n.slippage-btn:hover {\n  border-color: var(--euclid-border-hover);\n  color: var(--euclid-text-primary);\n}\n\n.slippage-btn--active {\n  border-color: var(--euclid-interactive-primary);\n  background: var(--euclid-primary-50);\n  color: var(--euclid-primary-700);\n}\n\n.slippage-input {\n  padding: var(--euclid-spacing-2) var(--euclid-spacing-3);\n  border: 2px solid var(--euclid-border);\n  border-radius: var(--euclid-radius-md);\n  background: var(--euclid-surface);\n  color: var(--euclid-text-primary);\n  font-size: var(--euclid-text-size-sm);\n  width: 80px;\n  text-align: center;\n}\n\n.slippage-input:focus {\n  outline: none;\n  border-color: var(--euclid-border-focus);\n  box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);\n}\n\n/* Responsive Design */\n@media (max-width: 480px) {\n  .liquidity-card {\n    padding: var(--euclid-spacing-4);\n    gap: var(--euclid-spacing-4);\n  }\n\n  .liquidity-header {\n    flex-direction: column;\n    gap: var(--euclid-spacing-3);\n    align-items: flex-start;\n  }\n\n  .mode-toggle {\n    width: 100%;\n  }\n\n  .mode-button {\n    flex: 1;\n    text-align: center;\n  }\n\n  .pool-stats {\n    flex-direction: column;\n    gap: var(--euclid-spacing-3);\n  }\n\n  .percentage-buttons {\n    flex-wrap: wrap;\n  }\n\n  .percentage-btn {\n    min-width: calc(50% - var(--euclid-spacing-1));\n  }\n\n  .slippage-controls {\n    flex-wrap: wrap;\n    gap: var(--euclid-spacing-2);\n  }\n\n  .selected-pool,\n  .selected-token,\n  .lp-token-display {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: var(--euclid-spacing-2);\n  }\n\n  .pool-tokens {\n    order: -1;\n  }\n\n  .token-pair {\n    gap: var(--euclid-spacing-2);\n  }\n\n  .token-logo--overlap {\n    margin-left: 0;\n  }\n\n  .pool-info,\n  .token-info,\n  .lp-token-info {\n    width: 100%;\n  }\n}\n\n/* Accessibility */\n@media (prefers-reduced-motion: reduce) {\n  .mode-button,\n  .pool-selector,\n  .token-selector,\n  .percentage-btn,\n  .slippage-btn {\n    transition: none;\n  }\n}\n\n/* Focus Styles */\n.token-selector:focus-within,\n.pool-selector:focus-within {\n  outline: 2px solid var(--euclid-border-focus);\n  outline-offset: 2px;\n}\n\n.mode-button:focus {\n  outline: 2px solid var(--euclid-border-focus);\n  outline-offset: 2px;\n}\n\n.percentage-btn:focus,\n.slippage-btn:focus {\n  outline: 2px solid var(--euclid-border-focus);\n  outline-offset: 2px;\n}\n\n/* Loading States */\n.quote-info.loading {\n  position: relative;\n  pointer-events: none;\n}\n\n.quote-info.loading::after {\n  content: '';\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 1.5rem;\n  height: 1.5rem;\n  border: 2px solid var(--euclid-border);\n  border-top: 2px solid var(--euclid-interactive-primary);\n  border-radius: 50%;\n  animation: euclid-spin 1s linear infinite;\n}\n\n/* High Contrast Mode */\n@media (prefers-contrast: high) {\n  .liquidity-card,\n  .selected-pool,\n  .selected-token,\n  .lp-token-display,\n  .position-info,\n  .quote-info,\n  .advanced-panel {\n    border-width: 2px;\n    border-color: var(--euclid-text-primary);\n  }\n\n  .mode-button--active,\n  .percentage-btn--active,\n  .slippage-btn--active {\n    border-color: var(--euclid-text-primary);\n    background: var(--euclid-text-primary);\n    color: var(--euclid-surface);\n  }\n}","import { Component, Prop, h, State, Event, EventEmitter, Listen, Element } from '@stencil/core';\nimport { walletStore } from '../../../store/wallet.store';\nimport { appStore } from '../../../store/app.store';\nimport { liquidityStore } from '../../../store/liquidity.store';\nimport { marketStore } from '../../../store/market.store';\nimport { EUCLID_EVENTS, dispatchEuclidEvent } from '../../../utils/events';\nimport type { PoolInfo, TokenMetadata } from '../../../utils/types/api.types';\n\nexport interface LiquidityToken {\n  symbol: string;\n  name: string;\n  address: string;\n  chainUID: string;\n  decimals: number;\n  logoUrl?: string;\n  balance?: string;\n  price?: number;\n}\n\nexport interface LiquidityPoolInfo {\n  address: string;\n  tokenA: LiquidityToken;\n  tokenB: LiquidityToken;\n  reserveA: string;\n  reserveB: string;\n  totalSupply: string;\n  lpTokenSymbol: string;\n  fee: number; // 0.3 = 0.3%\n  apy: number;\n  tvl: number;\n}\n\nexport interface LiquidityPosition {\n  poolAddress: string;\n  lpTokenBalance: string;\n  shareOfPool: number;\n  tokenAAmount: string;\n  tokenBAmount: string;\n  value: number;\n}\n\nexport interface LiquidityQuote {\n  tokenAAmount: string;\n  tokenBAmount: string;\n  lpTokensReceived: string;\n  shareOfPool: number;\n  priceImpact: number;\n  minimumLpReceived: string;\n}\n\nexport interface RemoveLiquidityQuote {\n  lpTokenAmount: string;\n  tokenAReceived: string;\n  tokenBReceived: string;\n  shareRemoved: number;\n  minimumTokenAReceived: string;\n  minimumTokenBReceived: string;\n}\n\n@Component({\n  tag: 'euclid-liquidity-card',\n  styleUrl: 'euclid-liquidity-card.css',\n  shadow: true,\n})\nexport class EuclidLiquidityCard {\n  @Element() element!: HTMLElement;\n\n  /**\n   * Available tokens for liquidity provision (legacy - use store instead)\n   * @deprecated Use marketStore instead\n   */\n  @Prop() tokens: LiquidityToken[] = [];\n\n  /**\n   * Available pools (legacy - use store instead)\n   * @deprecated Use marketStore instead\n   */\n  @Prop() pools: LiquidityPoolInfo[] = [];\n\n  /**\n   * User's liquidity positions\n   */\n  @Prop() positions: LiquidityPosition[] = [];\n\n  // Store data (automatically synced like pools-list)\n  @State() storePools: PoolInfo[] = [];\n  @State() storeTokens: TokenMetadata[] = [];\n  @State() storeLoading: boolean = false;\n\n  // Selected pool from store data (this is what we actually use)\n  @State() selectedStorePool: PoolInfo | null = null;\n\n  /**\n   * Selected pool for liquidity operations\n   */\n  @Prop({ mutable: true }) selectedPool: LiquidityPoolInfo | null = null;\n\n  /**\n   * Current mode: 'add' or 'remove'\n   */\n  @Prop({ mutable: true }) mode: 'add' | 'remove' = 'add';\n\n  /**\n   * Token A amount input\n   */\n  @Prop({ mutable: true }) tokenAAmount: string = '';\n\n  /**\n   * Token B amount input\n   */\n  @Prop({ mutable: true }) tokenBAmount: string = '';\n\n  /**\n   * LP token amount for removal\n   */\n  @Prop({ mutable: true }) lpTokenAmount: string = '';\n\n  /**\n   * Whether the component is in loading state\n   */\n  @Prop() loading: boolean = false;\n\n  /**\n   * Whether the liquidity functionality is disabled\n   */\n  @Prop() disabled: boolean = false;\n\n  /**\n   * Connected wallet address\n   */\n  @Prop() walletAddress: string = '';\n\n  /**\n   * Default slippage tolerance (0.5 = 0.5%)\n   */\n  @Prop() defaultSlippage: number = 0.5;\n\n  /**\n   * Card title\n   */\n  @Prop() cardTitle: string = 'Manage Liquidity';\n\n  // Internal state\n  @State() isPoolSelectorOpen: boolean = false;\n    // Token selector type removed - no individual token selection needed\n  @State() currentQuote: LiquidityQuote | null = null;\n  @State() removeQuote: RemoveLiquidityQuote | null = null;\n  @State() isQuoting: boolean = false;\n  @State() slippage: number = this.defaultSlippage;\n  @State() isAdvancedOpen: boolean = false;\n  @State() lpPercentage: number = 0;\n\n  // Events\n  @Event() liquidityAdded: EventEmitter<{\n    pool: LiquidityPoolInfo;\n    tokenAAmount: string;\n    tokenBAmount: string;\n    expectedLpTokens: string;\n    slippage: number;\n  }>;\n\n  @Event() liquidityRemoved: EventEmitter<{\n    pool: LiquidityPoolInfo;\n    lpTokenAmount: string;\n    expectedTokenA: string;\n    expectedTokenB: string;\n    slippage: number;\n  }>;\n\n  @Event() poolSelected: EventEmitter<PoolInfo>;\n\n  @Event() quoteRequested: EventEmitter<{\n    pool: PoolInfo;\n    tokenAAmount?: string;\n    tokenBAmount?: string;\n    lpTokenAmount?: string;\n    mode: 'add' | 'remove';\n  }>;\n\n  // Quote update timer\n  private quoteTimer: NodeJS.Timeout | null = null;\n\n  componentWillLoad() {\n    // Connect to market store for automatic data updates\n    this.syncWithStore();\n\n    // Listen for store changes\n    marketStore.onChange('pools', () => {\n      this.syncWithStore();\n    });\n\n    marketStore.onChange('tokens', () => {\n      this.syncWithStore();\n    });\n  }\n\n  componentDidLoad() {\n    // Auto-quote when inputs change\n    this.startQuoteTimer();\n  }\n\n  disconnectedCallback() {\n    if (this.quoteTimer) {\n      clearTimeout(this.quoteTimer);\n    }\n  }\n\n  private syncWithStore() {\n    // Use store data if available, fallback to legacy props\n    this.storePools = marketStore.state.pools.length > 0 ? marketStore.state.pools : [];\n    this.storeTokens = marketStore.state.tokens.length > 0 ? marketStore.state.tokens : [];\n    this.storeLoading = marketStore.state.loading;\n\n    console.log('🔄 Liquidity card store sync:', {\n      storePools: this.storePools.length,\n      storeTokens: this.storeTokens.length,\n      storeLoading: this.storeLoading\n    });\n  }\n\n  @Listen('valueChange')\n  handleInputChange(event: CustomEvent) {\n    const inputId = (event.target as HTMLElement).id;\n\n    if (inputId === 'token-a-input') {\n      this.tokenAAmount = event.detail.value;\n      this.calculateTokenBFromA();\n    } else if (inputId === 'token-b-input') {\n      this.tokenBAmount = event.detail.value;\n      this.calculateTokenAFromB();\n    } else if (inputId === 'lp-token-input') {\n      this.lpTokenAmount = event.detail.value;\n      this.startQuoteTimer();\n    }\n  }\n\n  // Token selection removed - pools determine tokens\n\n  @Listen('modalClose')\n  handleModalClose() {\n    this.isPoolSelectorOpen = false;\n  }\n\n  // findPoolWithToken method removed - pool selection is direct\n\n  private calculateTokenBFromA() {\n    if (!this.selectedPool || !this.tokenAAmount || parseFloat(this.tokenAAmount) <= 0) {\n      this.tokenBAmount = '';\n      return;\n    }\n\n    const pool = this.selectedPool;\n    const reserveA = parseFloat(pool.reserveA);\n    const reserveB = parseFloat(pool.reserveB);\n    const amountA = parseFloat(this.tokenAAmount);\n\n    // Calculate proportional amount for token B\n    const amountB = (amountA * reserveB) / reserveA;\n    this.tokenBAmount = amountB.toFixed(6);\n\n    this.startQuoteTimer();\n  }\n\n  private calculateTokenAFromB() {\n    if (!this.selectedPool || !this.tokenBAmount || parseFloat(this.tokenBAmount) <= 0) {\n      this.tokenAAmount = '';\n      return;\n    }\n\n    const pool = this.selectedPool;\n    const reserveA = parseFloat(pool.reserveA);\n    const reserveB = parseFloat(pool.reserveB);\n    const amountB = parseFloat(this.tokenBAmount);\n\n    // Calculate proportional amount for token A\n    const amountA = (amountB * reserveA) / reserveB;\n    this.tokenAAmount = amountA.toFixed(6);\n\n    this.startQuoteTimer();\n  }\n\n  private startQuoteTimer() {\n    if (this.quoteTimer) {\n      clearTimeout(this.quoteTimer);\n    }\n\n    if (this.shouldRequestQuote()) {\n      this.quoteTimer = setTimeout(() => {\n        this.requestQuote();\n      }, 800);\n    } else {\n      this.currentQuote = null;\n      this.removeQuote = null;\n    }\n  }\n\n  private shouldRequestQuote(): boolean {\n    if (!this.selectedPool) return false;\n\n    if (this.mode === 'add') {\n      return !!(this.tokenAAmount && this.tokenBAmount &&\n                parseFloat(this.tokenAAmount) > 0 && parseFloat(this.tokenBAmount) > 0);\n    } else {\n      return !!(this.lpTokenAmount && parseFloat(this.lpTokenAmount) > 0);\n    }\n  }\n\n  private async requestQuote() {\n    if (!this.selectedPool) return;\n\n    this.isQuoting = true;\n\n    // Convert LiquidityPoolInfo to PoolInfo format for the event\n    const apiPool: PoolInfo = {\n      pool_id: this.selectedPool.address,\n      id: this.selectedPool.address,\n      token_1: this.selectedPool.tokenA.address,\n      token_2: this.selectedPool.tokenB.address,\n      token1: this.selectedPool.tokenA.address, // legacy compatibility\n      token2: this.selectedPool.tokenB.address, // legacy compatibility\n      total_liquidity: this.selectedPool.totalSupply\n    };\n\n    this.quoteRequested.emit({\n      pool: apiPool,\n      tokenAAmount: this.mode === 'add' ? this.tokenAAmount : undefined,\n      tokenBAmount: this.mode === 'add' ? this.tokenBAmount : undefined,\n      lpTokenAmount: this.mode === 'remove' ? this.lpTokenAmount : undefined,\n      mode: this.mode,\n    });\n\n    // Simulate quote response\n    setTimeout(() => {\n      if (this.selectedPool) {\n        if (this.mode === 'add' && this.tokenAAmount && this.tokenBAmount) {\n          const pool = this.selectedPool;\n          const totalSupply = parseFloat(pool.totalSupply);\n          const reserveA = parseFloat(pool.reserveA);\n          const amountA = parseFloat(this.tokenAAmount);\n\n          // Calculate LP tokens to be received\n          const lpTokensReceived = totalSupply > 0\n            ? (amountA / reserveA) * totalSupply\n            : Math.sqrt(parseFloat(this.tokenAAmount) * parseFloat(this.tokenBAmount));\n\n          this.currentQuote = {\n            tokenAAmount: this.tokenAAmount,\n            tokenBAmount: this.tokenBAmount,\n            lpTokensReceived: lpTokensReceived.toFixed(6),\n            shareOfPool: (lpTokensReceived / (totalSupply + lpTokensReceived)) * 100,\n            priceImpact: Math.random() * 0.5, // Mock price impact\n            minimumLpReceived: (lpTokensReceived * (1 - this.slippage / 100)).toFixed(6),\n          };\n        } else if (this.mode === 'remove' && this.lpTokenAmount) {\n          const pool = this.selectedPool;\n          const totalSupply = parseFloat(pool.totalSupply);\n          const lpAmount = parseFloat(this.lpTokenAmount);\n          const shareRemoved = (lpAmount / totalSupply) * 100;\n\n          const tokenAReceived = (lpAmount / totalSupply) * parseFloat(pool.reserveA);\n          const tokenBReceived = (lpAmount / totalSupply) * parseFloat(pool.reserveB);\n\n          this.removeQuote = {\n            lpTokenAmount: this.lpTokenAmount,\n            tokenAReceived: tokenAReceived.toFixed(6),\n            tokenBReceived: tokenBReceived.toFixed(6),\n            shareRemoved,\n            minimumTokenAReceived: (tokenAReceived * (1 - this.slippage / 100)).toFixed(6),\n            minimumTokenBReceived: (tokenBReceived * (1 - this.slippage / 100)).toFixed(6),\n          };\n        }\n      }\n      this.isQuoting = false;\n    }, 1000);\n  }\n\n  private handleModeChange = (newMode: 'add' | 'remove') => {\n    this.mode = newMode;\n    this.resetAmounts();\n    this.currentQuote = null;\n    this.removeQuote = null;\n  };\n\n  private resetAmounts = () => {\n    this.tokenAAmount = '';\n    this.tokenBAmount = '';\n    this.lpTokenAmount = '';\n    this.lpPercentage = 0;\n  };\n\n  // Token selection is not needed - tokens are determined by pool selection\n\n  private openPoolSelector = () => {\n    this.isPoolSelectorOpen = true;\n  };\n\n  // Legacy selectPool method removed - use selectStorePool instead\n\n  private selectStorePool = (pool: PoolInfo) => {\n    // Store the selected pool directly - no conversion needed!\n    this.selectedStorePool = pool;\n    this.isPoolSelectorOpen = false;\n    this.resetAmounts();\n\n    // Emit the pool selection event with actual store data\n    this.poolSelected.emit(pool);\n\n    console.log('🎯 Pool selected:', {\n      poolId: pool.pool_id,\n      token1: pool.token_1,\n      token2: pool.token_2,\n      totalLiquidity: pool.total_liquidity,\n      apr: pool.apr\n    });\n  };\n\n  private handleMaxClick = (type: 'tokenA' | 'tokenB' | 'lp') => {\n    if (type === 'tokenA' && this.selectedPool?.tokenA.balance) {\n      this.tokenAAmount = this.selectedPool.tokenA.balance;\n      this.calculateTokenBFromA();\n    } else if (type === 'tokenB' && this.selectedPool?.tokenB.balance) {\n      this.tokenBAmount = this.selectedPool.tokenB.balance;\n      this.calculateTokenAFromB();\n    } else if (type === 'lp') {\n      const position = this.getUserPosition();\n      if (position) {\n        this.lpTokenAmount = position.lpTokenBalance;\n        this.startQuoteTimer();\n      }\n    }\n  };\n\n  private handlePercentageClick = (percentage: number) => {\n    this.lpPercentage = percentage;\n    const position = this.getUserPosition();\n    if (position) {\n      const amount = (parseFloat(position.lpTokenBalance) * percentage / 100).toFixed(6);\n      this.lpTokenAmount = amount;\n      this.startQuoteTimer();\n    }\n  };\n\n  private getUserPosition(): LiquidityPosition | null {\n    if (!this.selectedPool) return null;\n    return this.positions.find(pos => pos.poolAddress === this.selectedPool!.address) || null;\n  }\n\n  private handleLiquidity = () => {\n    // Check if we need to connect wallets first\n    if (!this.isWalletConnectedForLiquidity()) {\n      // Determine which chain to connect to\n      const chainUID = this.getFirstDisconnectedChain();\n      appStore.openWalletModal(chainUID);\n      return;\n    }\n\n    if (!this.selectedPool) return;\n\n    // Update liquidity store - convert to api.types.PoolInfo format\n    const apiPool: PoolInfo = {\n      pool_id: this.selectedPool.address,\n      id: this.selectedPool.address,\n      token_1: this.selectedPool.tokenA.address,\n      token_2: this.selectedPool.tokenB.address,\n      token1: this.selectedPool.tokenA.address, // legacy compatibility\n      token2: this.selectedPool.tokenB.address, // legacy compatibility\n      total_liquidity: this.selectedPool.totalSupply\n    };\n\n    liquidityStore.setSelectedPool(apiPool);\n\n    if (this.mode === 'add' && this.currentQuote) {\n      // Set liquidity store values\n      liquidityStore.setToken1Amount(this.tokenAAmount);\n      liquidityStore.setToken2Amount(this.tokenBAmount);\n\n      // Trigger add liquidity execution\n      dispatchEuclidEvent(EUCLID_EVENTS.LIQUIDITY.ADD_REQUEST);\n\n      // Emit legacy event for backward compatibility\n      this.liquidityAdded.emit({\n        pool: this.selectedPool,\n        tokenAAmount: this.tokenAAmount,\n        tokenBAmount: this.tokenBAmount,\n        expectedLpTokens: this.currentQuote.lpTokensReceived,\n        slippage: this.slippage,\n      });\n    } else if (this.mode === 'remove' && this.removeQuote) {\n      // Trigger remove liquidity execution\n      dispatchEuclidEvent(EUCLID_EVENTS.LIQUIDITY.REMOVE_REQUEST, {\n        poolId: this.selectedPool.address,\n        lpTokenAmount: this.lpTokenAmount,\n      });\n\n      // Emit legacy event for backward compatibility\n      this.liquidityRemoved.emit({\n        pool: this.selectedPool,\n        lpTokenAmount: this.lpTokenAmount,\n        expectedTokenA: this.removeQuote.tokenAReceived,\n        expectedTokenB: this.removeQuote.tokenBReceived,\n        slippage: this.slippage,\n      });\n    }\n  };\n\n  private getFirstDisconnectedChain(): string {\n    if (!this.selectedPool) return 'ethereum';\n\n    const tokenAConnected = walletStore.isWalletConnected(this.selectedPool.tokenA.chainUID);\n    if (!tokenAConnected) return this.selectedPool.tokenA.chainUID;\n\n    return this.selectedPool.tokenB.chainUID;\n  }\n\n  private canExecute(): boolean {\n    if (!this.selectedPool || !this.walletAddress || this.loading || this.disabled || this.isQuoting) {\n      return false;\n    }\n\n    if (this.mode === 'add') {\n      return !!(this.currentQuote && this.tokenAAmount && this.tokenBAmount);\n    } else {\n      return !!(this.removeQuote && this.lpTokenAmount);\n    }\n  }\n\n  private getButtonText(): string {\n    // Check wallet connection for required chains\n    if (!this.isWalletConnectedForLiquidity()) {\n      const chainName = this.getRequiredChainName();\n      return `Connect ${chainName}`;\n    }\n\n    if (!this.selectedPool) return 'Select Pool';\n\n    if (this.mode === 'add') {\n      if (!this.tokenAAmount || !this.tokenBAmount) return 'Enter Amounts';\n      if (this.isQuoting) return 'Getting Quote...';\n      if (this.loading) return 'Adding Liquidity...';\n      return 'Add Liquidity';\n    } else {\n      if (!this.lpTokenAmount) return 'Enter LP Amount';\n      if (this.isQuoting) return 'Getting Quote...';\n      if (this.loading) return 'Removing Liquidity...';\n      return 'Remove Liquidity';\n    }\n  }\n\n  private isWalletConnectedForLiquidity(): boolean {\n    if (!this.selectedPool) return false;\n\n    // For liquidity operations, we need wallets connected for both token chains\n    const tokenAConnected = walletStore.isWalletConnected(this.selectedPool.tokenA.chainUID);\n    const tokenBConnected = walletStore.isWalletConnected(this.selectedPool.tokenB.chainUID);\n\n    return tokenAConnected && tokenBConnected;\n  }\n\n  private getRequiredChainName(): string {\n    if (!this.selectedPool) return 'Wallet';\n\n    // Check which chains need connection\n    const tokenAConnected = walletStore.isWalletConnected(this.selectedPool.tokenA.chainUID);\n    const tokenBConnected = walletStore.isWalletConnected(this.selectedPool.tokenB.chainUID);\n\n    if (!tokenAConnected && !tokenBConnected) {\n      return 'Wallets';\n    } else if (!tokenAConnected) {\n      return this.getChainDisplayName(this.selectedPool.tokenA.chainUID);\n    } else if (!tokenBConnected) {\n      return this.getChainDisplayName(this.selectedPool.tokenB.chainUID);\n    }\n\n    return 'Wallet';\n  }\n\n  private getChainDisplayName(chainUID: string): string {\n    // Simple mapping - in production this would come from chain config\n    const chainNames = {\n      'ethereum': 'Ethereum',\n      'polygon': 'Polygon',\n      'arbitrum': 'Arbitrum',\n      'optimism': 'Optimism',\n      'cosmoshub-4': 'Cosmos Hub',\n      'osmosis-1': 'Osmosis',\n    };\n    return chainNames[chainUID] || 'Wallet';\n  }\n\n  render() {\n    const position = this.getUserPosition();\n\n    return (\n      <div class=\"liquidity-card\">\n        {/* Header */}\n        <div class=\"liquidity-header\">\n          <h3 class=\"liquidity-title\">{this.cardTitle}</h3>\n          <div class=\"mode-toggle\">\n            <button\n              class={{\n                'mode-button': true,\n                'mode-button--active': this.mode === 'add',\n              }}\n              onClick={() => this.handleModeChange('add')}\n              type=\"button\"\n            >\n              Add\n            </button>\n            <button\n              class={{\n                'mode-button': true,\n                'mode-button--active': this.mode === 'remove',\n              }}\n              onClick={() => this.handleModeChange('remove')}\n              type=\"button\"\n            >\n              Remove\n            </button>\n          </div>\n        </div>\n\n        {/* Pool Selection */}\n        <div class=\"pool-section\">\n          <div class=\"section-header\">\n            <span class=\"section-label\">Pool</span>\n          </div>\n\n          <div class=\"pool-selector\" onClick={this.openPoolSelector}>\n            {this.selectedStorePool ? (\n              <div class=\"selected-pool\">\n                <div class=\"pool-tokens\">\n                  <div class=\"token-pair\">\n                    {/* Token logos would come from storeTokens metadata */}\n                  </div>\n                  <div class=\"pool-info\">\n                    <span class=\"pool-name\">\n                      {this.selectedStorePool.token_1.toUpperCase()}/{this.selectedStorePool.token_2.toUpperCase()}\n                    </span>\n                    <span class=\"pool-fee\">Pool Fee</span>\n                  </div>\n                </div>\n                <div class=\"pool-stats\">\n                  <div class=\"stat\">\n                    <span class=\"stat-label\">APR</span>\n                    <span class=\"stat-value\">{this.selectedStorePool.apr || 'N/A'}</span>\n                  </div>\n                  <div class=\"stat\">\n                    <span class=\"stat-label\">TVL</span>\n                    <span class=\"stat-value\">${parseFloat(this.selectedStorePool.total_liquidity || '0').toLocaleString()}</span>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div class=\"select-pool-button\">\n                <span>Select Pool</span>\n                <svg class=\"dropdown-arrow\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                  <path d=\"M7 10l5 5 5-5z\"/>\n                </svg>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Position Info (only show in remove mode) */}\n        {this.mode === 'remove' && position && (\n          <div class=\"position-info\">\n            <div class=\"position-header\">\n              <span class=\"position-label\">Your Position</span>\n            </div>\n            <div class=\"position-details\">\n              <div class=\"position-row\">\n                <span class=\"position-item-label\">LP Tokens</span>\n                <span class=\"position-item-value\">{parseFloat(position.lpTokenBalance).toLocaleString()}</span>\n              </div>\n              <div class=\"position-row\">\n                <span class=\"position-item-label\">Pool Share</span>\n                <span class=\"position-item-value\">{position.shareOfPool.toFixed(4)}%</span>\n              </div>\n              <div class=\"position-row\">\n                <span class=\"position-item-label\">{this.selectedPool?.tokenA.symbol}</span>\n                <span class=\"position-item-value\">{parseFloat(position.tokenAAmount).toLocaleString()}</span>\n              </div>\n              <div class=\"position-row\">\n                <span class=\"position-item-label\">{this.selectedPool?.tokenB.symbol}</span>\n                <span class=\"position-item-value\">{parseFloat(position.tokenBAmount).toLocaleString()}</span>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {this.mode === 'add' ? this.renderAddLiquidity() : this.renderRemoveLiquidity()}\n\n        {/* Quote Information */}\n        {(this.currentQuote || this.removeQuote) && (\n          <div class=\"quote-info\">\n            {this.mode === 'add' && this.currentQuote ? (\n              <div>\n                <div class=\"quote-row\">\n                  <span class=\"quote-label\">LP Tokens Received</span>\n                  <span class=\"quote-value\">{parseFloat(this.currentQuote.lpTokensReceived).toLocaleString()}</span>\n                </div>\n                <div class=\"quote-row\">\n                  <span class=\"quote-label\">Pool Share</span>\n                  <span class=\"quote-value\">{this.currentQuote.shareOfPool.toFixed(4)}%</span>\n                </div>\n                {this.currentQuote.priceImpact > 0.1 && (\n                  <div class=\"quote-row\">\n                    <span class=\"quote-label\">Price Impact</span>\n                    <span class={{\n                      'quote-value': true,\n                      'quote-value--warning': this.currentQuote.priceImpact > 1,\n                      'quote-value--danger': this.currentQuote.priceImpact > 3,\n                    }}>\n                      {this.currentQuote.priceImpact.toFixed(3)}%\n                    </span>\n                  </div>\n                )}\n              </div>\n            ) : this.mode === 'remove' && this.removeQuote ? (\n              <div>\n                <div class=\"quote-row\">\n                  <span class=\"quote-label\">Pool Share Removed</span>\n                  <span class=\"quote-value\">{this.removeQuote.shareRemoved.toFixed(4)}%</span>\n                </div>\n                <div class=\"quote-row\">\n                  <span class=\"quote-label\">{this.selectedPool?.tokenA.symbol} Received</span>\n                  <span class=\"quote-value\">{parseFloat(this.removeQuote.tokenAReceived).toLocaleString()}</span>\n                </div>\n                <div class=\"quote-row\">\n                  <span class=\"quote-label\">{this.selectedPool?.tokenB.symbol} Received</span>\n                  <span class=\"quote-value\">{parseFloat(this.removeQuote.tokenBReceived).toLocaleString()}</span>\n                </div>\n              </div>\n            ) : null}\n          </div>\n        )}\n\n        {/* Advanced Settings */}\n        <div class=\"advanced-section\">\n          <button\n            class=\"advanced-toggle\"\n            onClick={() => this.isAdvancedOpen = !this.isAdvancedOpen}\n            type=\"button\"\n          >\n            <span>Advanced Settings</span>\n            <svg class={{\n              'dropdown-arrow': true,\n              'dropdown-arrow--open': this.isAdvancedOpen,\n            }} viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M7 10l5 5 5-5z\"/>\n            </svg>\n          </button>\n\n          {this.isAdvancedOpen && (\n            <div class=\"advanced-panel\">\n              <div class=\"setting-item\">\n                <label class=\"setting-label\">Slippage Tolerance</label>\n                <div class=\"slippage-controls\">\n                  {[0.1, 0.5, 1.0].map((value) => (\n                    <button\n                      class={{\n                        'slippage-btn': true,\n                        'slippage-btn--active': this.slippage === value,\n                      }}\n                      onClick={() => this.slippage = value}\n                      type=\"button\"\n                    >\n                      {value}%\n                    </button>\n                  ))}\n                  <input\n                    class=\"slippage-input\"\n                    type=\"number\"\n                    min=\"0\"\n                    max=\"50\"\n                    step=\"0.1\"\n                    value={this.slippage}\n                    onInput={(e) => this.slippage = parseFloat((e.target as HTMLInputElement).value)}\n                    placeholder=\"Custom\"\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Action Button */}\n        <euclid-button\n          variant=\"primary\"\n          size=\"lg\"\n          full-width={true}\n          loading={this.loading}\n          disabled={!this.canExecute()}\n          onClick={this.handleLiquidity}\n        >\n          {this.getButtonText()}\n        </euclid-button>\n\n        {/* Pool Selector Dropdown */}\n        {this.isPoolSelectorOpen && (\n          <div class=\"pool-selector-dropdown\">\n            <div class=\"dropdown-header\">\n              <h4>Select Pool</h4>\n              <button class=\"close-button\" onClick={() => this.isPoolSelectorOpen = false}>×</button>\n            </div>\n            <div class=\"pool-list\">\n              {this.storePools.length > 0 ? (\n                this.storePools.map(pool => (\n                  <div\n                    key={pool.pool_id}\n                    class=\"pool-item\"\n                    onClick={() => this.selectStorePool(pool)}\n                  >\n                    <div class=\"pool-tokens\">\n                      <span class=\"pool-name\">{pool.token_1.toUpperCase()}/{pool.token_2.toUpperCase()}</span>\n                    </div>\n                    <div class=\"pool-stats\">\n                      <span class=\"apr\">APR: {pool.apr || '0.00%'}</span>\n                      <span class=\"tvl\">TVL: ${parseFloat(pool.total_liquidity || '0').toLocaleString()}</span>\n                    </div>\n                  </div>\n                ))\n              ) : (\n                <div class=\"no-pools\">No pools available</div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  private renderAddLiquidity() {\n    return (\n      <div class=\"liquidity-inputs\">\n        {/* Token A Input */}\n        <div class=\"token-input-section\">\n          <div class=\"input-header\">\n            <span class=\"input-label\">First Token</span>\n            {this.selectedPool?.tokenA.balance && (\n              <span class=\"balance-label\" onClick={() => this.handleMaxClick('tokenA')}>\n                Balance: {parseFloat(this.selectedPool.tokenA.balance).toLocaleString()}\n              </span>\n            )}\n          </div>\n\n          <euclid-token-input\n            id=\"token-a-input\"\n            value={this.tokenAAmount}\n            placeholder=\"0.0\"\n            show-max={!!this.selectedPool?.tokenA.balance}\n            onMaxClick={() => this.handleMaxClick('tokenA')}\n          >\n            <div slot=\"token\" class=\"token-display\">\n              {this.selectedStorePool ? (\n                <div class=\"selected-token\">\n                  <div class=\"token-info\">\n                    <span class=\"token-symbol\">{this.selectedStorePool.token_1.toUpperCase()}</span>\n                    <span class=\"token-name\">{this.selectedStorePool.token_1}</span>\n                  </div>\n                </div>\n              ) : (\n                <div class=\"no-pool-selected\">\n                  <span class=\"token-symbol\">TOKEN</span>\n                  <span class=\"token-name\">Select pool first</span>\n                </div>\n              )}\n            </div>\n          </euclid-token-input>\n        </div>\n\n        {/* Token B Input */}\n        <div class=\"token-input-section\">\n          <div class=\"input-header\">\n            <span class=\"input-label\">Second Token</span>\n            {this.selectedPool?.tokenB.balance && (\n              <span class=\"balance-label\" onClick={() => this.handleMaxClick('tokenB')}>\n                Balance: {parseFloat(this.selectedPool.tokenB.balance).toLocaleString()}\n              </span>\n            )}\n          </div>\n\n          <euclid-token-input\n            id=\"token-b-input\"\n            value={this.tokenBAmount}\n            placeholder=\"0.0\"\n            show-max={!!this.selectedPool?.tokenB.balance}\n            onMaxClick={() => this.handleMaxClick('tokenB')}\n          >\n            <div slot=\"token\" class=\"token-display\">\n              {this.selectedStorePool ? (\n                <div class=\"selected-token\">\n                  <div class=\"token-info\">\n                    <span class=\"token-symbol\">{this.selectedStorePool.token_2.toUpperCase()}</span>\n                    <span class=\"token-name\">{this.selectedStorePool.token_2}</span>\n                  </div>\n                </div>\n              ) : (\n                <div class=\"no-pool-selected\">\n                  <span class=\"token-symbol\">TOKEN</span>\n                  <span class=\"token-name\">Select pool first</span>\n                </div>\n              )}\n            </div>\n          </euclid-token-input>\n        </div>\n      </div>\n    );\n  }\n\n  private renderRemoveLiquidity() {\n    const position = this.getUserPosition();\n\n    return (\n      <div class=\"remove-liquidity\">\n        {/* Percentage Buttons */}\n        <div class=\"percentage-section\">\n          <div class=\"percentage-label\">Amount to Remove</div>\n          <div class=\"percentage-buttons\">\n            {[25, 50, 75, 100].map((percent) => (\n              <button\n                class={{\n                  'percentage-btn': true,\n                  'percentage-btn--active': this.lpPercentage === percent,\n                }}\n                onClick={() => this.handlePercentageClick(percent)}\n                type=\"button\"\n              >\n                {percent}%\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* LP Token Input */}\n        <div class=\"token-input-section\">\n          <div class=\"input-header\">\n            <span class=\"input-label\">LP Tokens to Remove</span>\n            {position && (\n              <span class=\"balance-label\" onClick={() => this.handleMaxClick('lp')}>\n                Balance: {parseFloat(position.lpTokenBalance).toLocaleString()}\n              </span>\n            )}\n          </div>\n\n          <euclid-token-input\n            id=\"lp-token-input\"\n            value={this.lpTokenAmount}\n            placeholder=\"0.0\"\n            show-max={!!position}\n            onMaxClick={() => this.handleMaxClick('lp')}\n          >\n            <div slot=\"token\" class=\"lp-token-display\">\n              {this.selectedPool ? (\n                <div class=\"lp-token-info\">\n                  <div class=\"token-pair\">\n                    {this.selectedPool.tokenA.logoUrl && (\n                      <img src={this.selectedPool.tokenA.logoUrl} alt={this.selectedPool.tokenA.symbol} class=\"token-logo\" />\n                    )}\n                    {this.selectedPool.tokenB.logoUrl && (\n                      <img src={this.selectedPool.tokenB.logoUrl} alt={this.selectedPool.tokenB.symbol} class=\"token-logo token-logo--overlap\" />\n                    )}\n                  </div>\n                  <span class=\"lp-symbol\">{this.selectedPool.lpTokenSymbol}</span>\n                </div>\n              ) : (\n                <span>Select Pool</span>\n              )}\n            </div>\n          </euclid-token-input>\n        </div>\n\n      </div>\n    );\n  }\n}\n"],"version":3}