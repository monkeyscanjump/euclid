{"version":3,"file":"euclid-pools-list.js","sourceRoot":"","sources":["../../../../src/components/features/euclid-pools-list/euclid-pools-list.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Prop, h, State, Event, EventEmitter, Watch } from '@stencil/core';\nimport type { PoolInfo, TokenMetadata } from '../../../utils/types/api.types';\nimport { marketStore } from '../../../store/market.store';\n\nexport interface UserPoolPosition {\n  poolId: string;\n  poolAddress: string;\n  lpTokenBalance: string;\n  shareOfPool: number;\n  tokenAAmount: string;\n  tokenBAmount: string;\n  value: number;\n  unclaimedRewards?: number;\n  stakingRewards?: number;\n}\n\nexport interface PoolFilters {\n  search: string;\n  sortBy: 'apr' | 'tvl' | 'volume' | 'fees' | 'myLiquidity';\n  sortOrder: 'asc' | 'desc';\n  showMyPools: boolean;\n}\n\n@Component({\n  tag: 'euclid-pools-list',\n  styleUrl: 'euclid-pools-list.css',\n  shadow: true,\n})\nexport class EuclidPoolsList {\n  /**\n   * Available pools data (gets from market store automatically)\n   * @deprecated Use store instead\n   */\n  @Prop() pools: PoolInfo[] = [];\n\n  /**\n   * Token metadata for logos and display names (gets from market store automatically)\n   * @deprecated Use store instead\n   */\n  @Prop() tokenMetadata: TokenMetadata[] = [];\n\n  /**\n   * User's positions in pools\n   */\n  @Prop() positions: UserPoolPosition[] = [];\n\n  /**\n   * Whether the component is in loading state (overrides store loading)\n   */\n  @Prop() loading: boolean = false;\n\n  /**\n   * Connected wallet address\n   */\n  @Prop() walletAddress: string = '';\n\n\n\n  /**\n   * Items per page for pagination\n   */\n  @Prop() itemsPerPage: number = 10;\n\n  /**\n   * Card title\n   */\n  @Prop() cardTitle: string = 'Liquidity Pools';\n\n  // Internal state\n  @State() filteredPools: PoolInfo[] = [];\n  @State() currentPage: number = 1;\n  @State() totalPages: number = 1;\n  @State() filters: PoolFilters = {\n    search: '',\n    sortBy: 'apr',\n    sortOrder: 'desc',\n    showMyPools: false,\n  };\n\n  // Store data (automatically synced)\n  @State() storePools: PoolInfo[] = [];\n  @State() storeTokens: TokenMetadata[] = [];\n  @State() storeLoading: boolean = false;\n\n  // Events\n  @Event() poolSelected: EventEmitter<PoolInfo>;\n  @Event() addLiquidity: EventEmitter<PoolInfo>;\n  @Event() removeLiquidity: EventEmitter<{ pool: PoolInfo; position: UserPoolPosition }>;\n  @Event() stakeTokens: EventEmitter<{ pool: PoolInfo; position?: UserPoolPosition }>;\n  @Event() claimRewards: EventEmitter<{ pool: PoolInfo; position: UserPoolPosition }>;\n  @Event() filtersChanged: EventEmitter<PoolFilters>;\n\n  componentWillLoad() {\n    // Connect to market store for automatic data updates\n    this.syncWithStore();\n\n    // Listen for store changes\n    marketStore.onChange('pools', () => {\n      this.syncWithStore();\n      this.applyFilters();\n    });\n\n    marketStore.onChange('tokens', () => {\n      this.syncWithStore();\n    });\n\n    // Initialize filters\n    this.applyFilters();\n  }\n\n  private syncWithStore() {\n    // Use store data if available, fallback to props\n    this.storePools = marketStore.state.pools.length > 0 ? marketStore.state.pools : this.pools;\n    this.storeTokens = marketStore.state.tokens.length > 0 ? marketStore.state.tokens : this.tokenMetadata;\n    this.storeLoading = marketStore.state.loading;\n\n    // Debug logging\n    console.log('🔄 Store sync:', {\n      storePools: this.storePools.length,\n      storeTokens: this.storeTokens.length,\n      storeLoading: this.storeLoading,\n      marketStorePools: marketStore.state.pools.length,\n      marketStoreTokens: marketStore.state.tokens.length,\n      marketStoreLoading: marketStore.state.loading\n    });\n  }\n\n  @Watch('pools')\n  watchPoolsChange() {\n    this.applyFilters();\n  }\n\n  @Watch('positions')\n  watchPositionsChange() {\n    this.applyFilters();\n  }\n\n  private applyFilters() {\n    // Use store data first, fallback to props for backward compatibility\n    const activePools = this.storePools.length > 0 ? this.storePools : this.pools;\n    let filtered = [...activePools];\n\n    // Apply search filter\n    if (this.filters.search) {\n      const searchLower = this.filters.search.toLowerCase();\n      filtered = filtered.filter(pool => {\n        const token1Meta = this.getTokenMetadata(pool.token_1);\n        const token2Meta = this.getTokenMetadata(pool.token_2);\n        const token1Name = token1Meta?.displayName || pool.token_1;\n        const token2Name = token2Meta?.displayName || pool.token_2;\n\n        return pool.token_1.toLowerCase().includes(searchLower) ||\n          pool.token_2.toLowerCase().includes(searchLower) ||\n          token1Name.toLowerCase().includes(searchLower) ||\n          token2Name.toLowerCase().includes(searchLower) ||\n          pool.pool_id.toLowerCase().includes(searchLower);\n      });\n    }\n\n    // Apply my pools filter\n    if (this.filters.showMyPools && this.walletAddress) {\n      const myPoolIds = this.positions.map(pos => pos.poolId);\n      filtered = filtered.filter(pool => myPoolIds.includes(pool.pool_id));\n    }\n\n    // Apply sorting\n    filtered.sort((a, b) => {\n      let aValue: number, bValue: number;\n\n      switch (this.filters.sortBy) {\n        case 'apr':\n          aValue = parseFloat((a.apr || '0%').replace('%', ''));\n          bValue = parseFloat((b.apr || '0%').replace('%', ''));\n          break;\n        case 'tvl':\n          aValue = parseFloat(a.total_liquidity || '0');\n          bValue = parseFloat(b.total_liquidity || '0');\n          break;\n        case 'volume':\n          aValue = parseFloat(a.volume_24h || '0');\n          bValue = parseFloat(b.volume_24h || '0');\n          break;\n        case 'fees':\n          aValue = parseFloat(a.fees_24h || '0');\n          bValue = parseFloat(b.fees_24h || '0');\n          break;\n        case 'myLiquidity': {\n          const aPosition = this.positions.find(pos => pos.poolId === a.pool_id);\n          const bPosition = this.positions.find(pos => pos.poolId === b.pool_id);\n          aValue = aPosition ? aPosition.value : 0;\n          bValue = bPosition ? bPosition.value : 0;\n          break;\n        }\n        default:\n          aValue = parseFloat((a.apr || '0%').replace('%', ''));\n          bValue = parseFloat((b.apr || '0%').replace('%', ''));\n      }\n\n      if (this.filters.sortOrder === 'asc') {\n        return aValue - bValue;\n      } else {\n        return bValue - aValue;\n      }\n    });\n\n    // Update state only if changed\n    const newFilteredLength = filtered.length;\n    const currentFilteredLength = this.filteredPools.length;\n    const hasChanged = newFilteredLength !== currentFilteredLength ||\n      !filtered.every((pool, index) => this.filteredPools[index]?.pool_id === pool.pool_id);\n\n    if (hasChanged) {\n      this.filteredPools = filtered;\n    }\n\n    const newTotalPages = Math.ceil(filtered.length / this.itemsPerPage);\n    if (this.totalPages !== newTotalPages) {\n      this.totalPages = newTotalPages;\n    }\n\n    // Reset to first page if current page is out of bounds\n    if (this.currentPage > this.totalPages && this.totalPages > 0) {\n      this.currentPage = 1;\n    }\n\n    this.filtersChanged.emit(this.filters);\n  }\n\n  private getTokenMetadata(tokenId: string): TokenMetadata | null {\n    const activeTokens = this.storeTokens.length > 0 ? this.storeTokens : this.tokenMetadata;\n    return activeTokens.find(token => token.tokenId === tokenId) || null;\n  }\n\n  private getUserPosition(poolId: string): UserPoolPosition | null {\n    return this.positions.find(pos => pos.poolId === poolId) || null;\n  }\n\n  private getTokensWithPools(): { tokenId: string; displayName: string }[] {\n    const activePools = this.storePools.length > 0 ? this.storePools : this.pools;\n    const activeTokens = this.storeTokens.length > 0 ? this.storeTokens : this.tokenMetadata;\n\n    // Get unique token IDs that appear in pools\n    const tokenIdsInPools = new Set<string>();\n    activePools.forEach(pool => {\n      tokenIdsInPools.add(pool.token_1);\n      tokenIdsInPools.add(pool.token_2);\n    });\n\n    // Return only tokens that have pools, with their metadata\n    return Array.from(tokenIdsInPools)\n      .map(tokenId => {\n        const tokenMeta = activeTokens.find(t => t.tokenId === tokenId);\n        return {\n          tokenId,\n          displayName: tokenMeta?.displayName || tokenId.toUpperCase()\n        };\n      })\n      .sort((a, b) => a.displayName.localeCompare(b.displayName));\n  }\n\n  private getPaginatedPools(): PoolInfo[] {\n    const startIndex = (this.currentPage - 1) * this.itemsPerPage;\n    const endIndex = startIndex + this.itemsPerPage;\n    return this.filteredPools.slice(startIndex, endIndex);\n  }\n\n  private handleFiltersChanged = (event: CustomEvent<PoolFilters>) => {\n    this.filters = event.detail;\n    this.currentPage = 1;\n    this.applyFilters();\n  };\n\n  private handlePageChange = (page: number) => {\n    if (page >= 1 && page <= this.totalPages) {\n      this.currentPage = page;\n    }\n  };\n\n  render() {\n    const activePools = this.storePools.length > 0 ? this.storePools : this.pools;\n    const activeTokens = this.storeTokens.length > 0 ? this.storeTokens : this.tokenMetadata;\n    const isLoading = (this.storeLoading || this.loading) && activePools.length === 0;\n    const paginatedPools = this.getPaginatedPools();\n    const totalTvl = activePools.reduce((sum, pool) => sum + parseFloat(pool.total_liquidity || '0'), 0);\n\n    // Debug logging\n    console.log('🎨 Render state:', {\n      activePools: activePools.length,\n      activeTokens: activeTokens.length,\n      filteredPools: this.filteredPools.length,\n      paginatedPools: paginatedPools.length,\n      isLoading,\n      storeLoading: this.storeLoading,\n      loading: this.loading\n    });\n\n    return (\n      <div class=\"pools-list\">\n        {/* Header */}\n        <div class=\"pools-header\">\n          <h3 class=\"pools-title\">{this.cardTitle}</h3>\n        </div>\n\n        {/* Filters */}\n        <pools-filters\n          filters={this.filters}\n          walletAddress={this.walletAddress}\n          onFiltersChanged={this.handleFiltersChanged}\n        />\n\n        {/* Stats */}\n        <pools-stats\n          totalPools={activePools.length}\n          filteredPools={this.filteredPools.length}\n          totalTvl={totalTvl}\n          userPositions={this.positions.length}\n          walletAddress={this.walletAddress}\n        />\n\n        {/* Content */}\n        <div class=\"pools-content\">\n          {isLoading ? (\n            <pools-loading count={6} />\n          ) : paginatedPools.length === 0 ? (\n            <div class=\"empty-state\">\n              <svg viewBox=\"0 0 64 64\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M31.968,0c-1.9626667,28.448-3.552,29.984-32,32c28.448,1.9626667,29.984,3.552,32,32c1.9626667-28.448,3.552-29.984,32-32C35.52,29.984,33.9306667,28.448,31.968,0z\"/>\n              </svg>\n              <span>No pools found matching your criteria</span>\n              <button\n                class=\"clear-filters-btn\"\n                onClick={() => {\n                  this.filters = {\n                    search: '',\n                    sortBy: 'apr',\n                    sortOrder: 'desc',\n                    showMyPools: false,\n                  };\n                  this.currentPage = 1;\n                  this.applyFilters();\n                }}\n                type=\"button\"\n              >\n                Clear Filters\n              </button>\n            </div>\n          ) : (\n            <div class=\"pools-grid\">\n              {paginatedPools.map(pool => (\n                <pool-item\n                  key={pool.pool_id}\n                  pool={pool}\n                  tokens={activeTokens}\n                  position={this.getUserPosition(pool.pool_id)}\n                  walletAddress={this.walletAddress}\n                  onAddLiquidity={(event) => this.addLiquidity.emit(event.detail)}\n                  onRemoveLiquidity={(event) => this.removeLiquidity.emit(event.detail)}\n                  onStakeTokens={(event) => this.stakeTokens.emit(event.detail)}\n                  onClaimRewards={(event) => this.claimRewards.emit(event.detail)}\n                />\n              ))}\n            </div>\n          )}\n        </div>\n\n        {/* Pagination */}\n        {this.totalPages > 1 && (\n          <div class=\"pagination\">\n            <button\n              class=\"pagination-btn\"\n              onClick={() => this.handlePageChange(this.currentPage - 1)}\n              disabled={this.currentPage === 1}\n              type=\"button\"\n            >\n              Previous\n            </button>\n\n            <div class=\"pagination-pages\">\n              {Array.from({ length: this.totalPages }, (_, i) => i + 1).map(page => (\n                <button\n                  key={page}\n                  class={{\n                    'pagination-page': true,\n                    'pagination-page--active': page === this.currentPage,\n                  }}\n                  onClick={() => this.handlePageChange(page)}\n                  type=\"button\"\n                >\n                  {page}\n                </button>\n              ))}\n            </div>\n\n            <button\n              class=\"pagination-btn\"\n              onClick={() => this.handlePageChange(this.currentPage + 1)}\n              disabled={this.currentPage === this.totalPages}\n              type=\"button\"\n            >\n              Next\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n"]}